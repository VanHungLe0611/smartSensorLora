ARM GAS  /tmp/ccC0MHur.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	hi2c1,76,4
  18              		.comm	hi2c3,76,4
  19              		.comm	hspi1,100,4
  20              		.comm	hspi2,100,4
  21              		.comm	huart1,128,4
  22              		.comm	huart2,128,4
  23              		.section	.text.main,"ax",%progbits
  24              		.align	1
  25              		.global	main
  26              		.arch armv7e-m
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  30              		.fpu fpv4-sp-d16
  32              	main:
  33              	.LFB130:
  34              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief          : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  * @attention
   8:Src/main.c    ****  *
   9:Src/main.c    ****  * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****  * All rights reserved.</center></h2>
  11:Src/main.c    ****  *
  12:Src/main.c    ****  * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****  * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****  * License. You may obtain a copy of the License at:
  15:Src/main.c    ****  *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****  *
  17:Src/main.c    ****  ******************************************************************************
  18:Src/main.c    ****  */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
ARM GAS  /tmp/ccC0MHur.s 			page 2


  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "dwt_stm32_delay.h"
  27:Src/main.c    **** 
  28:Src/main.c    **** /* USER CODE END Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN PTD */
  32:Src/main.c    **** 
  33:Src/main.c    **** /* USER CODE END PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PD */
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.c    **** I2C_HandleTypeDef hi2c1;
  46:Src/main.c    **** I2C_HandleTypeDef hi2c3;
  47:Src/main.c    **** 
  48:Src/main.c    **** SPI_HandleTypeDef hspi1;
  49:Src/main.c    **** SPI_HandleTypeDef hspi2;
  50:Src/main.c    **** 
  51:Src/main.c    **** UART_HandleTypeDef huart1;
  52:Src/main.c    **** UART_HandleTypeDef huart2;
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END PV */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  59:Src/main.c    **** void SystemClock_Config(void);
  60:Src/main.c    **** static void MX_GPIO_Init(void);
  61:Src/main.c    **** static void MX_I2C1_Init(void);
  62:Src/main.c    **** static void MX_I2C3_Init(void);
  63:Src/main.c    **** static void MX_SPI1_Init(void);
  64:Src/main.c    **** static void MX_SPI2_Init(void);
  65:Src/main.c    **** static void MX_USART1_UART_Init(void);
  66:Src/main.c    **** static void MX_USART2_UART_Init(void);
  67:Src/main.c    **** static void MX_USB_OTG_FS_USB_Init(void);
  68:Src/main.c    **** /* USER CODE BEGIN PFP */
  69:Src/main.c    **** uint32_t test_sensor_y401(void);
  70:Src/main.c    **** /* USER CODE END PFP */
  71:Src/main.c    **** 
  72:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  73:Src/main.c    **** /* USER CODE BEGIN 0 */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE END 0 */
  76:Src/main.c    **** 
  77:Src/main.c    **** /**
  78:Src/main.c    ****  * @brief  The application entry point.
  79:Src/main.c    ****  * @retval int
  80:Src/main.c    ****  */
  81:Src/main.c    **** int main(void) {
ARM GAS  /tmp/ccC0MHur.s 			page 3


  35              		.loc 1 81 16
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 8
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 82B0     		sub	sp, sp, #8
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 16
  47 0004 00AF     		add	r7, sp, #0
  48              	.LCFI2:
  49              		.cfi_def_cfa_register 7
  82:Src/main.c    **** 	/* USER CODE BEGIN 1 */
  83:Src/main.c    **** 
  84:Src/main.c    **** 	/* USER CODE END 1 */
  85:Src/main.c    **** 
  86:Src/main.c    **** 	/* MCU Configuration--------------------------------------------------------*/
  87:Src/main.c    **** 
  88:Src/main.c    **** 	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  89:Src/main.c    **** 	HAL_Init();
  50              		.loc 1 89 2
  51 0006 FFF7FEFF 		bl	HAL_Init
  90:Src/main.c    **** 
  91:Src/main.c    **** 	/* USER CODE BEGIN Init */
  92:Src/main.c    **** 
  93:Src/main.c    **** 	/* USER CODE END Init */
  94:Src/main.c    **** 
  95:Src/main.c    **** 	/* Configure the system clock */
  96:Src/main.c    **** 	SystemClock_Config();
  52              		.loc 1 96 2
  53 000a FFF7FEFF 		bl	SystemClock_Config
  97:Src/main.c    **** 
  98:Src/main.c    **** 	/* USER CODE BEGIN SysInit */
  99:Src/main.c    **** 
 100:Src/main.c    **** 	/* USER CODE END SysInit */
 101:Src/main.c    **** 
 102:Src/main.c    **** 	/* Initialize all configured peripherals */
 103:Src/main.c    **** 	MX_GPIO_Init();
  54              		.loc 1 103 2
  55 000e FFF7FEFF 		bl	MX_GPIO_Init
 104:Src/main.c    **** 	MX_I2C1_Init();
  56              		.loc 1 104 2
  57 0012 FFF7FEFF 		bl	MX_I2C1_Init
 105:Src/main.c    **** 	MX_I2C3_Init();
  58              		.loc 1 105 2
  59 0016 FFF7FEFF 		bl	MX_I2C3_Init
 106:Src/main.c    **** 	MX_SPI1_Init();
  60              		.loc 1 106 2
  61 001a FFF7FEFF 		bl	MX_SPI1_Init
 107:Src/main.c    **** 	MX_SPI2_Init();
  62              		.loc 1 107 2
  63 001e FFF7FEFF 		bl	MX_SPI2_Init
 108:Src/main.c    **** 	MX_USART1_UART_Init();
  64              		.loc 1 108 2
ARM GAS  /tmp/ccC0MHur.s 			page 4


  65 0022 FFF7FEFF 		bl	MX_USART1_UART_Init
 109:Src/main.c    **** 	MX_USART2_UART_Init();
  66              		.loc 1 109 2
  67 0026 FFF7FEFF 		bl	MX_USART2_UART_Init
 110:Src/main.c    **** 	MX_USB_OTG_FS_USB_Init();
  68              		.loc 1 110 2
  69 002a FFF7FEFF 		bl	MX_USB_OTG_FS_USB_Init
  70              	.L2:
 111:Src/main.c    **** 	/* USER CODE BEGIN 2 */
 112:Src/main.c    **** 	uint32_t distance;
 113:Src/main.c    **** 
 114:Src/main.c    **** 	/* USER CODE END 2 */
 115:Src/main.c    **** 
 116:Src/main.c    **** 	/* Infinite loop */
 117:Src/main.c    **** 	/* USER CODE BEGIN WHILE */
 118:Src/main.c    **** 	while (1) {
 119:Src/main.c    **** 		/* USER CODE END WHILE */
 120:Src/main.c    **** 
 121:Src/main.c    **** 		/* USER CODE BEGIN 3 */
 122:Src/main.c    **** 		distance = test_sensor_y401();
  71              		.loc 1 122 14 discriminator 1
  72 002e FFF7FEFF 		bl	test_sensor_y401
  73 0032 7860     		str	r0, [r7, #4]
 123:Src/main.c    **** 		HAL_Delay(200);
  74              		.loc 1 123 3 discriminator 1
  75 0034 C820     		movs	r0, #200
  76 0036 FFF7FEFF 		bl	HAL_Delay
 122:Src/main.c    **** 		HAL_Delay(200);
  77              		.loc 1 122 12 discriminator 1
  78 003a F8E7     		b	.L2
  79              		.cfi_endproc
  80              	.LFE130:
  82              		.section	.text.SystemClock_Config,"ax",%progbits
  83              		.align	1
  84              		.global	SystemClock_Config
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu fpv4-sp-d16
  90              	SystemClock_Config:
  91              	.LFB131:
 124:Src/main.c    **** 	}
 125:Src/main.c    **** 	/* USER CODE END 3 */
 126:Src/main.c    **** }
 127:Src/main.c    **** 
 128:Src/main.c    **** /**
 129:Src/main.c    ****  * @brief System Clock Configuration
 130:Src/main.c    ****  * @retval None
 131:Src/main.c    ****  */
 132:Src/main.c    **** void SystemClock_Config(void) {
  92              		.loc 1 132 31
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 232
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96 0000 80B5     		push	{r7, lr}
  97              	.LCFI3:
  98              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccC0MHur.s 			page 5


  99              		.cfi_offset 7, -8
 100              		.cfi_offset 14, -4
 101 0002 BAB0     		sub	sp, sp, #232
 102              	.LCFI4:
 103              		.cfi_def_cfa_offset 240
 104 0004 00AF     		add	r7, sp, #0
 105              	.LCFI5:
 106              		.cfi_def_cfa_register 7
 133:Src/main.c    **** 	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 107              		.loc 1 133 21
 108 0006 07F1A403 		add	r3, r7, #164
 109 000a 4422     		movs	r2, #68
 110 000c 0021     		movs	r1, #0
 111 000e 1846     		mov	r0, r3
 112 0010 FFF7FEFF 		bl	memset
 134:Src/main.c    **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 113              		.loc 1 134 21
 114 0014 07F19003 		add	r3, r7, #144
 115 0018 0022     		movs	r2, #0
 116 001a 1A60     		str	r2, [r3]
 117 001c 5A60     		str	r2, [r3, #4]
 118 001e 9A60     		str	r2, [r3, #8]
 119 0020 DA60     		str	r2, [r3, #12]
 120 0022 1A61     		str	r2, [r3, #16]
 135:Src/main.c    **** 	RCC_PeriphCLKInitTypeDef PeriphClkInit = { 0 };
 121              		.loc 1 135 27
 122 0024 3B1D     		adds	r3, r7, #4
 123 0026 8C22     		movs	r2, #140
 124 0028 0021     		movs	r1, #0
 125 002a 1846     		mov	r0, r3
 126 002c FFF7FEFF 		bl	memset
 136:Src/main.c    **** 
 137:Src/main.c    **** 	/** Configure LSE Drive Capability
 138:Src/main.c    **** 	 */
 139:Src/main.c    **** 	HAL_PWR_EnableBkUpAccess();
 127              		.loc 1 139 2
 128 0030 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 140:Src/main.c    **** 	__HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 129              		.loc 1 140 2
 130 0034 424B     		ldr	r3, .L8
 131 0036 D3F89030 		ldr	r3, [r3, #144]
 132 003a 414A     		ldr	r2, .L8
 133 003c 23F01803 		bic	r3, r3, #24
 134 0040 C2F89030 		str	r3, [r2, #144]
 141:Src/main.c    **** 	/** Initializes the CPU, AHB and APB busses clocks
 142:Src/main.c    **** 	 */
 143:Src/main.c    **** 	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE
 135              		.loc 1 143 35
 136 0044 1423     		movs	r3, #20
 137 0046 C7F8A430 		str	r3, [r7, #164]
 144:Src/main.c    **** 			| RCC_OSCILLATORTYPE_MSI;
 145:Src/main.c    **** 	RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 138              		.loc 1 145 29
 139 004a 0123     		movs	r3, #1
 140 004c C7F8AC30 		str	r3, [r7, #172]
 146:Src/main.c    **** 	RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 141              		.loc 1 146 29
ARM GAS  /tmp/ccC0MHur.s 			page 6


 142 0050 0123     		movs	r3, #1
 143 0052 C7F8BC30 		str	r3, [r7, #188]
 147:Src/main.c    **** 	RCC_OscInitStruct.MSICalibrationValue = 0;
 144              		.loc 1 147 40
 145 0056 0023     		movs	r3, #0
 146 0058 C7F8C030 		str	r3, [r7, #192]
 148:Src/main.c    **** 	RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 147              		.loc 1 148 34
 148 005c 6023     		movs	r3, #96
 149 005e C7F8C430 		str	r3, [r7, #196]
 149:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 150              		.loc 1 149 33
 151 0062 0223     		movs	r3, #2
 152 0064 C7F8CC30 		str	r3, [r7, #204]
 150:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 153              		.loc 1 150 34
 154 0068 0123     		movs	r3, #1
 155 006a C7F8D030 		str	r3, [r7, #208]
 151:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLM = 1;
 156              		.loc 1 151 29
 157 006e 0123     		movs	r3, #1
 158 0070 C7F8D430 		str	r3, [r7, #212]
 152:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLN = 40;
 159              		.loc 1 152 29
 160 0074 2823     		movs	r3, #40
 161 0076 C7F8D830 		str	r3, [r7, #216]
 153:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 162              		.loc 1 153 29
 163 007a 0223     		movs	r3, #2
 164 007c C7F8DC30 		str	r3, [r7, #220]
 154:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 165              		.loc 1 154 29
 166 0080 0223     		movs	r3, #2
 167 0082 C7F8E030 		str	r3, [r7, #224]
 155:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 168              		.loc 1 155 29
 169 0086 0223     		movs	r3, #2
 170 0088 C7F8E430 		str	r3, [r7, #228]
 156:Src/main.c    **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 171              		.loc 1 156 6
 172 008c 07F1A403 		add	r3, r7, #164
 173 0090 1846     		mov	r0, r3
 174 0092 FFF7FEFF 		bl	HAL_RCC_OscConfig
 175 0096 0346     		mov	r3, r0
 176              		.loc 1 156 5
 177 0098 002B     		cmp	r3, #0
 178 009a 01D0     		beq	.L4
 157:Src/main.c    **** 		Error_Handler();
 179              		.loc 1 157 3
 180 009c FFF7FEFF 		bl	Error_Handler
 181              	.L4:
 158:Src/main.c    **** 	}
 159:Src/main.c    **** 	/** Initializes the CPU, AHB and APB busses clocks
 160:Src/main.c    **** 	 */
 161:Src/main.c    **** 	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 182              		.loc 1 161 30
 183 00a0 0F23     		movs	r3, #15
ARM GAS  /tmp/ccC0MHur.s 			page 7


 184 00a2 C7F89030 		str	r3, [r7, #144]
 162:Src/main.c    **** 			| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 163:Src/main.c    **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 185              		.loc 1 163 33
 186 00a6 0323     		movs	r3, #3
 187 00a8 C7F89430 		str	r3, [r7, #148]
 164:Src/main.c    **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 188              		.loc 1 164 34
 189 00ac 0023     		movs	r3, #0
 190 00ae C7F89830 		str	r3, [r7, #152]
 165:Src/main.c    **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 191              		.loc 1 165 35
 192 00b2 0023     		movs	r3, #0
 193 00b4 C7F89C30 		str	r3, [r7, #156]
 166:Src/main.c    **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 194              		.loc 1 166 35
 195 00b8 0023     		movs	r3, #0
 196 00ba C7F8A030 		str	r3, [r7, #160]
 167:Src/main.c    **** 
 168:Src/main.c    **** 	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK) {
 197              		.loc 1 168 6
 198 00be 07F19003 		add	r3, r7, #144
 199 00c2 0421     		movs	r1, #4
 200 00c4 1846     		mov	r0, r3
 201 00c6 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 202 00ca 0346     		mov	r3, r0
 203              		.loc 1 168 5
 204 00cc 002B     		cmp	r3, #0
 205 00ce 01D0     		beq	.L5
 169:Src/main.c    **** 		Error_Handler();
 206              		.loc 1 169 3
 207 00d0 FFF7FEFF 		bl	Error_Handler
 208              	.L5:
 170:Src/main.c    **** 	}
 171:Src/main.c    **** 	PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1
 209              		.loc 1 171 37
 210 00d4 42F24313 		movw	r3, #8515
 211 00d8 7B60     		str	r3, [r7, #4]
 172:Src/main.c    **** 			| RCC_PERIPHCLK_USART2 | RCC_PERIPHCLK_I2C1 | RCC_PERIPHCLK_I2C3
 173:Src/main.c    **** 			| RCC_PERIPHCLK_USB;
 174:Src/main.c    **** 	PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 212              		.loc 1 174 37
 213 00da 0023     		movs	r3, #0
 214 00dc FB63     		str	r3, [r7, #60]
 175:Src/main.c    **** 	PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 215              		.loc 1 175 37
 216 00de 0023     		movs	r3, #0
 217 00e0 3B64     		str	r3, [r7, #64]
 176:Src/main.c    **** 	PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 218              		.loc 1 176 35
 219 00e2 0023     		movs	r3, #0
 220 00e4 7B65     		str	r3, [r7, #84]
 177:Src/main.c    **** 	PeriphClkInit.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 221              		.loc 1 177 35
 222 00e6 0023     		movs	r3, #0
 223 00e8 FB65     		str	r3, [r7, #92]
 178:Src/main.c    **** 	PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
ARM GAS  /tmp/ccC0MHur.s 			page 8


 224              		.loc 1 178 34
 225 00ea 4FF08063 		mov	r3, #67108864
 226 00ee 7B67     		str	r3, [r7, #116]
 179:Src/main.c    **** 	PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 227              		.loc 1 179 38
 228 00f0 0123     		movs	r3, #1
 229 00f2 BB60     		str	r3, [r7, #8]
 180:Src/main.c    **** 	PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 230              		.loc 1 180 33
 231 00f4 0123     		movs	r3, #1
 232 00f6 FB60     		str	r3, [r7, #12]
 181:Src/main.c    **** 	PeriphClkInit.PLLSAI1.PLLSAI1N = 24;
 233              		.loc 1 181 33
 234 00f8 1823     		movs	r3, #24
 235 00fa 3B61     		str	r3, [r7, #16]
 182:Src/main.c    **** 	PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV2;
 236              		.loc 1 182 33
 237 00fc 0223     		movs	r3, #2
 238 00fe 7B61     		str	r3, [r7, #20]
 183:Src/main.c    **** 	PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 239              		.loc 1 183 33
 240 0100 0223     		movs	r3, #2
 241 0102 BB61     		str	r3, [r7, #24]
 184:Src/main.c    **** 	PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 242              		.loc 1 184 33
 243 0104 0223     		movs	r3, #2
 244 0106 FB61     		str	r3, [r7, #28]
 185:Src/main.c    **** 	PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK;
 245              		.loc 1 185 40
 246 0108 4FF48013 		mov	r3, #1048576
 247 010c 3B62     		str	r3, [r7, #32]
 186:Src/main.c    **** 	if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 248              		.loc 1 186 6
 249 010e 3B1D     		adds	r3, r7, #4
 250 0110 1846     		mov	r0, r3
 251 0112 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 252 0116 0346     		mov	r3, r0
 253              		.loc 1 186 5
 254 0118 002B     		cmp	r3, #0
 255 011a 01D0     		beq	.L6
 187:Src/main.c    **** 		Error_Handler();
 256              		.loc 1 187 3
 257 011c FFF7FEFF 		bl	Error_Handler
 258              	.L6:
 188:Src/main.c    **** 	}
 189:Src/main.c    **** 	/** Configure the main internal regulator output voltage
 190:Src/main.c    **** 	 */
 191:Src/main.c    **** 	if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1)
 259              		.loc 1 191 6
 260 0120 4FF40070 		mov	r0, #512
 261 0124 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 262 0128 0346     		mov	r3, r0
 263              		.loc 1 191 5
 264 012a 002B     		cmp	r3, #0
 265 012c 01D0     		beq	.L7
 192:Src/main.c    **** 			!= HAL_OK) {
 193:Src/main.c    **** 		Error_Handler();
ARM GAS  /tmp/ccC0MHur.s 			page 9


 266              		.loc 1 193 3
 267 012e FFF7FEFF 		bl	Error_Handler
 268              	.L7:
 194:Src/main.c    **** 	}
 195:Src/main.c    **** 	/** Enable MSI Auto calibration
 196:Src/main.c    **** 	 */
 197:Src/main.c    **** 	HAL_RCCEx_EnableMSIPLLMode();
 269              		.loc 1 197 2
 270 0132 FFF7FEFF 		bl	HAL_RCCEx_EnableMSIPLLMode
 198:Src/main.c    **** }
 271              		.loc 1 198 1
 272 0136 00BF     		nop
 273 0138 E837     		adds	r7, r7, #232
 274              	.LCFI6:
 275              		.cfi_def_cfa_offset 8
 276 013a BD46     		mov	sp, r7
 277              	.LCFI7:
 278              		.cfi_def_cfa_register 13
 279              		@ sp needed
 280 013c 80BD     		pop	{r7, pc}
 281              	.L9:
 282 013e 00BF     		.align	2
 283              	.L8:
 284 0140 00100240 		.word	1073876992
 285              		.cfi_endproc
 286              	.LFE131:
 288              		.section	.text.MX_I2C1_Init,"ax",%progbits
 289              		.align	1
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv4-sp-d16
 295              	MX_I2C1_Init:
 296              	.LFB132:
 199:Src/main.c    **** 
 200:Src/main.c    **** /**
 201:Src/main.c    ****  * @brief I2C1 Initialization Function
 202:Src/main.c    ****  * @param None
 203:Src/main.c    ****  * @retval None
 204:Src/main.c    ****  */
 205:Src/main.c    **** static void MX_I2C1_Init(void) {
 297              		.loc 1 205 32
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301 0000 80B5     		push	{r7, lr}
 302              	.LCFI8:
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 7, -8
 305              		.cfi_offset 14, -4
 306 0002 00AF     		add	r7, sp, #0
 307              	.LCFI9:
 308              		.cfi_def_cfa_register 7
 206:Src/main.c    **** 
 207:Src/main.c    **** 	/* USER CODE BEGIN I2C1_Init 0 */
 208:Src/main.c    **** 
 209:Src/main.c    **** 	/* USER CODE END I2C1_Init 0 */
ARM GAS  /tmp/ccC0MHur.s 			page 10


 210:Src/main.c    **** 
 211:Src/main.c    **** 	/* USER CODE BEGIN I2C1_Init 1 */
 212:Src/main.c    **** 
 213:Src/main.c    **** 	/* USER CODE END I2C1_Init 1 */
 214:Src/main.c    **** 	hi2c1.Instance = I2C1;
 309              		.loc 1 214 17
 310 0004 1B4B     		ldr	r3, .L15
 311 0006 1C4A     		ldr	r2, .L15+4
 312 0008 1A60     		str	r2, [r3]
 215:Src/main.c    **** 	hi2c1.Init.Timing = 0x10909CEC;
 313              		.loc 1 215 20
 314 000a 1A4B     		ldr	r3, .L15
 315 000c 1B4A     		ldr	r2, .L15+8
 316 000e 5A60     		str	r2, [r3, #4]
 216:Src/main.c    **** 	hi2c1.Init.OwnAddress1 = 0;
 317              		.loc 1 216 25
 318 0010 184B     		ldr	r3, .L15
 319 0012 0022     		movs	r2, #0
 320 0014 9A60     		str	r2, [r3, #8]
 217:Src/main.c    **** 	hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 321              		.loc 1 217 28
 322 0016 174B     		ldr	r3, .L15
 323 0018 0122     		movs	r2, #1
 324 001a DA60     		str	r2, [r3, #12]
 218:Src/main.c    **** 	hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 325              		.loc 1 218 29
 326 001c 154B     		ldr	r3, .L15
 327 001e 0022     		movs	r2, #0
 328 0020 1A61     		str	r2, [r3, #16]
 219:Src/main.c    **** 	hi2c1.Init.OwnAddress2 = 0;
 329              		.loc 1 219 25
 330 0022 144B     		ldr	r3, .L15
 331 0024 0022     		movs	r2, #0
 332 0026 5A61     		str	r2, [r3, #20]
 220:Src/main.c    **** 	hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 333              		.loc 1 220 30
 334 0028 124B     		ldr	r3, .L15
 335 002a 0022     		movs	r2, #0
 336 002c 9A61     		str	r2, [r3, #24]
 221:Src/main.c    **** 	hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 337              		.loc 1 221 29
 338 002e 114B     		ldr	r3, .L15
 339 0030 0022     		movs	r2, #0
 340 0032 DA61     		str	r2, [r3, #28]
 222:Src/main.c    **** 	hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 341              		.loc 1 222 27
 342 0034 0F4B     		ldr	r3, .L15
 343 0036 0022     		movs	r2, #0
 344 0038 1A62     		str	r2, [r3, #32]
 223:Src/main.c    **** 	if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 345              		.loc 1 223 6
 346 003a 0E48     		ldr	r0, .L15
 347 003c FFF7FEFF 		bl	HAL_I2C_Init
 348 0040 0346     		mov	r3, r0
 349              		.loc 1 223 5
 350 0042 002B     		cmp	r3, #0
 351 0044 01D0     		beq	.L11
ARM GAS  /tmp/ccC0MHur.s 			page 11


 224:Src/main.c    **** 		Error_Handler();
 352              		.loc 1 224 3
 353 0046 FFF7FEFF 		bl	Error_Handler
 354              	.L11:
 225:Src/main.c    **** 	}
 226:Src/main.c    **** 	/** Configure Analogue filter
 227:Src/main.c    **** 	 */
 228:Src/main.c    **** 	if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE)
 355              		.loc 1 228 6
 356 004a 0021     		movs	r1, #0
 357 004c 0948     		ldr	r0, .L15
 358 004e FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 359 0052 0346     		mov	r3, r0
 360              		.loc 1 228 5
 361 0054 002B     		cmp	r3, #0
 362 0056 01D0     		beq	.L12
 229:Src/main.c    **** 			!= HAL_OK) {
 230:Src/main.c    **** 		Error_Handler();
 363              		.loc 1 230 3
 364 0058 FFF7FEFF 		bl	Error_Handler
 365              	.L12:
 231:Src/main.c    **** 	}
 232:Src/main.c    **** 	/** Configure Digital filter
 233:Src/main.c    **** 	 */
 234:Src/main.c    **** 	if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK) {
 366              		.loc 1 234 6
 367 005c 0021     		movs	r1, #0
 368 005e 0548     		ldr	r0, .L15
 369 0060 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 370 0064 0346     		mov	r3, r0
 371              		.loc 1 234 5
 372 0066 002B     		cmp	r3, #0
 373 0068 01D0     		beq	.L14
 235:Src/main.c    **** 		Error_Handler();
 374              		.loc 1 235 3
 375 006a FFF7FEFF 		bl	Error_Handler
 376              	.L14:
 236:Src/main.c    **** 	}
 237:Src/main.c    **** 	/* USER CODE BEGIN I2C1_Init 2 */
 238:Src/main.c    **** 
 239:Src/main.c    **** 	/* USER CODE END I2C1_Init 2 */
 240:Src/main.c    **** 
 241:Src/main.c    **** }
 377              		.loc 1 241 1
 378 006e 00BF     		nop
 379 0070 80BD     		pop	{r7, pc}
 380              	.L16:
 381 0072 00BF     		.align	2
 382              	.L15:
 383 0074 00000000 		.word	hi2c1
 384 0078 00540040 		.word	1073763328
 385 007c EC9C9010 		.word	277912812
 386              		.cfi_endproc
 387              	.LFE132:
 389              		.section	.text.MX_I2C3_Init,"ax",%progbits
 390              		.align	1
 391              		.syntax unified
ARM GAS  /tmp/ccC0MHur.s 			page 12


 392              		.thumb
 393              		.thumb_func
 394              		.fpu fpv4-sp-d16
 396              	MX_I2C3_Init:
 397              	.LFB133:
 242:Src/main.c    **** 
 243:Src/main.c    **** /**
 244:Src/main.c    ****  * @brief I2C3 Initialization Function
 245:Src/main.c    ****  * @param None
 246:Src/main.c    ****  * @retval None
 247:Src/main.c    ****  */
 248:Src/main.c    **** static void MX_I2C3_Init(void) {
 398              		.loc 1 248 32
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 1, uses_anonymous_args = 0
 402 0000 80B5     		push	{r7, lr}
 403              	.LCFI10:
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 7, -8
 406              		.cfi_offset 14, -4
 407 0002 00AF     		add	r7, sp, #0
 408              	.LCFI11:
 409              		.cfi_def_cfa_register 7
 249:Src/main.c    **** 
 250:Src/main.c    **** 	/* USER CODE BEGIN I2C3_Init 0 */
 251:Src/main.c    **** 
 252:Src/main.c    **** 	/* USER CODE END I2C3_Init 0 */
 253:Src/main.c    **** 
 254:Src/main.c    **** 	/* USER CODE BEGIN I2C3_Init 1 */
 255:Src/main.c    **** 
 256:Src/main.c    **** 	/* USER CODE END I2C3_Init 1 */
 257:Src/main.c    **** 	hi2c3.Instance = I2C3;
 410              		.loc 1 257 17
 411 0004 1B4B     		ldr	r3, .L22
 412 0006 1C4A     		ldr	r2, .L22+4
 413 0008 1A60     		str	r2, [r3]
 258:Src/main.c    **** 	hi2c3.Init.Timing = 0x10909CEC;
 414              		.loc 1 258 20
 415 000a 1A4B     		ldr	r3, .L22
 416 000c 1B4A     		ldr	r2, .L22+8
 417 000e 5A60     		str	r2, [r3, #4]
 259:Src/main.c    **** 	hi2c3.Init.OwnAddress1 = 0;
 418              		.loc 1 259 25
 419 0010 184B     		ldr	r3, .L22
 420 0012 0022     		movs	r2, #0
 421 0014 9A60     		str	r2, [r3, #8]
 260:Src/main.c    **** 	hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 422              		.loc 1 260 28
 423 0016 174B     		ldr	r3, .L22
 424 0018 0122     		movs	r2, #1
 425 001a DA60     		str	r2, [r3, #12]
 261:Src/main.c    **** 	hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 426              		.loc 1 261 29
 427 001c 154B     		ldr	r3, .L22
 428 001e 0022     		movs	r2, #0
 429 0020 1A61     		str	r2, [r3, #16]
ARM GAS  /tmp/ccC0MHur.s 			page 13


 262:Src/main.c    **** 	hi2c3.Init.OwnAddress2 = 0;
 430              		.loc 1 262 25
 431 0022 144B     		ldr	r3, .L22
 432 0024 0022     		movs	r2, #0
 433 0026 5A61     		str	r2, [r3, #20]
 263:Src/main.c    **** 	hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 434              		.loc 1 263 30
 435 0028 124B     		ldr	r3, .L22
 436 002a 0022     		movs	r2, #0
 437 002c 9A61     		str	r2, [r3, #24]
 264:Src/main.c    **** 	hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 438              		.loc 1 264 29
 439 002e 114B     		ldr	r3, .L22
 440 0030 0022     		movs	r2, #0
 441 0032 DA61     		str	r2, [r3, #28]
 265:Src/main.c    **** 	hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 442              		.loc 1 265 27
 443 0034 0F4B     		ldr	r3, .L22
 444 0036 0022     		movs	r2, #0
 445 0038 1A62     		str	r2, [r3, #32]
 266:Src/main.c    **** 	if (HAL_I2C_Init(&hi2c3) != HAL_OK) {
 446              		.loc 1 266 6
 447 003a 0E48     		ldr	r0, .L22
 448 003c FFF7FEFF 		bl	HAL_I2C_Init
 449 0040 0346     		mov	r3, r0
 450              		.loc 1 266 5
 451 0042 002B     		cmp	r3, #0
 452 0044 01D0     		beq	.L18
 267:Src/main.c    **** 		Error_Handler();
 453              		.loc 1 267 3
 454 0046 FFF7FEFF 		bl	Error_Handler
 455              	.L18:
 268:Src/main.c    **** 	}
 269:Src/main.c    **** 	/** Configure Analogue filter
 270:Src/main.c    **** 	 */
 271:Src/main.c    **** 	if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE)
 456              		.loc 1 271 6
 457 004a 0021     		movs	r1, #0
 458 004c 0948     		ldr	r0, .L22
 459 004e FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 460 0052 0346     		mov	r3, r0
 461              		.loc 1 271 5
 462 0054 002B     		cmp	r3, #0
 463 0056 01D0     		beq	.L19
 272:Src/main.c    **** 			!= HAL_OK) {
 273:Src/main.c    **** 		Error_Handler();
 464              		.loc 1 273 3
 465 0058 FFF7FEFF 		bl	Error_Handler
 466              	.L19:
 274:Src/main.c    **** 	}
 275:Src/main.c    **** 	/** Configure Digital filter
 276:Src/main.c    **** 	 */
 277:Src/main.c    **** 	if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK) {
 467              		.loc 1 277 6
 468 005c 0021     		movs	r1, #0
 469 005e 0548     		ldr	r0, .L22
 470 0060 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
ARM GAS  /tmp/ccC0MHur.s 			page 14


 471 0064 0346     		mov	r3, r0
 472              		.loc 1 277 5
 473 0066 002B     		cmp	r3, #0
 474 0068 01D0     		beq	.L21
 278:Src/main.c    **** 		Error_Handler();
 475              		.loc 1 278 3
 476 006a FFF7FEFF 		bl	Error_Handler
 477              	.L21:
 279:Src/main.c    **** 	}
 280:Src/main.c    **** 	/* USER CODE BEGIN I2C3_Init 2 */
 281:Src/main.c    **** 
 282:Src/main.c    **** 	/* USER CODE END I2C3_Init 2 */
 283:Src/main.c    **** 
 284:Src/main.c    **** }
 478              		.loc 1 284 1
 479 006e 00BF     		nop
 480 0070 80BD     		pop	{r7, pc}
 481              	.L23:
 482 0072 00BF     		.align	2
 483              	.L22:
 484 0074 00000000 		.word	hi2c3
 485 0078 005C0040 		.word	1073765376
 486 007c EC9C9010 		.word	277912812
 487              		.cfi_endproc
 488              	.LFE133:
 490              		.section	.text.MX_SPI1_Init,"ax",%progbits
 491              		.align	1
 492              		.syntax unified
 493              		.thumb
 494              		.thumb_func
 495              		.fpu fpv4-sp-d16
 497              	MX_SPI1_Init:
 498              	.LFB134:
 285:Src/main.c    **** 
 286:Src/main.c    **** /**
 287:Src/main.c    ****  * @brief SPI1 Initialization Function
 288:Src/main.c    ****  * @param None
 289:Src/main.c    ****  * @retval None
 290:Src/main.c    ****  */
 291:Src/main.c    **** static void MX_SPI1_Init(void) {
 499              		.loc 1 291 32
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 1, uses_anonymous_args = 0
 503 0000 80B5     		push	{r7, lr}
 504              	.LCFI12:
 505              		.cfi_def_cfa_offset 8
 506              		.cfi_offset 7, -8
 507              		.cfi_offset 14, -4
 508 0002 00AF     		add	r7, sp, #0
 509              	.LCFI13:
 510              		.cfi_def_cfa_register 7
 292:Src/main.c    **** 
 293:Src/main.c    **** 	/* USER CODE BEGIN SPI1_Init 0 */
 294:Src/main.c    **** 
 295:Src/main.c    **** 	/* USER CODE END SPI1_Init 0 */
 296:Src/main.c    **** 
ARM GAS  /tmp/ccC0MHur.s 			page 15


 297:Src/main.c    **** 	/* USER CODE BEGIN SPI1_Init 1 */
 298:Src/main.c    **** 
 299:Src/main.c    **** 	/* USER CODE END SPI1_Init 1 */
 300:Src/main.c    **** 	/* SPI1 parameter configuration*/
 301:Src/main.c    **** 	hspi1.Instance = SPI1;
 511              		.loc 1 301 17
 512 0004 1B4B     		ldr	r3, .L27
 513 0006 1C4A     		ldr	r2, .L27+4
 514 0008 1A60     		str	r2, [r3]
 302:Src/main.c    **** 	hspi1.Init.Mode = SPI_MODE_MASTER;
 515              		.loc 1 302 18
 516 000a 1A4B     		ldr	r3, .L27
 517 000c 4FF48272 		mov	r2, #260
 518 0010 5A60     		str	r2, [r3, #4]
 303:Src/main.c    **** 	hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 519              		.loc 1 303 23
 520 0012 184B     		ldr	r3, .L27
 521 0014 0022     		movs	r2, #0
 522 0016 9A60     		str	r2, [r3, #8]
 304:Src/main.c    **** 	hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 523              		.loc 1 304 22
 524 0018 164B     		ldr	r3, .L27
 525 001a 4FF44072 		mov	r2, #768
 526 001e DA60     		str	r2, [r3, #12]
 305:Src/main.c    **** 	hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 527              		.loc 1 305 25
 528 0020 144B     		ldr	r3, .L27
 529 0022 0022     		movs	r2, #0
 530 0024 1A61     		str	r2, [r3, #16]
 306:Src/main.c    **** 	hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 531              		.loc 1 306 22
 532 0026 134B     		ldr	r3, .L27
 533 0028 0022     		movs	r2, #0
 534 002a 5A61     		str	r2, [r3, #20]
 307:Src/main.c    **** 	hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 535              		.loc 1 307 17
 536 002c 114B     		ldr	r3, .L27
 537 002e 4FF48022 		mov	r2, #262144
 538 0032 9A61     		str	r2, [r3, #24]
 308:Src/main.c    **** 	hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 539              		.loc 1 308 31
 540 0034 0F4B     		ldr	r3, .L27
 541 0036 0022     		movs	r2, #0
 542 0038 DA61     		str	r2, [r3, #28]
 309:Src/main.c    **** 	hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 543              		.loc 1 309 22
 544 003a 0E4B     		ldr	r3, .L27
 545 003c 0022     		movs	r2, #0
 546 003e 1A62     		str	r2, [r3, #32]
 310:Src/main.c    **** 	hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 547              		.loc 1 310 20
 548 0040 0C4B     		ldr	r3, .L27
 549 0042 0022     		movs	r2, #0
 550 0044 5A62     		str	r2, [r3, #36]
 311:Src/main.c    **** 	hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 551              		.loc 1 311 28
 552 0046 0B4B     		ldr	r3, .L27
ARM GAS  /tmp/ccC0MHur.s 			page 16


 553 0048 0022     		movs	r2, #0
 554 004a 9A62     		str	r2, [r3, #40]
 312:Src/main.c    **** 	hspi1.Init.CRCPolynomial = 7;
 555              		.loc 1 312 27
 556 004c 094B     		ldr	r3, .L27
 557 004e 0722     		movs	r2, #7
 558 0050 DA62     		str	r2, [r3, #44]
 313:Src/main.c    **** 	hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 559              		.loc 1 313 23
 560 0052 084B     		ldr	r3, .L27
 561 0054 0022     		movs	r2, #0
 562 0056 1A63     		str	r2, [r3, #48]
 314:Src/main.c    **** 	hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 563              		.loc 1 314 22
 564 0058 064B     		ldr	r3, .L27
 565 005a 0822     		movs	r2, #8
 566 005c 5A63     		str	r2, [r3, #52]
 315:Src/main.c    **** 	if (HAL_SPI_Init(&hspi1) != HAL_OK) {
 567              		.loc 1 315 6
 568 005e 0548     		ldr	r0, .L27
 569 0060 FFF7FEFF 		bl	HAL_SPI_Init
 570 0064 0346     		mov	r3, r0
 571              		.loc 1 315 5
 572 0066 002B     		cmp	r3, #0
 573 0068 01D0     		beq	.L26
 316:Src/main.c    **** 		Error_Handler();
 574              		.loc 1 316 3
 575 006a FFF7FEFF 		bl	Error_Handler
 576              	.L26:
 317:Src/main.c    **** 	}
 318:Src/main.c    **** 	/* USER CODE BEGIN SPI1_Init 2 */
 319:Src/main.c    **** 
 320:Src/main.c    **** 	/* USER CODE END SPI1_Init 2 */
 321:Src/main.c    **** 
 322:Src/main.c    **** }
 577              		.loc 1 322 1
 578 006e 00BF     		nop
 579 0070 80BD     		pop	{r7, pc}
 580              	.L28:
 581 0072 00BF     		.align	2
 582              	.L27:
 583 0074 00000000 		.word	hspi1
 584 0078 00300140 		.word	1073819648
 585              		.cfi_endproc
 586              	.LFE134:
 588              		.section	.text.MX_SPI2_Init,"ax",%progbits
 589              		.align	1
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 593              		.fpu fpv4-sp-d16
 595              	MX_SPI2_Init:
 596              	.LFB135:
 323:Src/main.c    **** 
 324:Src/main.c    **** /**
 325:Src/main.c    ****  * @brief SPI2 Initialization Function
 326:Src/main.c    ****  * @param None
ARM GAS  /tmp/ccC0MHur.s 			page 17


 327:Src/main.c    ****  * @retval None
 328:Src/main.c    ****  */
 329:Src/main.c    **** static void MX_SPI2_Init(void) {
 597              		.loc 1 329 32
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 80B5     		push	{r7, lr}
 602              	.LCFI14:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 00AF     		add	r7, sp, #0
 607              	.LCFI15:
 608              		.cfi_def_cfa_register 7
 330:Src/main.c    **** 
 331:Src/main.c    **** 	/* USER CODE BEGIN SPI2_Init 0 */
 332:Src/main.c    **** 
 333:Src/main.c    **** 	/* USER CODE END SPI2_Init 0 */
 334:Src/main.c    **** 
 335:Src/main.c    **** 	/* USER CODE BEGIN SPI2_Init 1 */
 336:Src/main.c    **** 
 337:Src/main.c    **** 	/* USER CODE END SPI2_Init 1 */
 338:Src/main.c    **** 	/* SPI2 parameter configuration*/
 339:Src/main.c    **** 	hspi2.Instance = SPI2;
 609              		.loc 1 339 17
 610 0004 1B4B     		ldr	r3, .L32
 611 0006 1C4A     		ldr	r2, .L32+4
 612 0008 1A60     		str	r2, [r3]
 340:Src/main.c    **** 	hspi2.Init.Mode = SPI_MODE_MASTER;
 613              		.loc 1 340 18
 614 000a 1A4B     		ldr	r3, .L32
 615 000c 4FF48272 		mov	r2, #260
 616 0010 5A60     		str	r2, [r3, #4]
 341:Src/main.c    **** 	hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 617              		.loc 1 341 23
 618 0012 184B     		ldr	r3, .L32
 619 0014 0022     		movs	r2, #0
 620 0016 9A60     		str	r2, [r3, #8]
 342:Src/main.c    **** 	hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 621              		.loc 1 342 22
 622 0018 164B     		ldr	r3, .L32
 623 001a 4FF44072 		mov	r2, #768
 624 001e DA60     		str	r2, [r3, #12]
 343:Src/main.c    **** 	hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 625              		.loc 1 343 25
 626 0020 144B     		ldr	r3, .L32
 627 0022 0022     		movs	r2, #0
 628 0024 1A61     		str	r2, [r3, #16]
 344:Src/main.c    **** 	hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 629              		.loc 1 344 22
 630 0026 134B     		ldr	r3, .L32
 631 0028 0022     		movs	r2, #0
 632 002a 5A61     		str	r2, [r3, #20]
 345:Src/main.c    **** 	hspi2.Init.NSS = SPI_NSS_HARD_OUTPUT;
 633              		.loc 1 345 17
 634 002c 114B     		ldr	r3, .L32
ARM GAS  /tmp/ccC0MHur.s 			page 18


 635 002e 4FF48022 		mov	r2, #262144
 636 0032 9A61     		str	r2, [r3, #24]
 346:Src/main.c    **** 	hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 637              		.loc 1 346 31
 638 0034 0F4B     		ldr	r3, .L32
 639 0036 0022     		movs	r2, #0
 640 0038 DA61     		str	r2, [r3, #28]
 347:Src/main.c    **** 	hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 641              		.loc 1 347 22
 642 003a 0E4B     		ldr	r3, .L32
 643 003c 0022     		movs	r2, #0
 644 003e 1A62     		str	r2, [r3, #32]
 348:Src/main.c    **** 	hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 645              		.loc 1 348 20
 646 0040 0C4B     		ldr	r3, .L32
 647 0042 0022     		movs	r2, #0
 648 0044 5A62     		str	r2, [r3, #36]
 349:Src/main.c    **** 	hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 649              		.loc 1 349 28
 650 0046 0B4B     		ldr	r3, .L32
 651 0048 0022     		movs	r2, #0
 652 004a 9A62     		str	r2, [r3, #40]
 350:Src/main.c    **** 	hspi2.Init.CRCPolynomial = 7;
 653              		.loc 1 350 27
 654 004c 094B     		ldr	r3, .L32
 655 004e 0722     		movs	r2, #7
 656 0050 DA62     		str	r2, [r3, #44]
 351:Src/main.c    **** 	hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 657              		.loc 1 351 23
 658 0052 084B     		ldr	r3, .L32
 659 0054 0022     		movs	r2, #0
 660 0056 1A63     		str	r2, [r3, #48]
 352:Src/main.c    **** 	hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 661              		.loc 1 352 22
 662 0058 064B     		ldr	r3, .L32
 663 005a 0822     		movs	r2, #8
 664 005c 5A63     		str	r2, [r3, #52]
 353:Src/main.c    **** 	if (HAL_SPI_Init(&hspi2) != HAL_OK) {
 665              		.loc 1 353 6
 666 005e 0548     		ldr	r0, .L32
 667 0060 FFF7FEFF 		bl	HAL_SPI_Init
 668 0064 0346     		mov	r3, r0
 669              		.loc 1 353 5
 670 0066 002B     		cmp	r3, #0
 671 0068 01D0     		beq	.L31
 354:Src/main.c    **** 		Error_Handler();
 672              		.loc 1 354 3
 673 006a FFF7FEFF 		bl	Error_Handler
 674              	.L31:
 355:Src/main.c    **** 	}
 356:Src/main.c    **** 	/* USER CODE BEGIN SPI2_Init 2 */
 357:Src/main.c    **** 
 358:Src/main.c    **** 	/* USER CODE END SPI2_Init 2 */
 359:Src/main.c    **** 
 360:Src/main.c    **** }
 675              		.loc 1 360 1
 676 006e 00BF     		nop
ARM GAS  /tmp/ccC0MHur.s 			page 19


 677 0070 80BD     		pop	{r7, pc}
 678              	.L33:
 679 0072 00BF     		.align	2
 680              	.L32:
 681 0074 00000000 		.word	hspi2
 682 0078 00380040 		.word	1073756160
 683              		.cfi_endproc
 684              	.LFE135:
 686              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 687              		.align	1
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv4-sp-d16
 693              	MX_USART1_UART_Init:
 694              	.LFB136:
 361:Src/main.c    **** 
 362:Src/main.c    **** /**
 363:Src/main.c    ****  * @brief USART1 Initialization Function
 364:Src/main.c    ****  * @param None
 365:Src/main.c    ****  * @retval None
 366:Src/main.c    ****  */
 367:Src/main.c    **** static void MX_USART1_UART_Init(void) {
 695              		.loc 1 367 39
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 1, uses_anonymous_args = 0
 699 0000 80B5     		push	{r7, lr}
 700              	.LCFI16:
 701              		.cfi_def_cfa_offset 8
 702              		.cfi_offset 7, -8
 703              		.cfi_offset 14, -4
 704 0002 00AF     		add	r7, sp, #0
 705              	.LCFI17:
 706              		.cfi_def_cfa_register 7
 368:Src/main.c    **** 
 369:Src/main.c    **** 	/* USER CODE BEGIN USART1_Init 0 */
 370:Src/main.c    **** 
 371:Src/main.c    **** 	/* USER CODE END USART1_Init 0 */
 372:Src/main.c    **** 
 373:Src/main.c    **** 	/* USER CODE BEGIN USART1_Init 1 */
 374:Src/main.c    **** 
 375:Src/main.c    **** 	/* USER CODE END USART1_Init 1 */
 376:Src/main.c    **** 	huart1.Instance = USART1;
 707              		.loc 1 376 18
 708 0004 144B     		ldr	r3, .L37
 709 0006 154A     		ldr	r2, .L37+4
 710 0008 1A60     		str	r2, [r3]
 377:Src/main.c    **** 	huart1.Init.BaudRate = 115200;
 711              		.loc 1 377 23
 712 000a 134B     		ldr	r3, .L37
 713 000c 4FF4E132 		mov	r2, #115200
 714 0010 5A60     		str	r2, [r3, #4]
 378:Src/main.c    **** 	huart1.Init.WordLength = UART_WORDLENGTH_8B;
 715              		.loc 1 378 25
 716 0012 114B     		ldr	r3, .L37
 717 0014 0022     		movs	r2, #0
ARM GAS  /tmp/ccC0MHur.s 			page 20


 718 0016 9A60     		str	r2, [r3, #8]
 379:Src/main.c    **** 	huart1.Init.StopBits = UART_STOPBITS_1;
 719              		.loc 1 379 23
 720 0018 0F4B     		ldr	r3, .L37
 721 001a 0022     		movs	r2, #0
 722 001c DA60     		str	r2, [r3, #12]
 380:Src/main.c    **** 	huart1.Init.Parity = UART_PARITY_NONE;
 723              		.loc 1 380 21
 724 001e 0E4B     		ldr	r3, .L37
 725 0020 0022     		movs	r2, #0
 726 0022 1A61     		str	r2, [r3, #16]
 381:Src/main.c    **** 	huart1.Init.Mode = UART_MODE_TX_RX;
 727              		.loc 1 381 19
 728 0024 0C4B     		ldr	r3, .L37
 729 0026 0C22     		movs	r2, #12
 730 0028 5A61     		str	r2, [r3, #20]
 382:Src/main.c    **** 	huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 731              		.loc 1 382 24
 732 002a 0B4B     		ldr	r3, .L37
 733 002c 0022     		movs	r2, #0
 734 002e 9A61     		str	r2, [r3, #24]
 383:Src/main.c    **** 	huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 735              		.loc 1 383 27
 736 0030 094B     		ldr	r3, .L37
 737 0032 0022     		movs	r2, #0
 738 0034 DA61     		str	r2, [r3, #28]
 384:Src/main.c    **** 	huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 739              		.loc 1 384 29
 740 0036 084B     		ldr	r3, .L37
 741 0038 0022     		movs	r2, #0
 742 003a 1A62     		str	r2, [r3, #32]
 385:Src/main.c    **** 	huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 743              		.loc 1 385 37
 744 003c 064B     		ldr	r3, .L37
 745 003e 0022     		movs	r2, #0
 746 0040 5A62     		str	r2, [r3, #36]
 386:Src/main.c    **** 	if (HAL_UART_Init(&huart1) != HAL_OK) {
 747              		.loc 1 386 6
 748 0042 0548     		ldr	r0, .L37
 749 0044 FFF7FEFF 		bl	HAL_UART_Init
 750 0048 0346     		mov	r3, r0
 751              		.loc 1 386 5
 752 004a 002B     		cmp	r3, #0
 753 004c 01D0     		beq	.L36
 387:Src/main.c    **** 		Error_Handler();
 754              		.loc 1 387 3
 755 004e FFF7FEFF 		bl	Error_Handler
 756              	.L36:
 388:Src/main.c    **** 	}
 389:Src/main.c    **** 	/* USER CODE BEGIN USART1_Init 2 */
 390:Src/main.c    **** 
 391:Src/main.c    **** 	/* USER CODE END USART1_Init 2 */
 392:Src/main.c    **** 
 393:Src/main.c    **** }
 757              		.loc 1 393 1
 758 0052 00BF     		nop
 759 0054 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccC0MHur.s 			page 21


 760              	.L38:
 761 0056 00BF     		.align	2
 762              	.L37:
 763 0058 00000000 		.word	huart1
 764 005c 00380140 		.word	1073821696
 765              		.cfi_endproc
 766              	.LFE136:
 768              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 769              		.align	1
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 773              		.fpu fpv4-sp-d16
 775              	MX_USART2_UART_Init:
 776              	.LFB137:
 394:Src/main.c    **** 
 395:Src/main.c    **** /**
 396:Src/main.c    ****  * @brief USART2 Initialization Function
 397:Src/main.c    ****  * @param None
 398:Src/main.c    ****  * @retval None
 399:Src/main.c    ****  */
 400:Src/main.c    **** static void MX_USART2_UART_Init(void) {
 777              		.loc 1 400 39
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 1, uses_anonymous_args = 0
 781 0000 80B5     		push	{r7, lr}
 782              	.LCFI18:
 783              		.cfi_def_cfa_offset 8
 784              		.cfi_offset 7, -8
 785              		.cfi_offset 14, -4
 786 0002 00AF     		add	r7, sp, #0
 787              	.LCFI19:
 788              		.cfi_def_cfa_register 7
 401:Src/main.c    **** 
 402:Src/main.c    **** 	/* USER CODE BEGIN USART2_Init 0 */
 403:Src/main.c    **** 
 404:Src/main.c    **** 	/* USER CODE END USART2_Init 0 */
 405:Src/main.c    **** 
 406:Src/main.c    **** 	/* USER CODE BEGIN USART2_Init 1 */
 407:Src/main.c    **** 
 408:Src/main.c    **** 	/* USER CODE END USART2_Init 1 */
 409:Src/main.c    **** 	huart2.Instance = USART2;
 789              		.loc 1 409 18
 790 0004 144B     		ldr	r3, .L42
 791 0006 154A     		ldr	r2, .L42+4
 792 0008 1A60     		str	r2, [r3]
 410:Src/main.c    **** 	huart2.Init.BaudRate = 115200;
 793              		.loc 1 410 23
 794 000a 134B     		ldr	r3, .L42
 795 000c 4FF4E132 		mov	r2, #115200
 796 0010 5A60     		str	r2, [r3, #4]
 411:Src/main.c    **** 	huart2.Init.WordLength = UART_WORDLENGTH_8B;
 797              		.loc 1 411 25
 798 0012 114B     		ldr	r3, .L42
 799 0014 0022     		movs	r2, #0
 800 0016 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccC0MHur.s 			page 22


 412:Src/main.c    **** 	huart2.Init.StopBits = UART_STOPBITS_1;
 801              		.loc 1 412 23
 802 0018 0F4B     		ldr	r3, .L42
 803 001a 0022     		movs	r2, #0
 804 001c DA60     		str	r2, [r3, #12]
 413:Src/main.c    **** 	huart2.Init.Parity = UART_PARITY_NONE;
 805              		.loc 1 413 21
 806 001e 0E4B     		ldr	r3, .L42
 807 0020 0022     		movs	r2, #0
 808 0022 1A61     		str	r2, [r3, #16]
 414:Src/main.c    **** 	huart2.Init.Mode = UART_MODE_TX_RX;
 809              		.loc 1 414 19
 810 0024 0C4B     		ldr	r3, .L42
 811 0026 0C22     		movs	r2, #12
 812 0028 5A61     		str	r2, [r3, #20]
 415:Src/main.c    **** 	huart2.Init.HwFlowCtl = UART_HWCONTROL_RTS_CTS;
 813              		.loc 1 415 24
 814 002a 0B4B     		ldr	r3, .L42
 815 002c 4FF44072 		mov	r2, #768
 816 0030 9A61     		str	r2, [r3, #24]
 416:Src/main.c    **** 	huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 817              		.loc 1 416 27
 818 0032 094B     		ldr	r3, .L42
 819 0034 0022     		movs	r2, #0
 820 0036 DA61     		str	r2, [r3, #28]
 417:Src/main.c    **** 	huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 821              		.loc 1 417 29
 822 0038 074B     		ldr	r3, .L42
 823 003a 0022     		movs	r2, #0
 824 003c 1A62     		str	r2, [r3, #32]
 418:Src/main.c    **** 	huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 825              		.loc 1 418 37
 826 003e 064B     		ldr	r3, .L42
 827 0040 0022     		movs	r2, #0
 828 0042 5A62     		str	r2, [r3, #36]
 419:Src/main.c    **** 	if (HAL_UART_Init(&huart2) != HAL_OK) {
 829              		.loc 1 419 6
 830 0044 0448     		ldr	r0, .L42
 831 0046 FFF7FEFF 		bl	HAL_UART_Init
 832 004a 0346     		mov	r3, r0
 833              		.loc 1 419 5
 834 004c 002B     		cmp	r3, #0
 835 004e 01D0     		beq	.L41
 420:Src/main.c    **** 		Error_Handler();
 836              		.loc 1 420 3
 837 0050 FFF7FEFF 		bl	Error_Handler
 838              	.L41:
 421:Src/main.c    **** 	}
 422:Src/main.c    **** 	/* USER CODE BEGIN USART2_Init 2 */
 423:Src/main.c    **** 
 424:Src/main.c    **** 	/* USER CODE END USART2_Init 2 */
 425:Src/main.c    **** 
 426:Src/main.c    **** }
 839              		.loc 1 426 1
 840 0054 00BF     		nop
 841 0056 80BD     		pop	{r7, pc}
 842              	.L43:
ARM GAS  /tmp/ccC0MHur.s 			page 23


 843              		.align	2
 844              	.L42:
 845 0058 00000000 		.word	huart2
 846 005c 00440040 		.word	1073759232
 847              		.cfi_endproc
 848              	.LFE137:
 850              		.section	.text.MX_USB_OTG_FS_USB_Init,"ax",%progbits
 851              		.align	1
 852              		.syntax unified
 853              		.thumb
 854              		.thumb_func
 855              		.fpu fpv4-sp-d16
 857              	MX_USB_OTG_FS_USB_Init:
 858              	.LFB138:
 427:Src/main.c    **** 
 428:Src/main.c    **** /**
 429:Src/main.c    ****  * @brief USB_OTG_FS Initialization Function
 430:Src/main.c    ****  * @param None
 431:Src/main.c    ****  * @retval None
 432:Src/main.c    ****  */
 433:Src/main.c    **** static void MX_USB_OTG_FS_USB_Init(void) {
 859              		.loc 1 433 42
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 1, uses_anonymous_args = 0
 863              		@ link register save eliminated.
 864 0000 80B4     		push	{r7}
 865              	.LCFI20:
 866              		.cfi_def_cfa_offset 4
 867              		.cfi_offset 7, -4
 868 0002 00AF     		add	r7, sp, #0
 869              	.LCFI21:
 870              		.cfi_def_cfa_register 7
 434:Src/main.c    **** 
 435:Src/main.c    **** 	/* USER CODE BEGIN USB_OTG_FS_Init 0 */
 436:Src/main.c    **** 
 437:Src/main.c    **** 	/* USER CODE END USB_OTG_FS_Init 0 */
 438:Src/main.c    **** 
 439:Src/main.c    **** 	/* USER CODE BEGIN USB_OTG_FS_Init 1 */
 440:Src/main.c    **** 
 441:Src/main.c    **** 	/* USER CODE END USB_OTG_FS_Init 1 */
 442:Src/main.c    **** 	/* USER CODE BEGIN USB_OTG_FS_Init 2 */
 443:Src/main.c    **** 
 444:Src/main.c    **** 	/* USER CODE END USB_OTG_FS_Init 2 */
 445:Src/main.c    **** 
 446:Src/main.c    **** }
 871              		.loc 1 446 1
 872 0004 00BF     		nop
 873 0006 BD46     		mov	sp, r7
 874              	.LCFI22:
 875              		.cfi_def_cfa_register 13
 876              		@ sp needed
 877 0008 5DF8047B 		ldr	r7, [sp], #4
 878              	.LCFI23:
 879              		.cfi_restore 7
 880              		.cfi_def_cfa_offset 0
 881 000c 7047     		bx	lr
ARM GAS  /tmp/ccC0MHur.s 			page 24


 882              		.cfi_endproc
 883              	.LFE138:
 885              		.section	.text.MX_GPIO_Init,"ax",%progbits
 886              		.align	1
 887              		.syntax unified
 888              		.thumb
 889              		.thumb_func
 890              		.fpu fpv4-sp-d16
 892              	MX_GPIO_Init:
 893              	.LFB139:
 447:Src/main.c    **** 
 448:Src/main.c    **** /**
 449:Src/main.c    ****  * @brief GPIO Initialization Function
 450:Src/main.c    ****  * @param None
 451:Src/main.c    ****  * @retval None
 452:Src/main.c    ****  */
 453:Src/main.c    **** static void MX_GPIO_Init(void) {
 894              		.loc 1 453 32
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 40
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898 0000 80B5     		push	{r7, lr}
 899              	.LCFI24:
 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 7, -8
 902              		.cfi_offset 14, -4
 903 0002 8AB0     		sub	sp, sp, #40
 904              	.LCFI25:
 905              		.cfi_def_cfa_offset 48
 906 0004 00AF     		add	r7, sp, #0
 907              	.LCFI26:
 908              		.cfi_def_cfa_register 7
 454:Src/main.c    **** 	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 909              		.loc 1 454 19
 910 0006 07F11403 		add	r3, r7, #20
 911 000a 0022     		movs	r2, #0
 912 000c 1A60     		str	r2, [r3]
 913 000e 5A60     		str	r2, [r3, #4]
 914 0010 9A60     		str	r2, [r3, #8]
 915 0012 DA60     		str	r2, [r3, #12]
 916 0014 1A61     		str	r2, [r3, #16]
 917              	.LBB2:
 455:Src/main.c    **** 
 456:Src/main.c    **** 	/* GPIO Ports Clock Enable */
 457:Src/main.c    **** 	__HAL_RCC_GPIOC_CLK_ENABLE();
 918              		.loc 1 457 2
 919 0016 664B     		ldr	r3, .L46
 920 0018 DB6C     		ldr	r3, [r3, #76]
 921 001a 654A     		ldr	r2, .L46
 922 001c 43F00403 		orr	r3, r3, #4
 923 0020 D364     		str	r3, [r2, #76]
 924 0022 634B     		ldr	r3, .L46
 925 0024 DB6C     		ldr	r3, [r3, #76]
 926 0026 03F00403 		and	r3, r3, #4
 927 002a 3B61     		str	r3, [r7, #16]
 928 002c 3B69     		ldr	r3, [r7, #16]
 929              	.LBE2:
ARM GAS  /tmp/ccC0MHur.s 			page 25


 930              	.LBB3:
 458:Src/main.c    **** 	__HAL_RCC_GPIOH_CLK_ENABLE();
 931              		.loc 1 458 2
 932 002e 604B     		ldr	r3, .L46
 933 0030 DB6C     		ldr	r3, [r3, #76]
 934 0032 5F4A     		ldr	r2, .L46
 935 0034 43F08003 		orr	r3, r3, #128
 936 0038 D364     		str	r3, [r2, #76]
 937 003a 5D4B     		ldr	r3, .L46
 938 003c DB6C     		ldr	r3, [r3, #76]
 939 003e 03F08003 		and	r3, r3, #128
 940 0042 FB60     		str	r3, [r7, #12]
 941 0044 FB68     		ldr	r3, [r7, #12]
 942              	.LBE3:
 943              	.LBB4:
 459:Src/main.c    **** 	__HAL_RCC_GPIOA_CLK_ENABLE();
 944              		.loc 1 459 2
 945 0046 5A4B     		ldr	r3, .L46
 946 0048 DB6C     		ldr	r3, [r3, #76]
 947 004a 594A     		ldr	r2, .L46
 948 004c 43F00103 		orr	r3, r3, #1
 949 0050 D364     		str	r3, [r2, #76]
 950 0052 574B     		ldr	r3, .L46
 951 0054 DB6C     		ldr	r3, [r3, #76]
 952 0056 03F00103 		and	r3, r3, #1
 953 005a BB60     		str	r3, [r7, #8]
 954 005c BB68     		ldr	r3, [r7, #8]
 955              	.LBE4:
 956              	.LBB5:
 460:Src/main.c    **** 	__HAL_RCC_GPIOB_CLK_ENABLE();
 957              		.loc 1 460 2
 958 005e 544B     		ldr	r3, .L46
 959 0060 DB6C     		ldr	r3, [r3, #76]
 960 0062 534A     		ldr	r2, .L46
 961 0064 43F00203 		orr	r3, r3, #2
 962 0068 D364     		str	r3, [r2, #76]
 963 006a 514B     		ldr	r3, .L46
 964 006c DB6C     		ldr	r3, [r3, #76]
 965 006e 03F00203 		and	r3, r3, #2
 966 0072 7B60     		str	r3, [r7, #4]
 967 0074 7B68     		ldr	r3, [r7, #4]
 968              	.LBE5:
 969              	.LBB6:
 461:Src/main.c    **** 	__HAL_RCC_GPIOD_CLK_ENABLE();
 970              		.loc 1 461 2
 971 0076 4E4B     		ldr	r3, .L46
 972 0078 DB6C     		ldr	r3, [r3, #76]
 973 007a 4D4A     		ldr	r2, .L46
 974 007c 43F00803 		orr	r3, r3, #8
 975 0080 D364     		str	r3, [r2, #76]
 976 0082 4B4B     		ldr	r3, .L46
 977 0084 DB6C     		ldr	r3, [r3, #76]
 978 0086 03F00803 		and	r3, r3, #8
 979 008a 3B60     		str	r3, [r7]
 980 008c 3B68     		ldr	r3, [r7]
 981              	.LBE6:
 462:Src/main.c    **** 
ARM GAS  /tmp/ccC0MHur.s 			page 26


 463:Src/main.c    **** 	/*Configure GPIO pin Output Level */
 464:Src/main.c    **** 	HAL_GPIO_WritePin(GPIOC,
 982              		.loc 1 464 2
 983 008e 0022     		movs	r2, #0
 984 0090 43F2F071 		movw	r1, #14320
 985 0094 4748     		ldr	r0, .L46+4
 986 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 465:Src/main.c    **** 			GPIO9_Pin | LORA_RST_Pin | LORA_DIO5_Pin | GPIO0_Pin | GPIO1_Pin
 466:Src/main.c    **** 					| GPIO2_Pin | GPIO3_Pin | GPIO_PIN_10 | GPIO5_Pin,
 467:Src/main.c    **** 			GPIO_PIN_RESET);
 468:Src/main.c    **** 
 469:Src/main.c    **** 	/*Configure GPIO pin Output Level */
 470:Src/main.c    **** 	HAL_GPIO_WritePin(GPIOB,
 987              		.loc 1 470 2
 988 009a 0022     		movs	r2, #0
 989 009c 40F63741 		movw	r1, #3127
 990 00a0 4548     		ldr	r0, .L46+8
 991 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 471:Src/main.c    **** 			LORA_DIO3_Pin | LORA_DIO4_Pin | LORA_DIO0_Pin | LORA_DIO1_Pin
 472:Src/main.c    **** 					| LORA_DIO2_Pin | GPIO7_Pin | GPIO8_Pin, GPIO_PIN_RESET);
 473:Src/main.c    **** 
 474:Src/main.c    **** 	/*Configure GPIO pin Output Level */
 475:Src/main.c    **** 	HAL_GPIO_WritePin(GPIOA, SUP_EN_Pin | GPIO4_Pin, GPIO_PIN_RESET);
 992              		.loc 1 475 2
 993 00a6 0022     		movs	r2, #0
 994 00a8 4FF40141 		mov	r1, #33024
 995 00ac 4FF09040 		mov	r0, #1207959552
 996 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 476:Src/main.c    **** 
 477:Src/main.c    **** 	/*Configure GPIO pin Output Level */
 478:Src/main.c    **** 	HAL_GPIO_WritePin(GPIO6_GPIO_Port, GPIO6_Pin, GPIO_PIN_RESET);
 997              		.loc 1 478 2
 998 00b4 0022     		movs	r2, #0
 999 00b6 0421     		movs	r1, #4
 1000 00b8 4048     		ldr	r0, .L46+12
 1001 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 479:Src/main.c    **** 
 480:Src/main.c    **** 	/*Configure GPIO pins : GPIO9_Pin LORA_RST_Pin LORA_DIO5_Pin GPIO0_Pin
 481:Src/main.c    **** 	 GPIO1_Pin GPIO2_Pin GPIO3_Pin PC10
 482:Src/main.c    **** 	 GPIO5_Pin */
 483:Src/main.c    **** 	GPIO_InitStruct.Pin = GPIO9_Pin | LORA_RST_Pin | LORA_DIO5_Pin | GPIO0_Pin
 1002              		.loc 1 483 22
 1003 00be 43F2F073 		movw	r3, #14320
 1004 00c2 7B61     		str	r3, [r7, #20]
 484:Src/main.c    **** 			| GPIO1_Pin | GPIO2_Pin | GPIO3_Pin | GPIO_PIN_10 | GPIO5_Pin;
 485:Src/main.c    **** 	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1005              		.loc 1 485 23
 1006 00c4 0123     		movs	r3, #1
 1007 00c6 BB61     		str	r3, [r7, #24]
 486:Src/main.c    **** 	GPIO_InitStruct.Pull = GPIO_NOPULL;
 1008              		.loc 1 486 23
 1009 00c8 0023     		movs	r3, #0
 1010 00ca FB61     		str	r3, [r7, #28]
 487:Src/main.c    **** 	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1011              		.loc 1 487 24
 1012 00cc 0023     		movs	r3, #0
 1013 00ce 3B62     		str	r3, [r7, #32]
ARM GAS  /tmp/ccC0MHur.s 			page 27


 488:Src/main.c    **** 	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1014              		.loc 1 488 2
 1015 00d0 07F11403 		add	r3, r7, #20
 1016 00d4 1946     		mov	r1, r3
 1017 00d6 3748     		ldr	r0, .L46+4
 1018 00d8 FFF7FEFF 		bl	HAL_GPIO_Init
 489:Src/main.c    **** 
 490:Src/main.c    **** 	/*Configure GPIO pins : ACC_INT_1_Pin ACC_INT_2_Pin */
 491:Src/main.c    **** 	GPIO_InitStruct.Pin = ACC_INT_1_Pin | ACC_INT_2_Pin;
 1019              		.loc 1 491 22
 1020 00dc 0C23     		movs	r3, #12
 1021 00de 7B61     		str	r3, [r7, #20]
 492:Src/main.c    **** 	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 1022              		.loc 1 492 23
 1023 00e0 374B     		ldr	r3, .L46+16
 1024 00e2 BB61     		str	r3, [r7, #24]
 493:Src/main.c    **** 	GPIO_InitStruct.Pull = GPIO_NOPULL;
 1025              		.loc 1 493 23
 1026 00e4 0023     		movs	r3, #0
 1027 00e6 FB61     		str	r3, [r7, #28]
 494:Src/main.c    **** 	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1028              		.loc 1 494 2
 1029 00e8 07F11403 		add	r3, r7, #20
 1030 00ec 1946     		mov	r1, r3
 1031 00ee 3148     		ldr	r0, .L46+4
 1032 00f0 FFF7FEFF 		bl	HAL_GPIO_Init
 495:Src/main.c    **** 
 496:Src/main.c    **** 	/*Configure GPIO pins : LORA_DIO3_Pin LORA_DIO4_Pin LORA_DIO0_Pin LORA_DIO1_Pin
 497:Src/main.c    **** 	 LORA_DIO2_Pin GPIO7_Pin GPIO8_Pin */
 498:Src/main.c    **** 	GPIO_InitStruct.Pin = LORA_DIO3_Pin | LORA_DIO4_Pin | LORA_DIO0_Pin
 1033              		.loc 1 498 22
 1034 00f4 40F63743 		movw	r3, #3127
 1035 00f8 7B61     		str	r3, [r7, #20]
 499:Src/main.c    **** 			| LORA_DIO1_Pin | LORA_DIO2_Pin | GPIO7_Pin | GPIO8_Pin;
 500:Src/main.c    **** 	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1036              		.loc 1 500 23
 1037 00fa 0123     		movs	r3, #1
 1038 00fc BB61     		str	r3, [r7, #24]
 501:Src/main.c    **** 	GPIO_InitStruct.Pull = GPIO_NOPULL;
 1039              		.loc 1 501 23
 1040 00fe 0023     		movs	r3, #0
 1041 0100 FB61     		str	r3, [r7, #28]
 502:Src/main.c    **** 	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1042              		.loc 1 502 24
 1043 0102 0023     		movs	r3, #0
 1044 0104 3B62     		str	r3, [r7, #32]
 503:Src/main.c    **** 	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1045              		.loc 1 503 2
 1046 0106 07F11403 		add	r3, r7, #20
 1047 010a 1946     		mov	r1, r3
 1048 010c 2A48     		ldr	r0, .L46+8
 1049 010e FFF7FEFF 		bl	HAL_GPIO_Init
 504:Src/main.c    **** 
 505:Src/main.c    **** 	/*Configure GPIO pins : SUP_EN_Pin GPIO4_Pin */
 506:Src/main.c    **** 	GPIO_InitStruct.Pin = SUP_EN_Pin | GPIO4_Pin;
 1050              		.loc 1 506 22
 1051 0112 4FF40143 		mov	r3, #33024
ARM GAS  /tmp/ccC0MHur.s 			page 28


 1052 0116 7B61     		str	r3, [r7, #20]
 507:Src/main.c    **** 	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1053              		.loc 1 507 23
 1054 0118 0123     		movs	r3, #1
 1055 011a BB61     		str	r3, [r7, #24]
 508:Src/main.c    **** 	GPIO_InitStruct.Pull = GPIO_NOPULL;
 1056              		.loc 1 508 23
 1057 011c 0023     		movs	r3, #0
 1058 011e FB61     		str	r3, [r7, #28]
 509:Src/main.c    **** 	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1059              		.loc 1 509 24
 1060 0120 0023     		movs	r3, #0
 1061 0122 3B62     		str	r3, [r7, #32]
 510:Src/main.c    **** 	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1062              		.loc 1 510 2
 1063 0124 07F11403 		add	r3, r7, #20
 1064 0128 1946     		mov	r1, r3
 1065 012a 4FF09040 		mov	r0, #1207959552
 1066 012e FFF7FEFF 		bl	HAL_GPIO_Init
 511:Src/main.c    **** 
 512:Src/main.c    **** 	/*Configure GPIO pin : PA9 */
 513:Src/main.c    **** 	GPIO_InitStruct.Pin = GPIO_PIN_9;
 1067              		.loc 1 513 22
 1068 0132 4FF40073 		mov	r3, #512
 1069 0136 7B61     		str	r3, [r7, #20]
 514:Src/main.c    **** 	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1070              		.loc 1 514 23
 1071 0138 0023     		movs	r3, #0
 1072 013a BB61     		str	r3, [r7, #24]
 515:Src/main.c    **** 	GPIO_InitStruct.Pull = GPIO_NOPULL;
 1073              		.loc 1 515 23
 1074 013c 0023     		movs	r3, #0
 1075 013e FB61     		str	r3, [r7, #28]
 516:Src/main.c    **** 	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1076              		.loc 1 516 2
 1077 0140 07F11403 		add	r3, r7, #20
 1078 0144 1946     		mov	r1, r3
 1079 0146 4FF09040 		mov	r0, #1207959552
 1080 014a FFF7FEFF 		bl	HAL_GPIO_Init
 517:Src/main.c    **** 
 518:Src/main.c    **** 	/*Configure GPIO pins : PA10 PA11 PA12 */
 519:Src/main.c    **** 	GPIO_InitStruct.Pin = GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12;
 1081              		.loc 1 519 22
 1082 014e 4FF4E053 		mov	r3, #7168
 1083 0152 7B61     		str	r3, [r7, #20]
 520:Src/main.c    **** 	GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1084              		.loc 1 520 23
 1085 0154 0223     		movs	r3, #2
 1086 0156 BB61     		str	r3, [r7, #24]
 521:Src/main.c    **** 	GPIO_InitStruct.Pull = GPIO_NOPULL;
 1087              		.loc 1 521 23
 1088 0158 0023     		movs	r3, #0
 1089 015a FB61     		str	r3, [r7, #28]
 522:Src/main.c    **** 	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1090              		.loc 1 522 24
 1091 015c 0323     		movs	r3, #3
 1092 015e 3B62     		str	r3, [r7, #32]
ARM GAS  /tmp/ccC0MHur.s 			page 29


 523:Src/main.c    **** 	GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 1093              		.loc 1 523 28
 1094 0160 0A23     		movs	r3, #10
 1095 0162 7B62     		str	r3, [r7, #36]
 524:Src/main.c    **** 	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1096              		.loc 1 524 2
 1097 0164 07F11403 		add	r3, r7, #20
 1098 0168 1946     		mov	r1, r3
 1099 016a 4FF09040 		mov	r0, #1207959552
 1100 016e FFF7FEFF 		bl	HAL_GPIO_Init
 525:Src/main.c    **** 
 526:Src/main.c    **** 	/*Configure GPIO pin : PC11 */
 527:Src/main.c    **** 	GPIO_InitStruct.Pin = GPIO_PIN_11;
 1101              		.loc 1 527 22
 1102 0172 4FF40063 		mov	r3, #2048
 1103 0176 7B61     		str	r3, [r7, #20]
 528:Src/main.c    **** 	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 1104              		.loc 1 528 23
 1105 0178 0023     		movs	r3, #0
 1106 017a BB61     		str	r3, [r7, #24]
 529:Src/main.c    **** 	GPIO_InitStruct.Pull = GPIO_NOPULL;
 1107              		.loc 1 529 23
 1108 017c 0023     		movs	r3, #0
 1109 017e FB61     		str	r3, [r7, #28]
 530:Src/main.c    **** 	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1110              		.loc 1 530 2
 1111 0180 07F11403 		add	r3, r7, #20
 1112 0184 1946     		mov	r1, r3
 1113 0186 0B48     		ldr	r0, .L46+4
 1114 0188 FFF7FEFF 		bl	HAL_GPIO_Init
 531:Src/main.c    **** 
 532:Src/main.c    **** 	/*Configure GPIO pin : GPIO6_Pin */
 533:Src/main.c    **** 	GPIO_InitStruct.Pin = GPIO6_Pin;
 1115              		.loc 1 533 22
 1116 018c 0423     		movs	r3, #4
 1117 018e 7B61     		str	r3, [r7, #20]
 534:Src/main.c    **** 	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1118              		.loc 1 534 23
 1119 0190 0123     		movs	r3, #1
 1120 0192 BB61     		str	r3, [r7, #24]
 535:Src/main.c    **** 	GPIO_InitStruct.Pull = GPIO_NOPULL;
 1121              		.loc 1 535 23
 1122 0194 0023     		movs	r3, #0
 1123 0196 FB61     		str	r3, [r7, #28]
 536:Src/main.c    **** 	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1124              		.loc 1 536 24
 1125 0198 0023     		movs	r3, #0
 1126 019a 3B62     		str	r3, [r7, #32]
 537:Src/main.c    **** 	HAL_GPIO_Init(GPIO6_GPIO_Port, &GPIO_InitStruct);
 1127              		.loc 1 537 2
 1128 019c 07F11403 		add	r3, r7, #20
 1129 01a0 1946     		mov	r1, r3
 1130 01a2 0648     		ldr	r0, .L46+12
 1131 01a4 FFF7FEFF 		bl	HAL_GPIO_Init
 538:Src/main.c    **** 
 539:Src/main.c    **** }
 1132              		.loc 1 539 1
ARM GAS  /tmp/ccC0MHur.s 			page 30


 1133 01a8 00BF     		nop
 1134 01aa 2837     		adds	r7, r7, #40
 1135              	.LCFI27:
 1136              		.cfi_def_cfa_offset 8
 1137 01ac BD46     		mov	sp, r7
 1138              	.LCFI28:
 1139              		.cfi_def_cfa_register 13
 1140              		@ sp needed
 1141 01ae 80BD     		pop	{r7, pc}
 1142              	.L47:
 1143              		.align	2
 1144              	.L46:
 1145 01b0 00100240 		.word	1073876992
 1146 01b4 00080048 		.word	1207961600
 1147 01b8 00040048 		.word	1207960576
 1148 01bc 000C0048 		.word	1207962624
 1149 01c0 00001110 		.word	269549568
 1150              		.cfi_endproc
 1151              	.LFE139:
 1153              		.global	__aeabi_ui2d
 1154              		.global	__aeabi_dmul
 1155              		.global	__aeabi_d2uiz
 1156              		.section	.text.test_sensor_y401,"ax",%progbits
 1157              		.align	1
 1158              		.global	test_sensor_y401
 1159              		.syntax unified
 1160              		.thumb
 1161              		.thumb_func
 1162              		.fpu fpv4-sp-d16
 1164              	test_sensor_y401:
 1165              	.LFB140:
 540:Src/main.c    **** 
 541:Src/main.c    **** /* USER CODE BEGIN 4 */
 542:Src/main.c    **** uint32_t test_sensor_y401(void) {
 1166              		.loc 1 542 33
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 8
 1169              		@ frame_needed = 1, uses_anonymous_args = 0
 1170 0000 90B5     		push	{r4, r7, lr}
 1171              	.LCFI29:
 1172              		.cfi_def_cfa_offset 12
 1173              		.cfi_offset 4, -12
 1174              		.cfi_offset 7, -8
 1175              		.cfi_offset 14, -4
 1176 0002 83B0     		sub	sp, sp, #12
 1177              	.LCFI30:
 1178              		.cfi_def_cfa_offset 24
 1179 0004 00AF     		add	r7, sp, #0
 1180              	.LCFI31:
 1181              		.cfi_def_cfa_register 7
 543:Src/main.c    **** 	uint32_t local_time = 0;
 1182              		.loc 1 543 11
 1183 0006 0023     		movs	r3, #0
 1184 0008 7B60     		str	r3, [r7, #4]
 544:Src/main.c    **** 
 545:Src/main.c    **** //	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET); // pull the TRIG pin HIGH
 546:Src/main.c    **** //	DWT_Delay_us(2);  // wait for 2 us
ARM GAS  /tmp/ccC0MHur.s 			page 31


 547:Src/main.c    **** 
 548:Src/main.c    **** 	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_10, GPIO_PIN_SET); // pull the TRIG pin HIGH
 1185              		.loc 1 548 2
 1186 000a 0122     		movs	r2, #1
 1187 000c 4FF48061 		mov	r1, #1024
 1188 0010 1D48     		ldr	r0, .L53+8
 1189 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 549:Src/main.c    **** 	DWT_Delay_us(10);  // wait for 10 us
 1190              		.loc 1 549 2
 1191 0016 0A20     		movs	r0, #10
 1192 0018 FFF7FEFF 		bl	DWT_Delay_us
 550:Src/main.c    **** 	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_10, GPIO_PIN_RESET); // pull the TRIG pin low
 1193              		.loc 1 550 2
 1194 001c 0022     		movs	r2, #0
 1195 001e 4FF48061 		mov	r1, #1024
 1196 0022 1948     		ldr	r0, .L53+8
 1197 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 551:Src/main.c    **** 
 552:Src/main.c    **** 	// read the time for which the pin is high
 553:Src/main.c    **** 
 554:Src/main.c    **** 	while (!(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_11)))
 1198              		.loc 1 554 8
 1199 0028 00BF     		nop
 1200              	.L49:
 1201              		.loc 1 554 11 discriminator 1
 1202 002a 4FF40061 		mov	r1, #2048
 1203 002e 1648     		ldr	r0, .L53+8
 1204 0030 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1205 0034 0346     		mov	r3, r0
 1206              		.loc 1 554 8 discriminator 1
 1207 0036 002B     		cmp	r3, #0
 1208 0038 F7D0     		beq	.L49
 555:Src/main.c    **** 		;  // wait for the ECHO pin to go high
 556:Src/main.c    **** 	while (HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_11))    // while the pin is high
 1209              		.loc 1 556 8
 1210 003a 05E0     		b	.L50
 1211              	.L51:
 557:Src/main.c    **** 	{
 558:Src/main.c    **** 		local_time++;   // measure time for which the pin is high
 1212              		.loc 1 558 13
 1213 003c 7B68     		ldr	r3, [r7, #4]
 1214 003e 0133     		adds	r3, r3, #1
 1215 0040 7B60     		str	r3, [r7, #4]
 559:Src/main.c    **** 		DWT_Delay_us(1);
 1216              		.loc 1 559 3
 1217 0042 0120     		movs	r0, #1
 1218 0044 FFF7FEFF 		bl	DWT_Delay_us
 1219              	.L50:
 556:Src/main.c    **** 	{
 1220              		.loc 1 556 9
 1221 0048 4FF40061 		mov	r1, #2048
 1222 004c 0E48     		ldr	r0, .L53+8
 1223 004e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1224 0052 0346     		mov	r3, r0
 556:Src/main.c    **** 	{
 1225              		.loc 1 556 8
 1226 0054 002B     		cmp	r3, #0
ARM GAS  /tmp/ccC0MHur.s 			page 32


 1227 0056 F1D1     		bne	.L51
 560:Src/main.c    **** 	}
 561:Src/main.c    **** 	return local_time * 0.034;
 1228              		.loc 1 561 20
 1229 0058 7868     		ldr	r0, [r7, #4]
 1230 005a FFF7FEFF 		bl	__aeabi_ui2d
 1231              	.LVL0:
 1232 005e 08A3     		adr	r3, .L53
 1233 0060 D3E90023 		ldrd	r2, [r3]
 1234 0064 FFF7FEFF 		bl	__aeabi_dmul
 1235              	.LVL1:
 1236 0068 0346     		mov	r3, r0
 1237 006a 0C46     		mov	r4, r1
 1238 006c 1846     		mov	r0, r3
 1239 006e 2146     		mov	r1, r4
 1240 0070 FFF7FEFF 		bl	__aeabi_d2uiz
 1241              	.LVL2:
 1242 0074 0346     		mov	r3, r0
 562:Src/main.c    **** }
 1243              		.loc 1 562 1
 1244 0076 1846     		mov	r0, r3
 1245 0078 0C37     		adds	r7, r7, #12
 1246              	.LCFI32:
 1247              		.cfi_def_cfa_offset 12
 1248 007a BD46     		mov	sp, r7
 1249              	.LCFI33:
 1250              		.cfi_def_cfa_register 13
 1251              		@ sp needed
 1252 007c 90BD     		pop	{r4, r7, pc}
 1253              	.L54:
 1254 007e 00BF     		.align	3
 1255              	.L53:
 1256 0080 9CC420B0 		.word	2954937500
 1257 0084 7268A13F 		.word	1067542642
 1258 0088 00080048 		.word	1207961600
 1259              		.cfi_endproc
 1260              	.LFE140:
 1262              		.section	.text.Error_Handler,"ax",%progbits
 1263              		.align	1
 1264              		.global	Error_Handler
 1265              		.syntax unified
 1266              		.thumb
 1267              		.thumb_func
 1268              		.fpu fpv4-sp-d16
 1270              	Error_Handler:
 1271              	.LFB141:
 563:Src/main.c    **** 
 564:Src/main.c    **** /* USER CODE END 4 */
 565:Src/main.c    **** 
 566:Src/main.c    **** /**
 567:Src/main.c    ****  * @brief  This function is executed in case of error occurrence.
 568:Src/main.c    ****  * @retval None
 569:Src/main.c    ****  */
 570:Src/main.c    **** void Error_Handler(void) {
 1272              		.loc 1 570 26
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccC0MHur.s 			page 33


 1275              		@ frame_needed = 1, uses_anonymous_args = 0
 1276              		@ link register save eliminated.
 1277 0000 80B4     		push	{r7}
 1278              	.LCFI34:
 1279              		.cfi_def_cfa_offset 4
 1280              		.cfi_offset 7, -4
 1281 0002 00AF     		add	r7, sp, #0
 1282              	.LCFI35:
 1283              		.cfi_def_cfa_register 7
 571:Src/main.c    **** 	/* USER CODE BEGIN Error_Handler_Debug */
 572:Src/main.c    **** 	/* User can add his own implementation to report the HAL error return state */
 573:Src/main.c    **** 
 574:Src/main.c    **** 	/* USER CODE END Error_Handler_Debug */
 575:Src/main.c    **** }
 1284              		.loc 1 575 1
 1285 0004 00BF     		nop
 1286 0006 BD46     		mov	sp, r7
 1287              	.LCFI36:
 1288              		.cfi_def_cfa_register 13
 1289              		@ sp needed
 1290 0008 5DF8047B 		ldr	r7, [sp], #4
 1291              	.LCFI37:
 1292              		.cfi_restore 7
 1293              		.cfi_def_cfa_offset 0
 1294 000c 7047     		bx	lr
 1295              		.cfi_endproc
 1296              	.LFE141:
 1298              		.text
 1299              	.Letext0:
 1300              		.file 2 "/home/hung/opt/xPacks/@gnu-mcu-eclipse/arm-none-eabi-gcc/8.2.1-1.7.1/.content/arm-none-ea
 1301              		.file 3 "/home/hung/opt/xPacks/@gnu-mcu-eclipse/arm-none-eabi-gcc/8.2.1-1.7.1/.content/arm-none-ea
 1302              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1303              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 1304              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l496xx.h"
 1305              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 1306              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 1307              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 1308              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 1309              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 1310              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 1311              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c.h"
 1312              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 1313              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 1314              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/ccC0MHur.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
                            *COM*:000000000000004c hi2c1
                            *COM*:000000000000004c hi2c3
                            *COM*:0000000000000064 hspi1
                            *COM*:0000000000000064 hspi2
                            *COM*:0000000000000080 huart1
                            *COM*:0000000000000080 huart2
     /tmp/ccC0MHur.s:24     .text.main:0000000000000000 $t
     /tmp/ccC0MHur.s:32     .text.main:0000000000000000 main
     /tmp/ccC0MHur.s:90     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccC0MHur.s:892    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccC0MHur.s:295    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccC0MHur.s:396    .text.MX_I2C3_Init:0000000000000000 MX_I2C3_Init
     /tmp/ccC0MHur.s:497    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccC0MHur.s:595    .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
     /tmp/ccC0MHur.s:693    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccC0MHur.s:775    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccC0MHur.s:857    .text.MX_USB_OTG_FS_USB_Init:0000000000000000 MX_USB_OTG_FS_USB_Init
     /tmp/ccC0MHur.s:1164   .text.test_sensor_y401:0000000000000000 test_sensor_y401
     /tmp/ccC0MHur.s:83     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccC0MHur.s:1270   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccC0MHur.s:284    .text.SystemClock_Config:0000000000000140 $d
     /tmp/ccC0MHur.s:289    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccC0MHur.s:383    .text.MX_I2C1_Init:0000000000000074 $d
     /tmp/ccC0MHur.s:390    .text.MX_I2C3_Init:0000000000000000 $t
     /tmp/ccC0MHur.s:484    .text.MX_I2C3_Init:0000000000000074 $d
     /tmp/ccC0MHur.s:491    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccC0MHur.s:583    .text.MX_SPI1_Init:0000000000000074 $d
     /tmp/ccC0MHur.s:589    .text.MX_SPI2_Init:0000000000000000 $t
     /tmp/ccC0MHur.s:681    .text.MX_SPI2_Init:0000000000000074 $d
     /tmp/ccC0MHur.s:687    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccC0MHur.s:763    .text.MX_USART1_UART_Init:0000000000000058 $d
     /tmp/ccC0MHur.s:769    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccC0MHur.s:845    .text.MX_USART2_UART_Init:0000000000000058 $d
     /tmp/ccC0MHur.s:851    .text.MX_USB_OTG_FS_USB_Init:0000000000000000 $t
     /tmp/ccC0MHur.s:886    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccC0MHur.s:1145   .text.MX_GPIO_Init:00000000000001b0 $d
     /tmp/ccC0MHur.s:1157   .text.test_sensor_y401:0000000000000000 $t
     /tmp/ccC0MHur.s:1256   .text.test_sensor_y401:0000000000000080 $d
     /tmp/ccC0MHur.s:1263   .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_Init
HAL_Delay
memset
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_RCCEx_EnableMSIPLLMode
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_SPI_Init
HAL_UART_Init
ARM GAS  /tmp/ccC0MHur.s 			page 35


HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_ui2d
__aeabi_dmul
__aeabi_d2uiz
DWT_Delay_us
HAL_GPIO_ReadPin
