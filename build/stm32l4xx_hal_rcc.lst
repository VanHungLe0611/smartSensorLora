ARM GAS  /tmp/cct1HO6N.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_RCC_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_RCC_DeInit:
  27              	.LFB130:
  28              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @file    stm32l4xx_hal_rcc.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..]
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       After reset the device is running from Multiple Speed Internal oscillator
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (4 MHz) with Flash 0 wait state. Flash prefetch buffer, D-Cache
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHBs) and Low speed (APBs) busses:
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           all peripherals mapped on these busses are running at MSI speed.
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) All GPIOs are in analog mode, except the JTAG pins which
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..]
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
ARM GAS  /tmp/cct1HO6N.s 			page 2


  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           derived from the System clock (SAIx, RTC, ADC, USB OTG FS/SDMMC1/RNG)
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @endverbatim
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ******************************************************************************
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @attention
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ******************************************************************************
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #include "stm32l4xx_hal.h"
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @addtogroup STM32L4xx_HAL_Driver
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC RCC
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  * @{
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  */
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define HSE_TIMEOUT_VALUE          HSE_STARTUP_TIMEOUT
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define HSI_TIMEOUT_VALUE          2U    /* 2 ms (minimum Tick + 1) */
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define MSI_TIMEOUT_VALUE          2U    /* 2 ms (minimum Tick + 1) */
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_CSR_LSIPREDIV)
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define LSI_TIMEOUT_VALUE          17U   /* 17 ms (16 ms starting time + 1) */
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define LSI_TIMEOUT_VALUE          2U    /* 2 ms (minimum Tick + 1) */
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_CSR_LSIPREDIV */
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define HSI48_TIMEOUT_VALUE        2U    /* 2 ms (minimum Tick + 1) */
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define PLL_TIMEOUT_VALUE          2U    /* 2 ms (minimum Tick + 1) */
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define CLOCKSWITCH_TIMEOUT_VALUE  5000U /* 5 s    */
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
ARM GAS  /tmp/cct1HO6N.s 			page 3


  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define RCC_PLL_OSCSOURCE_CONFIG(__HAL_RCC_PLLSOURCE__) \
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             (MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, (__HAL_RCC_PLLSOURCE__)))
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Private_Functions RCC Private Functions
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange);
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** static uint32_t          RCC_GetSysClockFreqFromPLLSource(void);
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Exported functions --------------------------------------------------------*/
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @verbatim
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..]
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal and external oscillators
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (HSE, HSI, LSE, MSI, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        and APB2).
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) HSI (high-speed internal): 16 MHz factory-trimmed RC used directly or through
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              the PLL as System clock source.
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) MSI (Mutiple Speed Internal): Its frequency is software trimmable from 100KHZ to 48MHZ
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              It can be used to generate the clock for the USB OTG FS (48 MHz).
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              The number of flash wait states is automatically adjusted when MSI range is updated wi
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              HAL_RCC_OscConfig() and the MSI is used as System clock source.
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) LSI (low-speed internal): 32 KHz low consumption RC used as IWDG and/or RTC
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              clock source.
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) HSE (high-speed external): 4 to 48 MHz crystal oscillator used directly or
ARM GAS  /tmp/cct1HO6N.s 			page 4


 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also optionally as RTC clock sourc
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) LSE (low-speed external): 32.768 KHz oscillator used optionally as RTC clock source.
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) PLL (clocked by HSI, HSE or MSI) providing up to three independent output clocks:
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 80MHz).
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDMMC1 (<= 48 MHz).
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The third output is used to generate an accurate clock to achieve
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 high-quality audio performance on SAI interface.
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) PLLSAI1 (clocked by HSI, HSE or MSI) providing up to three independent output clocks:
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The first output is used to generate SAR ADC1 clock.
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDMMC1 (<= 48 MHz).
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The Third output is used to generate an accurate clock to achieve
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 high-quality audio performance on SAI interface.
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) PLLSAI2 (clocked by HSI, HSE or MSI) providing up to two independent output clocks:
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The first output is used to generate SAR ADC2 clock.
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The second  output is used to generate an accurate clock to achieve
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 high-quality audio performance on SAI interface.
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) CSS (Clock security system): once enabled, if a HSE clock failure occurs
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             (HSE used directly or through PLL as System clock source), the System clock
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              is automatically switched to HSI and an interrupt is generated if enabled.
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              The interrupt is linked to the Cortex-M4 NMI (Non-Maskable Interrupt)
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              exception vector.
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) MCO (microcontroller clock output): used to output MSI, LSI, HSI, LSE, HSE or
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              main PLL clock (through a configurable prescaler) on PA8 pin.
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) Several clock sources can be used to drive the System clock (SYSCLK): MSI, HSI,
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              HSE and main PLL.
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (+@) SAI: the SAI clock can be derived either from a specific PLL (PLLSAI1) or (PLLSAI2)
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 from an external clock mapped on the SAI_CKIN pin.
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 You have to use HAL_RCCEx_PeriphCLKConfig() function to configure this clock.
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (+@) RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 divided by 2 to 31.
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 You have to use __HAL_RCC_RTC_ENABLE() and HAL_RCCEx_PeriphCLKConfig() function
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 to configure this clock.
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (+@) USB OTG FS, SDMMC1 and RNG: USB OTG FS requires a frequency equal to 48 MHz
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 to work correctly, while the SDMMC1 and RNG peripherals require a frequency
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 equal or lower than to 48 MHz. This clock is derived of the main PLL or PLLSAI1
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 through PLLQ divider. You have to enable the peripheral clock and use
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 HAL_RCCEx_PeriphCLKConfig() function to configure this clock.
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (+@) IWDG clock which is always the LSI clock.
ARM GAS  /tmp/cct1HO6N.s 			page 5


 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) The maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 is 80 MHz.
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              The clock source frequency should be adapted depending on the device voltage range
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              as listed in the Reference Manual "Clock source frequency versus voltage scaling" chap
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @endverbatim
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            Table 1. HCLK clock frequency for STM32L4Rx/STM32L4Sx devices
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            +--------------------------------------------------------+
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            | Latency         |     HCLK clock frequency (MHz)       |
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |--------------------------------------|
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |  voltage range 1  | voltage range 2  |
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |       1.2 V       |     1.0 V        |
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |0WS(1 CPU cycles)|   0 < HCLK <= 20  |  0 < HCLK <= 8   |
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |1WS(2 CPU cycles)|  20 < HCLK <= 40  |  8 < HCLK <= 16  |
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |2WS(3 CPU cycles)|  40 < HCLK <= 60  | 16 < HCLK <= 26  |
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |3WS(4 CPU cycles)|  60 < HCLK <= 80  | 16 < HCLK <= 26  |
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |4WS(5 CPU cycles)|  80 < HCLK <= 100 | 16 < HCLK <= 26  |
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |5WS(6 CPU cycles)| 100 < HCLK <= 120 | 16 < HCLK <= 26  |
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            +--------------------------------------------------------+
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            Table 2. HCLK clock frequency for other STM32L4 devices
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            +-------------------------------------------------------+
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            | Latency         |    HCLK clock frequency (MHz)       |
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |-------------------------------------|
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 | voltage range 1  | voltage range 2  |
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |      1.2 V       |     1.0 V        |
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |0WS(1 CPU cycles)|  0 < HCLK <= 16  |  0 < HCLK <= 6   |
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |1WS(2 CPU cycles)| 16 < HCLK <= 32  |  6 < HCLK <= 12  |
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |2WS(3 CPU cycles)| 32 < HCLK <= 48  | 12 < HCLK <= 18  |
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |3WS(4 CPU cycles)| 48 < HCLK <= 64  | 18 < HCLK <= 26  |
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |4WS(5 CPU cycles)| 64 < HCLK <= 80  | 18 < HCLK <= 26  |
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            +-------------------------------------------------------+
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Reset the RCC clock configuration to the default reset state.
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - MSI ON and used as system clock source
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - HSE, HSI, PLL, PLLSAI1 and PLLSAI2 OFF
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescalers set to 1.
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - CSS, MCO1 OFF
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - All interrupts disabled
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - All interrupt and reset flags cleared
ARM GAS  /tmp/cct1HO6N.s 			page 6


 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - Peripheral clock sources
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks (Backup domain)
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval HAL status
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
  29              		.loc 1 265 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset to default System clock */
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Set MSION bit */
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_MSION);
  44              		.loc 1 270 3
  45 0006 4A4B     		ldr	r3, .L10
  46 0008 1B68     		ldr	r3, [r3]
  47 000a 494A     		ldr	r2, .L10
  48 000c 43F00103 		orr	r3, r3, #1
  49 0010 1360     		str	r3, [r2]
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Insure MSIRDY bit is set before writing default MSIRANGE value */
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get start tick */
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  50              		.loc 1 274 15
  51 0012 FFF7FEFF 		bl	HAL_GetTick
  52 0016 7860     		str	r0, [r7, #4]
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Wait till MSI is ready */
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
  53              		.loc 1 277 8
  54 0018 08E0     		b	.L2
  55              	.L4:
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
  56              		.loc 1 279 9
  57 001a FFF7FEFF 		bl	HAL_GetTick
  58 001e 0246     		mov	r2, r0
  59              		.loc 1 279 23
  60 0020 7B68     		ldr	r3, [r7, #4]
  61 0022 D31A     		subs	r3, r2, r3
  62              		.loc 1 279 7
  63 0024 022B     		cmp	r3, #2
  64 0026 01D9     		bls	.L2
ARM GAS  /tmp/cct1HO6N.s 			page 7


 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_TIMEOUT;
  65              		.loc 1 281 14
  66 0028 0323     		movs	r3, #3
  67 002a 7CE0     		b	.L3
  68              	.L2:
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
  69              		.loc 1 277 9
  70 002c 404B     		ldr	r3, .L10
  71 002e 1B68     		ldr	r3, [r3]
  72 0030 03F00203 		and	r3, r3, #2
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
  73              		.loc 1 277 8
  74 0034 002B     		cmp	r3, #0
  75 0036 F0D0     		beq	.L4
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Set MSIRANGE default value */
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_MSIRANGE, RCC_MSIRANGE_6);
  76              		.loc 1 286 3
  77 0038 3D4B     		ldr	r3, .L10
  78 003a 1B68     		ldr	r3, [r3]
  79 003c 23F0F003 		bic	r3, r3, #240
  80 0040 3B4A     		ldr	r2, .L10
  81 0042 43F06003 		orr	r3, r3, #96
  82 0046 1360     		str	r3, [r2]
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset CFGR register (MSI is selected as system clock source) */
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  83              		.loc 1 289 3
  84 0048 394B     		ldr	r3, .L10
  85 004a 0022     		movs	r2, #0
  86 004c 9A60     		str	r2, [r3, #8]
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable for MSI as system clock source */
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SystemCoreClock = MSI_VALUE;
  87              		.loc 1 292 19
  88 004e 394B     		ldr	r3, .L10+4
  89 0050 394A     		ldr	r2, .L10+8
  90 0052 1A60     		str	r2, [r3]
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clock settings  */
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(HAL_InitTick(uwTickPrio) != HAL_OK)
  91              		.loc 1 295 6
  92 0054 394B     		ldr	r3, .L10+12
  93 0056 1B68     		ldr	r3, [r3]
  94 0058 1846     		mov	r0, r3
  95 005a FFF7FEFF 		bl	HAL_InitTick
  96 005e 0346     		mov	r3, r0
  97              		.loc 1 295 5
  98 0060 002B     		cmp	r3, #0
  99 0062 01D0     		beq	.L5
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     return HAL_ERROR;
 100              		.loc 1 297 12
 101 0064 0123     		movs	r3, #1
ARM GAS  /tmp/cct1HO6N.s 			page 8


 102 0066 5EE0     		b	.L3
 103              	.L5:
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Insure MSI selected as system clock source */
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get start tick */
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 104              		.loc 1 302 15
 105 0068 FFF7FEFF 		bl	HAL_GetTick
 106 006c 7860     		str	r0, [r7, #4]
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Wait till system clock source is ready */
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_MSI)
 107              		.loc 1 305 8
 108 006e 0AE0     		b	.L6
 109              	.L7:
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 110              		.loc 1 307 9
 111 0070 FFF7FEFF 		bl	HAL_GetTick
 112 0074 0246     		mov	r2, r0
 113              		.loc 1 307 23
 114 0076 7B68     		ldr	r3, [r7, #4]
 115 0078 D31A     		subs	r3, r2, r3
 116              		.loc 1 307 7
 117 007a 41F28832 		movw	r2, #5000
 118 007e 9342     		cmp	r3, r2
 119 0080 01D9     		bls	.L6
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_TIMEOUT;
 120              		.loc 1 309 14
 121 0082 0323     		movs	r3, #3
 122 0084 4FE0     		b	.L3
 123              	.L6:
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 124              		.loc 1 305 9
 125 0086 2A4B     		ldr	r3, .L10
 126 0088 9B68     		ldr	r3, [r3, #8]
 127 008a 03F00C03 		and	r3, r3, #12
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 128              		.loc 1 305 8
 129 008e 002B     		cmp	r3, #0
 130 0090 EED1     		bne	.L7
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset HSION, HSIKERON, HSIASFS, HSEON, HSECSSON, PLLON, PLLSAIxON bits */
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSION | RCC_CR_HSIKERON| RCC_CR_HSIASFS | RCC_CR_PLLON |
 131              		.loc 1 316 3
 132 0092 274B     		ldr	r3, .L10
 133 0094 1A68     		ldr	r2, [r3]
 134 0096 2649     		ldr	r1, .L10
 135 0098 294B     		ldr	r3, .L10+16
 136 009a 1340     		ands	r3, r3, r2
 137 009c 0B60     		str	r3, [r1]
ARM GAS  /tmp/cct1HO6N.s 			page 9


 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #elif defined(RCC_PLLSAI1_SUPPORT)
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSION | RCC_CR_HSIKERON| RCC_CR_HSIASFS | RCC_CR_PLLON |
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSION | RCC_CR_HSIKERON| RCC_CR_HSIASFS | RCC_CR_PLLON);
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Insure PLLRDY, PLLSAI1RDY and PLLSAI2RDY (if present) are reset */
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get start tick */
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 138              		.loc 1 330 15
 139 009e FFF7FEFF 		bl	HAL_GetTick
 140 00a2 7860     		str	r0, [r7, #4]
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY | RCC_CR_PLLSAI1RDY | RCC_CR_PLLSAI2RDY) != 0U)
 141              		.loc 1 334 8
 142 00a4 08E0     		b	.L8
 143              	.L9:
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #elif defined(RCC_PLLSAI1_SUPPORT)
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY | RCC_CR_PLLSAI1RDY) != 0U)
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 144              		.loc 1 346 9
 145 00a6 FFF7FEFF 		bl	HAL_GetTick
 146 00aa 0246     		mov	r2, r0
 147              		.loc 1 346 23
 148 00ac 7B68     		ldr	r3, [r7, #4]
 149 00ae D31A     		subs	r3, r2, r3
 150              		.loc 1 346 7
 151 00b0 022B     		cmp	r3, #2
 152 00b2 01D9     		bls	.L8
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_TIMEOUT;
 153              		.loc 1 348 14
 154 00b4 0323     		movs	r3, #3
 155 00b6 36E0     		b	.L3
 156              	.L8:
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 157              		.loc 1 334 9
 158 00b8 1D4B     		ldr	r3, .L10
 159 00ba 1B68     		ldr	r3, [r3]
 160 00bc 03F02853 		and	r3, r3, #704643072
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
ARM GAS  /tmp/cct1HO6N.s 			page 10


 161              		.loc 1 334 8
 162 00c0 002B     		cmp	r3, #0
 163 00c2 F0D1     		bne	.L9
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset PLLCFGR register */
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->PLLCFGR);
 164              		.loc 1 353 3
 165 00c4 1A4B     		ldr	r3, .L10
 166 00c6 0022     		movs	r2, #0
 167 00c8 DA60     		str	r2, [r3, #12]
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN_4 );
 168              		.loc 1 354 3
 169 00ca 194B     		ldr	r3, .L10
 170 00cc DB68     		ldr	r3, [r3, #12]
 171 00ce 184A     		ldr	r2, .L10
 172 00d0 43F48053 		orr	r3, r3, #4096
 173 00d4 D360     		str	r3, [r2, #12]
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI1_SUPPORT)
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset PLLSAI1CFGR register */
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->PLLSAI1CFGR);
 174              		.loc 1 359 3
 175 00d6 164B     		ldr	r3, .L10
 176 00d8 0022     		movs	r2, #0
 177 00da 1A61     		str	r2, [r3, #16]
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLSAI1CFGR,  RCC_PLLSAI1CFGR_PLLSAI1N_4 );
 178              		.loc 1 360 3
 179 00dc 144B     		ldr	r3, .L10
 180 00de 1B69     		ldr	r3, [r3, #16]
 181 00e0 134A     		ldr	r2, .L10
 182 00e2 43F48053 		orr	r3, r3, #4096
 183 00e6 1361     		str	r3, [r2, #16]
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI1_SUPPORT */
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset PLLSAI2CFGR register */
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->PLLSAI2CFGR);
 184              		.loc 1 367 3
 185 00e8 114B     		ldr	r3, .L10
 186 00ea 0022     		movs	r2, #0
 187 00ec 5A61     		str	r2, [r3, #20]
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLSAI2CFGR,  RCC_PLLSAI2CFGR_PLLSAI2N_4 );
 188              		.loc 1 368 3
 189 00ee 104B     		ldr	r3, .L10
 190 00f0 5B69     		ldr	r3, [r3, #20]
 191 00f2 0F4A     		ldr	r2, .L10
 192 00f4 43F48053 		orr	r3, r3, #4096
 193 00f8 5361     		str	r3, [r2, #20]
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset HSEBYP bit */
ARM GAS  /tmp/cct1HO6N.s 			page 11


 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 194              		.loc 1 373 3
 195 00fa 0D4B     		ldr	r3, .L10
 196 00fc 1B68     		ldr	r3, [r3]
 197 00fe 0C4A     		ldr	r2, .L10
 198 0100 23F48023 		bic	r3, r3, #262144
 199 0104 1360     		str	r3, [r2]
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Disable all interrupts */
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->CIER);
 200              		.loc 1 376 3
 201 0106 0A4B     		ldr	r3, .L10
 202 0108 0022     		movs	r2, #0
 203 010a 9A61     		str	r2, [r3, #24]
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Clear all interrupt flags */
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   WRITE_REG(RCC->CICR, 0xFFFFFFFFU);
 204              		.loc 1 379 3
 205 010c 084B     		ldr	r3, .L10
 206 010e 4FF0FF32 		mov	r2, #-1
 207 0112 1A62     		str	r2, [r3, #32]
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Clear all reset flags */
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->CSR, RCC_CSR_RMVF);
 208              		.loc 1 382 3
 209 0114 064B     		ldr	r3, .L10
 210 0116 D3F89430 		ldr	r3, [r3, #148]
 211 011a 054A     		ldr	r2, .L10
 212 011c 43F40003 		orr	r3, r3, #8388608
 213 0120 C2F89430 		str	r3, [r2, #148]
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return HAL_OK;
 214              		.loc 1 384 10
 215 0124 0023     		movs	r3, #0
 216              	.L3:
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 217              		.loc 1 385 1
 218 0126 1846     		mov	r0, r3
 219 0128 0837     		adds	r7, r7, #8
 220              	.LCFI3:
 221              		.cfi_def_cfa_offset 8
 222 012a BD46     		mov	sp, r7
 223              	.LCFI4:
 224              		.cfi_def_cfa_register 13
 225              		@ sp needed
 226 012c 80BD     		pop	{r7, pc}
 227              	.L11:
 228 012e 00BF     		.align	2
 229              	.L10:
 230 0130 00100240 		.word	1073876992
 231 0134 00000000 		.word	SystemCoreClock
 232 0138 00093D00 		.word	4000000
 233 013c 00000000 		.word	uwTickPrio
 234 0140 FFF4FEEA 		.word	-352389889
 235              		.cfi_endproc
 236              	.LFE130:
 238              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
ARM GAS  /tmp/cct1HO6N.s 			page 12


 239              		.align	1
 240              		.global	HAL_RCC_OscConfig
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 244              		.fpu fpv4-sp-d16
 246              	HAL_RCC_OscConfig:
 247              	.LFB131:
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Initialize the RCC Oscillators according to the specified parameters in the
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct  pointer to an RCC_OscInitTypeDef structure that
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval HAL status
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 248              		.loc 1 402 1
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 32
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252 0000 80B5     		push	{r7, lr}
 253              	.LCFI5:
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 7, -8
 256              		.cfi_offset 14, -4
 257 0002 88B0     		sub	sp, sp, #32
 258              	.LCFI6:
 259              		.cfi_def_cfa_offset 40
 260 0004 00AF     		add	r7, sp, #0
 261              	.LCFI7:
 262              		.cfi_def_cfa_register 7
 263 0006 7860     		str	r0, [r7, #4]
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   HAL_StatusTypeDef status;
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t sysclk_source, pll_config;
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check Null pointer */
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 264              		.loc 1 408 5
 265 0008 7B68     		ldr	r3, [r7, #4]
 266 000a 002B     		cmp	r3, #0
 267 000c 01D1     		bne	.L13
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     return HAL_ERROR;
 268              		.loc 1 410 12
 269 000e 0123     		movs	r3, #1
 270 0010 DBE3     		b	.L14
 271              	.L13:
ARM GAS  /tmp/cct1HO6N.s 			page 13


 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 272              		.loc 1 416 19
 273 0012 A44B     		ldr	r3, .L91
 274 0014 9B68     		ldr	r3, [r3, #8]
 275              		.loc 1 416 17
 276 0016 03F00C03 		and	r3, r3, #12
 277 001a BB61     		str	r3, [r7, #24]
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 278              		.loc 1 417 16
 279 001c A14B     		ldr	r3, .L91
 280 001e DB68     		ldr	r3, [r3, #12]
 281              		.loc 1 417 14
 282 0020 03F00303 		and	r3, r3, #3
 283 0024 7B61     		str	r3, [r7, #20]
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*----------------------------- MSI Configuration --------------------------*/
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 284              		.loc 1 420 25
 285 0026 7B68     		ldr	r3, [r7, #4]
 286 0028 1B68     		ldr	r3, [r3]
 287              		.loc 1 420 43
 288 002a 03F01003 		and	r3, r3, #16
 289              		.loc 1 420 5
 290 002e 002B     		cmp	r3, #0
 291 0030 00F0E180 		beq	.L15
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check if MSI is used as system clock or as PLL source when PLL is selected as system clock *
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 292              		.loc 1 428 7
 293 0034 BB69     		ldr	r3, [r7, #24]
 294 0036 002B     		cmp	r3, #0
 295 0038 07D0     		beq	.L16
 296              		.loc 1 428 44 discriminator 1
 297 003a BB69     		ldr	r3, [r7, #24]
 298 003c 0C2B     		cmp	r3, #12
 299 003e 40F08880 		bne	.L17
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_MSI)))
 300              		.loc 1 429 45
 301 0042 7B69     		ldr	r3, [r7, #20]
 302 0044 012B     		cmp	r3, #1
 303 0046 40F08480 		bne	.L17
 304              	.L16:
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 305              		.loc 1 431 11
 306 004a 964B     		ldr	r3, .L91
 307 004c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cct1HO6N.s 			page 14


 308 004e 03F00203 		and	r3, r3, #2
 309              		.loc 1 431 9
 310 0052 002B     		cmp	r3, #0
 311 0054 05D0     		beq	.L18
 312              		.loc 1 431 72 discriminator 1
 313 0056 7B68     		ldr	r3, [r7, #4]
 314 0058 9B69     		ldr	r3, [r3, #24]
 315              		.loc 1 431 51 discriminator 1
 316 005a 002B     		cmp	r3, #0
 317 005c 01D1     		bne	.L18
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 318              		.loc 1 433 16
 319 005e 0123     		movs	r3, #1
 320 0060 B3E3     		b	.L14
 321              	.L18:
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        /* Otherwise, just the calibration and MSI range change are allowed */
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            must be correctly programmed according to the frequency of the CPU clock
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (HCLK) and the supply voltage of the device. */
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(RCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 322              		.loc 1 442 29
 323 0062 7B68     		ldr	r3, [r7, #4]
 324 0064 1A6A     		ldr	r2, [r3, #32]
 325              		.loc 1 442 47
 326 0066 8F4B     		ldr	r3, .L91
 327 0068 1B68     		ldr	r3, [r3]
 328 006a 03F00803 		and	r3, r3, #8
 329 006e 002B     		cmp	r3, #0
 330 0070 04D0     		beq	.L19
 331              		.loc 1 442 47 is_stmt 0 discriminator 1
 332 0072 8C4B     		ldr	r3, .L91
 333 0074 1B68     		ldr	r3, [r3]
 334 0076 03F0F003 		and	r3, r3, #240
 335 007a 05E0     		b	.L20
 336              	.L19:
 337              		.loc 1 442 47 discriminator 2
 338 007c 894B     		ldr	r3, .L91
 339 007e D3F89430 		ldr	r3, [r3, #148]
 340 0082 1B09     		lsrs	r3, r3, #4
 341 0084 03F0F003 		and	r3, r3, #240
 342              	.L20:
 343              		.loc 1 442 11 is_stmt 1 discriminator 4
 344 0088 9342     		cmp	r3, r2
 345 008a 23D2     		bcs	.L21
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* First increase number of wait states update if necessary */
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 346              		.loc 1 445 14
 347 008c 7B68     		ldr	r3, [r7, #4]
 348 008e 1B6A     		ldr	r3, [r3, #32]
 349 0090 1846     		mov	r0, r3
 350 0092 FFF7FEFF 		bl	RCC_SetFlashLatencyFromMSIRange
ARM GAS  /tmp/cct1HO6N.s 			page 15


 351 0096 0346     		mov	r3, r0
 352              		.loc 1 445 13
 353 0098 002B     		cmp	r3, #0
 354 009a 01D0     		beq	.L22
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_ERROR;
 355              		.loc 1 447 20
 356 009c 0123     		movs	r3, #1
 357 009e 94E3     		b	.L14
 358              	.L22:
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 359              		.loc 1 451 11
 360 00a0 804B     		ldr	r3, .L91
 361 00a2 1B68     		ldr	r3, [r3]
 362 00a4 7F4A     		ldr	r2, .L91
 363 00a6 43F00803 		orr	r3, r3, #8
 364 00aa 1360     		str	r3, [r2]
 365 00ac 7D4B     		ldr	r3, .L91
 366 00ae 1B68     		ldr	r3, [r3]
 367 00b0 23F0F002 		bic	r2, r3, #240
 368 00b4 7B68     		ldr	r3, [r7, #4]
 369 00b6 1B6A     		ldr	r3, [r3, #32]
 370 00b8 7A49     		ldr	r1, .L91
 371 00ba 1343     		orrs	r3, r3, r2
 372 00bc 0B60     		str	r3, [r1]
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 373              		.loc 1 453 11
 374 00be 794B     		ldr	r3, .L91
 375 00c0 5B68     		ldr	r3, [r3, #4]
 376 00c2 23F47F42 		bic	r2, r3, #65280
 377 00c6 7B68     		ldr	r3, [r7, #4]
 378 00c8 DB69     		ldr	r3, [r3, #28]
 379 00ca 1B02     		lsls	r3, r3, #8
 380 00cc 7549     		ldr	r1, .L91
 381 00ce 1343     		orrs	r3, r3, r2
 382 00d0 4B60     		str	r3, [r1, #4]
 383 00d2 22E0     		b	.L23
 384              	.L21:
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         else
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Else, keep current flash latency while decreasing applies */
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 385              		.loc 1 459 11
 386 00d4 734B     		ldr	r3, .L91
 387 00d6 1B68     		ldr	r3, [r3]
 388 00d8 724A     		ldr	r2, .L91
 389 00da 43F00803 		orr	r3, r3, #8
 390 00de 1360     		str	r3, [r2]
 391 00e0 704B     		ldr	r3, .L91
 392 00e2 1B68     		ldr	r3, [r3]
 393 00e4 23F0F002 		bic	r2, r3, #240
ARM GAS  /tmp/cct1HO6N.s 			page 16


 394 00e8 7B68     		ldr	r3, [r7, #4]
 395 00ea 1B6A     		ldr	r3, [r3, #32]
 396 00ec 6D49     		ldr	r1, .L91
 397 00ee 1343     		orrs	r3, r3, r2
 398 00f0 0B60     		str	r3, [r1]
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 399              		.loc 1 461 11
 400 00f2 6C4B     		ldr	r3, .L91
 401 00f4 5B68     		ldr	r3, [r3, #4]
 402 00f6 23F47F42 		bic	r2, r3, #65280
 403 00fa 7B68     		ldr	r3, [r7, #4]
 404 00fc DB69     		ldr	r3, [r3, #28]
 405 00fe 1B02     		lsls	r3, r3, #8
 406 0100 6849     		ldr	r1, .L91
 407 0102 1343     		orrs	r3, r3, r2
 408 0104 4B60     		str	r3, [r1, #4]
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Decrease number of wait states update if necessary */
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 409              		.loc 1 464 14
 410 0106 7B68     		ldr	r3, [r7, #4]
 411 0108 1B6A     		ldr	r3, [r3, #32]
 412 010a 1846     		mov	r0, r3
 413 010c FFF7FEFF 		bl	RCC_SetFlashLatencyFromMSIRange
 414 0110 0346     		mov	r3, r0
 415              		.loc 1 464 13
 416 0112 002B     		cmp	r3, #0
 417 0114 01D0     		beq	.L23
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_ERROR;
 418              		.loc 1 466 20
 419 0116 0123     		movs	r3, #1
 420 0118 57E3     		b	.L14
 421              	.L23:
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Update the SystemCoreClock global variable */
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_
 422              		.loc 1 471 27
 423 011a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 424 011e 0146     		mov	r1, r0
 425              		.loc 1 471 71
 426 0120 604B     		ldr	r3, .L91
 427 0122 9B68     		ldr	r3, [r3, #8]
 428              		.loc 1 471 106
 429 0124 1B09     		lsrs	r3, r3, #4
 430 0126 03F00F03 		and	r3, r3, #15
 431              		.loc 1 471 70
 432 012a 5F4A     		ldr	r2, .L91+4
 433 012c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 434              		.loc 1 471 128
 435 012e 03F01F03 		and	r3, r3, #31
 436              		.loc 1 471 53
 437 0132 21FA03F3 		lsr	r3, r1, r3
 438              		.loc 1 471 25
ARM GAS  /tmp/cct1HO6N.s 			page 17


 439 0136 5D4A     		ldr	r2, .L91+8
 440 0138 1360     		str	r3, [r2]
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Configure the source of time base considering new system clocks settings*/
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         status = HAL_InitTick(uwTickPrio);
 441              		.loc 1 474 18
 442 013a 5D4B     		ldr	r3, .L91+12
 443 013c 1B68     		ldr	r3, [r3]
 444 013e 1846     		mov	r0, r3
 445 0140 FFF7FEFF 		bl	HAL_InitTick
 446 0144 0346     		mov	r3, r0
 447 0146 FB73     		strb	r3, [r7, #15]
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(status != HAL_OK)
 448              		.loc 1 475 11
 449 0148 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 450 014a 002B     		cmp	r3, #0
 451 014c 52D0     		beq	.L89
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return status;
 452              		.loc 1 477 18
 453 014e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 454 0150 3BE3     		b	.L14
 455              	.L17:
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the MSI State */
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 456              		.loc 1 484 27
 457 0152 7B68     		ldr	r3, [r7, #4]
 458 0154 9B69     		ldr	r3, [r3, #24]
 459              		.loc 1 484 9
 460 0156 002B     		cmp	r3, #0
 461 0158 32D0     		beq	.L25
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (MSI). */
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_ENABLE();
 462              		.loc 1 487 9
 463 015a 524B     		ldr	r3, .L91
 464 015c 1B68     		ldr	r3, [r3]
 465 015e 514A     		ldr	r2, .L91
 466 0160 43F00103 		orr	r3, r3, #1
 467 0164 1360     		str	r3, [r2]
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get timeout */
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 468              		.loc 1 490 21
 469 0166 FFF7FEFF 		bl	HAL_GetTick
 470 016a 3861     		str	r0, [r7, #16]
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till MSI is ready */
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 471              		.loc 1 493 14
 472 016c 08E0     		b	.L26
 473              	.L27:
ARM GAS  /tmp/cct1HO6N.s 			page 18


 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 474              		.loc 1 495 15
 475 016e FFF7FEFF 		bl	HAL_GetTick
 476 0172 0246     		mov	r2, r0
 477              		.loc 1 495 29
 478 0174 3B69     		ldr	r3, [r7, #16]
 479 0176 D31A     		subs	r3, r2, r3
 480              		.loc 1 495 13
 481 0178 022B     		cmp	r3, #2
 482 017a 01D9     		bls	.L26
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 483              		.loc 1 497 20
 484 017c 0323     		movs	r3, #3
 485 017e 24E3     		b	.L14
 486              	.L26:
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 487              		.loc 1 493 15
 488 0180 484B     		ldr	r3, .L91
 489 0182 1B68     		ldr	r3, [r3]
 490 0184 03F00203 		and	r3, r3, #2
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 491              		.loc 1 493 14
 492 0188 002B     		cmp	r3, #0
 493 018a F0D0     		beq	.L27
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 494              		.loc 1 501 9
 495 018c 454B     		ldr	r3, .L91
 496 018e 1B68     		ldr	r3, [r3]
 497 0190 444A     		ldr	r2, .L91
 498 0192 43F00803 		orr	r3, r3, #8
 499 0196 1360     		str	r3, [r2]
 500 0198 424B     		ldr	r3, .L91
 501 019a 1B68     		ldr	r3, [r3]
 502 019c 23F0F002 		bic	r2, r3, #240
 503 01a0 7B68     		ldr	r3, [r7, #4]
 504 01a2 1B6A     		ldr	r3, [r3, #32]
 505 01a4 3F49     		ldr	r1, .L91
 506 01a6 1343     		orrs	r3, r3, r2
 507 01a8 0B60     		str	r3, [r1]
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 508              		.loc 1 503 9
 509 01aa 3E4B     		ldr	r3, .L91
 510 01ac 5B68     		ldr	r3, [r3, #4]
 511 01ae 23F47F42 		bic	r2, r3, #65280
 512 01b2 7B68     		ldr	r3, [r7, #4]
 513 01b4 DB69     		ldr	r3, [r3, #28]
 514 01b6 1B02     		lsls	r3, r3, #8
 515 01b8 3A49     		ldr	r1, .L91
 516 01ba 1343     		orrs	r3, r3, r2
 517 01bc 4B60     		str	r3, [r1, #4]
 518 01be 1AE0     		b	.L15
ARM GAS  /tmp/cct1HO6N.s 			page 19


 519              	.L25:
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (MSI). */
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_DISABLE();
 520              		.loc 1 509 9
 521 01c0 384B     		ldr	r3, .L91
 522 01c2 1B68     		ldr	r3, [r3]
 523 01c4 374A     		ldr	r2, .L91
 524 01c6 23F00103 		bic	r3, r3, #1
 525 01ca 1360     		str	r3, [r2]
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get timeout */
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 526              		.loc 1 512 21
 527 01cc FFF7FEFF 		bl	HAL_GetTick
 528 01d0 3861     		str	r0, [r7, #16]
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till MSI is ready */
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U)
 529              		.loc 1 515 14
 530 01d2 08E0     		b	.L28
 531              	.L29:
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 532              		.loc 1 517 15
 533 01d4 FFF7FEFF 		bl	HAL_GetTick
 534 01d8 0246     		mov	r2, r0
 535              		.loc 1 517 29
 536 01da 3B69     		ldr	r3, [r7, #16]
 537 01dc D31A     		subs	r3, r2, r3
 538              		.loc 1 517 13
 539 01de 022B     		cmp	r3, #2
 540 01e0 01D9     		bls	.L28
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 541              		.loc 1 519 20
 542 01e2 0323     		movs	r3, #3
 543 01e4 F1E2     		b	.L14
 544              	.L28:
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 545              		.loc 1 515 15
 546 01e6 2F4B     		ldr	r3, .L91
 547 01e8 1B68     		ldr	r3, [r3]
 548 01ea 03F00203 		and	r3, r3, #2
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 549              		.loc 1 515 14
 550 01ee 002B     		cmp	r3, #0
 551 01f0 F0D1     		bne	.L29
 552 01f2 00E0     		b	.L15
 553              	.L89:
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 554              		.loc 1 431 9
 555 01f4 00BF     		nop
 556              	.L15:
ARM GAS  /tmp/cct1HO6N.s 			page 20


 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 557              		.loc 1 526 25
 558 01f6 7B68     		ldr	r3, [r7, #4]
 559 01f8 1B68     		ldr	r3, [r3]
 560              		.loc 1 526 43
 561 01fa 03F00103 		and	r3, r3, #1
 562              		.loc 1 526 5
 563 01fe 002B     		cmp	r3, #0
 564 0200 74D0     		beq	.L30
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((sysclk_source == RCC_CFGR_SWS_HSE) ||
 565              		.loc 1 532 7
 566 0202 BB69     		ldr	r3, [r7, #24]
 567 0204 082B     		cmp	r3, #8
 568 0206 05D0     		beq	.L31
 569              		.loc 1 532 44 discriminator 1
 570 0208 BB69     		ldr	r3, [r7, #24]
 571 020a 0C2B     		cmp	r3, #12
 572 020c 0ED1     		bne	.L32
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_HSE)))
 573              		.loc 1 533 45
 574 020e 7B69     		ldr	r3, [r7, #20]
 575 0210 032B     		cmp	r3, #3
 576 0212 0BD1     		bne	.L32
 577              	.L31:
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 578              		.loc 1 535 11
 579 0214 234B     		ldr	r3, .L91
 580 0216 1B68     		ldr	r3, [r3]
 581 0218 03F40033 		and	r3, r3, #131072
 582              		.loc 1 535 9
 583 021c 002B     		cmp	r3, #0
 584 021e 64D0     		beq	.L90
 585              		.loc 1 535 72 discriminator 1
 586 0220 7B68     		ldr	r3, [r7, #4]
 587 0222 5B68     		ldr	r3, [r3, #4]
 588              		.loc 1 535 51 discriminator 1
 589 0224 002B     		cmp	r3, #0
 590 0226 60D1     		bne	.L90
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 591              		.loc 1 537 16
 592 0228 0123     		movs	r3, #1
 593 022a CEE2     		b	.L14
 594              	.L32:
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
ARM GAS  /tmp/cct1HO6N.s 			page 21


 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 595              		.loc 1 543 7
 596 022c 7B68     		ldr	r3, [r7, #4]
 597 022e 5B68     		ldr	r3, [r3, #4]
 598 0230 B3F5803F 		cmp	r3, #65536
 599 0234 06D1     		bne	.L34
 600              		.loc 1 543 7 is_stmt 0 discriminator 1
 601 0236 1B4B     		ldr	r3, .L91
 602 0238 1B68     		ldr	r3, [r3]
 603 023a 1A4A     		ldr	r2, .L91
 604 023c 43F48033 		orr	r3, r3, #65536
 605 0240 1360     		str	r3, [r2]
 606 0242 1DE0     		b	.L35
 607              	.L34:
 608              		.loc 1 543 7 discriminator 2
 609 0244 7B68     		ldr	r3, [r7, #4]
 610 0246 5B68     		ldr	r3, [r3, #4]
 611 0248 B3F5A02F 		cmp	r3, #327680
 612 024c 0CD1     		bne	.L36
 613              		.loc 1 543 7 discriminator 3
 614 024e 154B     		ldr	r3, .L91
 615 0250 1B68     		ldr	r3, [r3]
 616 0252 144A     		ldr	r2, .L91
 617 0254 43F48023 		orr	r3, r3, #262144
 618 0258 1360     		str	r3, [r2]
 619 025a 124B     		ldr	r3, .L91
 620 025c 1B68     		ldr	r3, [r3]
 621 025e 114A     		ldr	r2, .L91
 622 0260 43F48033 		orr	r3, r3, #65536
 623 0264 1360     		str	r3, [r2]
 624 0266 0BE0     		b	.L35
 625              	.L36:
 626              		.loc 1 543 7 discriminator 4
 627 0268 0E4B     		ldr	r3, .L91
 628 026a 1B68     		ldr	r3, [r3]
 629 026c 0D4A     		ldr	r2, .L91
 630 026e 23F48033 		bic	r3, r3, #65536
 631 0272 1360     		str	r3, [r2]
 632 0274 0B4B     		ldr	r3, .L91
 633 0276 1B68     		ldr	r3, [r3]
 634 0278 0A4A     		ldr	r2, .L91
 635 027a 23F48023 		bic	r3, r3, #262144
 636 027e 1360     		str	r3, [r2]
 637              	.L35:
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the HSE State */
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 638              		.loc 1 546 27 is_stmt 1
 639 0280 7B68     		ldr	r3, [r7, #4]
 640 0282 5B68     		ldr	r3, [r3, #4]
 641              		.loc 1 546 9
 642 0284 002B     		cmp	r3, #0
 643 0286 1CD0     		beq	.L37
ARM GAS  /tmp/cct1HO6N.s 			page 22


 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 644              		.loc 1 549 21
 645 0288 FFF7FEFF 		bl	HAL_GetTick
 646 028c 3861     		str	r0, [r7, #16]
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 647              		.loc 1 552 14
 648 028e 11E0     		b	.L38
 649              	.L39:
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 650              		.loc 1 554 15
 651 0290 FFF7FEFF 		bl	HAL_GetTick
 652 0294 0246     		mov	r2, r0
 653              		.loc 1 554 29
 654 0296 3B69     		ldr	r3, [r7, #16]
 655 0298 D31A     		subs	r3, r2, r3
 656              		.loc 1 554 13
 657 029a 642B     		cmp	r3, #100
 658 029c 0AD9     		bls	.L38
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 659              		.loc 1 556 20
 660 029e 0323     		movs	r3, #3
 661 02a0 93E2     		b	.L14
 662              	.L92:
 663 02a2 00BF     		.align	2
 664              	.L91:
 665 02a4 00100240 		.word	1073876992
 666 02a8 00000000 		.word	AHBPrescTable
 667 02ac 00000000 		.word	SystemCoreClock
 668 02b0 00000000 		.word	uwTickPrio
 669              	.L38:
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 670              		.loc 1 552 15
 671 02b4 AE4B     		ldr	r3, .L93
 672 02b6 1B68     		ldr	r3, [r3]
 673 02b8 03F40033 		and	r3, r3, #131072
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 674              		.loc 1 552 14
 675 02bc 002B     		cmp	r3, #0
 676 02be E7D0     		beq	.L39
 677 02c0 14E0     		b	.L30
 678              	.L37:
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 679              		.loc 1 563 21
 680 02c2 FFF7FEFF 		bl	HAL_GetTick
 681 02c6 3861     		str	r0, [r7, #16]
ARM GAS  /tmp/cct1HO6N.s 			page 23


 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 682              		.loc 1 566 14
 683 02c8 08E0     		b	.L40
 684              	.L41:
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 685              		.loc 1 568 15
 686 02ca FFF7FEFF 		bl	HAL_GetTick
 687 02ce 0246     		mov	r2, r0
 688              		.loc 1 568 29
 689 02d0 3B69     		ldr	r3, [r7, #16]
 690 02d2 D31A     		subs	r3, r2, r3
 691              		.loc 1 568 13
 692 02d4 642B     		cmp	r3, #100
 693 02d6 01D9     		bls	.L40
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 694              		.loc 1 570 20
 695 02d8 0323     		movs	r3, #3
 696 02da 76E2     		b	.L14
 697              	.L40:
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 698              		.loc 1 566 15
 699 02dc A44B     		ldr	r3, .L93
 700 02de 1B68     		ldr	r3, [r3]
 701 02e0 03F40033 		and	r3, r3, #131072
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 702              		.loc 1 566 14
 703 02e4 002B     		cmp	r3, #0
 704 02e6 F0D1     		bne	.L41
 705 02e8 00E0     		b	.L30
 706              	.L90:
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 707              		.loc 1 535 9
 708 02ea 00BF     		nop
 709              	.L30:
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 710              		.loc 1 577 25
 711 02ec 7B68     		ldr	r3, [r7, #4]
 712 02ee 1B68     		ldr	r3, [r3]
 713              		.loc 1 577 43
 714 02f0 03F00203 		and	r3, r3, #2
 715              		.loc 1 577 5
 716 02f4 002B     		cmp	r3, #0
 717 02f6 60D0     		beq	.L42
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
ARM GAS  /tmp/cct1HO6N.s 			page 24


 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((sysclk_source == RCC_CFGR_SWS_HSI) ||
 718              		.loc 1 584 7
 719 02f8 BB69     		ldr	r3, [r7, #24]
 720 02fa 042B     		cmp	r3, #4
 721 02fc 05D0     		beq	.L43
 722              		.loc 1 584 44 discriminator 1
 723 02fe BB69     		ldr	r3, [r7, #24]
 724 0300 0C2B     		cmp	r3, #12
 725 0302 19D1     		bne	.L44
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_HSI)))
 726              		.loc 1 585 45
 727 0304 7B69     		ldr	r3, [r7, #20]
 728 0306 022B     		cmp	r3, #2
 729 0308 16D1     		bne	.L44
 730              	.L43:
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not be disabled */
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 731              		.loc 1 588 11
 732 030a 994B     		ldr	r3, .L93
 733 030c 1B68     		ldr	r3, [r3]
 734 030e 03F48063 		and	r3, r3, #1024
 735              		.loc 1 588 9
 736 0312 002B     		cmp	r3, #0
 737 0314 05D0     		beq	.L45
 738              		.loc 1 588 72 discriminator 1
 739 0316 7B68     		ldr	r3, [r7, #4]
 740 0318 DB68     		ldr	r3, [r3, #12]
 741              		.loc 1 588 51 discriminator 1
 742 031a 002B     		cmp	r3, #0
 743 031c 01D1     		bne	.L45
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 744              		.loc 1 590 16
 745 031e 0123     		movs	r3, #1
 746 0320 53E2     		b	.L14
 747              	.L45:
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 748              		.loc 1 596 9
 749 0322 934B     		ldr	r3, .L93
 750 0324 5B68     		ldr	r3, [r3, #4]
 751 0326 23F0FE42 		bic	r2, r3, #2130706432
 752 032a 7B68     		ldr	r3, [r7, #4]
 753 032c 1B69     		ldr	r3, [r3, #16]
 754 032e 1B06     		lsls	r3, r3, #24
 755 0330 8F49     		ldr	r1, .L93
 756 0332 1343     		orrs	r3, r3, r2
 757 0334 4B60     		str	r3, [r1, #4]
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 758              		.loc 1 588 9
ARM GAS  /tmp/cct1HO6N.s 			page 25


 759 0336 40E0     		b	.L42
 760              	.L44:
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the HSI State */
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 761              		.loc 1 602 27
 762 0338 7B68     		ldr	r3, [r7, #4]
 763 033a DB68     		ldr	r3, [r3, #12]
 764              		.loc 1 602 9
 765 033c 002B     		cmp	r3, #0
 766 033e 23D0     		beq	.L46
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 767              		.loc 1 605 9
 768 0340 8B4B     		ldr	r3, .L93
 769 0342 1B68     		ldr	r3, [r3]
 770 0344 8A4A     		ldr	r2, .L93
 771 0346 43F48073 		orr	r3, r3, #256
 772 034a 1360     		str	r3, [r2]
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 773              		.loc 1 608 21
 774 034c FFF7FEFF 		bl	HAL_GetTick
 775 0350 3861     		str	r0, [r7, #16]
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 776              		.loc 1 611 14
 777 0352 08E0     		b	.L47
 778              	.L48:
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 779              		.loc 1 613 15
 780 0354 FFF7FEFF 		bl	HAL_GetTick
 781 0358 0246     		mov	r2, r0
 782              		.loc 1 613 29
 783 035a 3B69     		ldr	r3, [r7, #16]
 784 035c D31A     		subs	r3, r2, r3
 785              		.loc 1 613 13
 786 035e 022B     		cmp	r3, #2
 787 0360 01D9     		bls	.L47
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 788              		.loc 1 615 20
 789 0362 0323     		movs	r3, #3
 790 0364 31E2     		b	.L14
 791              	.L47:
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 792              		.loc 1 611 15
 793 0366 824B     		ldr	r3, .L93
 794 0368 1B68     		ldr	r3, [r3]
 795 036a 03F48063 		and	r3, r3, #1024
ARM GAS  /tmp/cct1HO6N.s 			page 26


 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 796              		.loc 1 611 14
 797 036e 002B     		cmp	r3, #0
 798 0370 F0D0     		beq	.L48
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 799              		.loc 1 620 9
 800 0372 7F4B     		ldr	r3, .L93
 801 0374 5B68     		ldr	r3, [r3, #4]
 802 0376 23F0FE42 		bic	r2, r3, #2130706432
 803 037a 7B68     		ldr	r3, [r7, #4]
 804 037c 1B69     		ldr	r3, [r3, #16]
 805 037e 1B06     		lsls	r3, r3, #24
 806 0380 7B49     		ldr	r1, .L93
 807 0382 1343     		orrs	r3, r3, r2
 808 0384 4B60     		str	r3, [r1, #4]
 809 0386 18E0     		b	.L42
 810              	.L46:
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 811              		.loc 1 625 9
 812 0388 794B     		ldr	r3, .L93
 813 038a 1B68     		ldr	r3, [r3]
 814 038c 784A     		ldr	r2, .L93
 815 038e 23F48073 		bic	r3, r3, #256
 816 0392 1360     		str	r3, [r2]
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 817              		.loc 1 628 21
 818 0394 FFF7FEFF 		bl	HAL_GetTick
 819 0398 3861     		str	r0, [r7, #16]
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 820              		.loc 1 631 14
 821 039a 08E0     		b	.L49
 822              	.L50:
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 823              		.loc 1 633 15
 824 039c FFF7FEFF 		bl	HAL_GetTick
 825 03a0 0246     		mov	r2, r0
 826              		.loc 1 633 29
 827 03a2 3B69     		ldr	r3, [r7, #16]
 828 03a4 D31A     		subs	r3, r2, r3
 829              		.loc 1 633 13
 830 03a6 022B     		cmp	r3, #2
 831 03a8 01D9     		bls	.L49
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
ARM GAS  /tmp/cct1HO6N.s 			page 27


 832              		.loc 1 635 20
 833 03aa 0323     		movs	r3, #3
 834 03ac 0DE2     		b	.L14
 835              	.L49:
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 836              		.loc 1 631 15
 837 03ae 704B     		ldr	r3, .L93
 838 03b0 1B68     		ldr	r3, [r3]
 839 03b2 03F48063 		and	r3, r3, #1024
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 840              		.loc 1 631 14
 841 03b6 002B     		cmp	r3, #0
 842 03b8 F0D1     		bne	.L50
 843              	.L42:
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 844              		.loc 1 642 25
 845 03ba 7B68     		ldr	r3, [r7, #4]
 846 03bc 1B68     		ldr	r3, [r3]
 847              		.loc 1 642 43
 848 03be 03F00803 		and	r3, r3, #8
 849              		.loc 1 642 5
 850 03c2 002B     		cmp	r3, #0
 851 03c4 3CD0     		beq	.L51
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the LSI State */
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 852              		.loc 1 648 25
 853 03c6 7B68     		ldr	r3, [r7, #4]
 854 03c8 5B69     		ldr	r3, [r3, #20]
 855              		.loc 1 648 7
 856 03ca 002B     		cmp	r3, #0
 857 03cc 1CD0     		beq	.L52
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_CSR_LSIPREDIV)
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       uint32_t csr_temp = RCC->CSR;
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check LSI division factor */
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       assert_param(IS_RCC_LSIDIV(RCC_OscInitStruct->LSIDiv));
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if (RCC_OscInitStruct->LSIDiv != (csr_temp & RCC_CSR_LSIPREDIV))
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if (((csr_temp & RCC_CSR_LSIRDY) == RCC_CSR_LSIRDY) && \
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             ((csr_temp & RCC_CSR_LSION) != RCC_CSR_LSION))
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            /* If LSIRDY is set while LSION is not enabled,
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               LSIPREDIV can't be updated  */
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
ARM GAS  /tmp/cct1HO6N.s 			page 28


 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Turn off LSI before changing RCC_CSR_LSIPREDIV */
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if ((csr_temp & RCC_CSR_LSION) == RCC_CSR_LSION)
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_LSI_DISABLE();
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Get Start Tick*/
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           tickstart = HAL_GetTick();
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Wait till LSI is disabled */
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               return HAL_TIMEOUT;
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             }
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Set LSI division factor */
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         MODIFY_REG(RCC->CSR, RCC_CSR_LSIPREDIV, RCC_OscInitStruct->LSIDiv);
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_CSR_LSIPREDIV */
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 858              		.loc 1 690 7
 859 03ce 684B     		ldr	r3, .L93
 860 03d0 D3F89430 		ldr	r3, [r3, #148]
 861 03d4 664A     		ldr	r2, .L93
 862 03d6 43F00103 		orr	r3, r3, #1
 863 03da C2F89430 		str	r3, [r2, #148]
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 864              		.loc 1 693 19
 865 03de FFF7FEFF 		bl	HAL_GetTick
 866 03e2 3861     		str	r0, [r7, #16]
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 867              		.loc 1 696 12
 868 03e4 08E0     		b	.L53
 869              	.L54:
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 870              		.loc 1 698 13
 871 03e6 FFF7FEFF 		bl	HAL_GetTick
 872 03ea 0246     		mov	r2, r0
 873              		.loc 1 698 27
 874 03ec 3B69     		ldr	r3, [r7, #16]
 875 03ee D31A     		subs	r3, r2, r3
 876              		.loc 1 698 11
 877 03f0 022B     		cmp	r3, #2
 878 03f2 01D9     		bls	.L53
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
ARM GAS  /tmp/cct1HO6N.s 			page 29


 879              		.loc 1 700 18
 880 03f4 0323     		movs	r3, #3
 881 03f6 E8E1     		b	.L14
 882              	.L53:
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 883              		.loc 1 696 13
 884 03f8 5D4B     		ldr	r3, .L93
 885 03fa D3F89430 		ldr	r3, [r3, #148]
 886 03fe 03F00203 		and	r3, r3, #2
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 887              		.loc 1 696 12
 888 0402 002B     		cmp	r3, #0
 889 0404 EFD0     		beq	.L54
 890 0406 1BE0     		b	.L51
 891              	.L52:
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 892              		.loc 1 707 7
 893 0408 594B     		ldr	r3, .L93
 894 040a D3F89430 		ldr	r3, [r3, #148]
 895 040e 584A     		ldr	r2, .L93
 896 0410 23F00103 		bic	r3, r3, #1
 897 0414 C2F89430 		str	r3, [r2, #148]
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 898              		.loc 1 710 19
 899 0418 FFF7FEFF 		bl	HAL_GetTick
 900 041c 3861     		str	r0, [r7, #16]
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSI is disabled */
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 901              		.loc 1 713 12
 902 041e 08E0     		b	.L55
 903              	.L56:
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 904              		.loc 1 715 13
 905 0420 FFF7FEFF 		bl	HAL_GetTick
 906 0424 0246     		mov	r2, r0
 907              		.loc 1 715 27
 908 0426 3B69     		ldr	r3, [r7, #16]
 909 0428 D31A     		subs	r3, r2, r3
 910              		.loc 1 715 11
 911 042a 022B     		cmp	r3, #2
 912 042c 01D9     		bls	.L55
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 913              		.loc 1 717 18
 914 042e 0323     		movs	r3, #3
 915 0430 CBE1     		b	.L14
 916              	.L55:
ARM GAS  /tmp/cct1HO6N.s 			page 30


 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 917              		.loc 1 713 13
 918 0432 4F4B     		ldr	r3, .L93
 919 0434 D3F89430 		ldr	r3, [r3, #148]
 920 0438 03F00203 		and	r3, r3, #2
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 921              		.loc 1 713 12
 922 043c 002B     		cmp	r3, #0
 923 043e EFD1     		bne	.L56
 924              	.L51:
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 925              		.loc 1 723 25
 926 0440 7B68     		ldr	r3, [r7, #4]
 927 0442 1B68     		ldr	r3, [r3]
 928              		.loc 1 723 43
 929 0444 03F00403 		and	r3, r3, #4
 930              		.loc 1 723 5
 931 0448 002B     		cmp	r3, #0
 932 044a 00F0A580 		beq	.L57
 933              	.LBB2:
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 934              		.loc 1 725 22
 935 044e 0023     		movs	r3, #0
 936 0450 FB77     		strb	r3, [r7, #31]
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(RCC->APB1ENR1, RCC_APB1ENR1_PWREN))
 937              		.loc 1 732 8
 938 0452 474B     		ldr	r3, .L93
 939 0454 9B6D     		ldr	r3, [r3, #88]
 940 0456 03F08053 		and	r3, r3, #268435456
 941              		.loc 1 732 7
 942 045a 002B     		cmp	r3, #0
 943 045c 0DD1     		bne	.L58
 944              	.LBB3:
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 945              		.loc 1 734 7
 946 045e 444B     		ldr	r3, .L93
 947 0460 9B6D     		ldr	r3, [r3, #88]
 948 0462 434A     		ldr	r2, .L93
 949 0464 43F08053 		orr	r3, r3, #268435456
 950 0468 9365     		str	r3, [r2, #88]
 951 046a 414B     		ldr	r3, .L93
 952 046c 9B6D     		ldr	r3, [r3, #88]
 953 046e 03F08053 		and	r3, r3, #268435456
 954 0472 BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/cct1HO6N.s 			page 31


 955 0474 BB68     		ldr	r3, [r7, #8]
 956              	.LBE3:
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pwrclkchanged = SET;
 957              		.loc 1 735 21
 958 0476 0123     		movs	r3, #1
 959 0478 FB77     		strb	r3, [r7, #31]
 960              	.L58:
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 961              		.loc 1 738 8
 962 047a 3E4B     		ldr	r3, .L93+4
 963 047c 1B68     		ldr	r3, [r3]
 964 047e 03F48073 		and	r3, r3, #256
 965              		.loc 1 738 7
 966 0482 002B     		cmp	r3, #0
 967 0484 18D1     		bne	.L59
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       SET_BIT(PWR->CR1, PWR_CR1_DBP);
 968              		.loc 1 741 7
 969 0486 3B4B     		ldr	r3, .L93+4
 970 0488 1B68     		ldr	r3, [r3]
 971 048a 3A4A     		ldr	r2, .L93+4
 972 048c 43F48073 		orr	r3, r3, #256
 973 0490 1360     		str	r3, [r2]
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 974              		.loc 1 744 19
 975 0492 FFF7FEFF 		bl	HAL_GetTick
 976 0496 3861     		str	r0, [r7, #16]
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 977              		.loc 1 746 12
 978 0498 08E0     		b	.L60
 979              	.L61:
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 980              		.loc 1 748 13
 981 049a FFF7FEFF 		bl	HAL_GetTick
 982 049e 0246     		mov	r2, r0
 983              		.loc 1 748 27
 984 04a0 3B69     		ldr	r3, [r7, #16]
 985 04a2 D31A     		subs	r3, r2, r3
 986              		.loc 1 748 11
 987 04a4 022B     		cmp	r3, #2
 988 04a6 01D9     		bls	.L60
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 989              		.loc 1 750 18
 990 04a8 0323     		movs	r3, #3
 991 04aa 8EE1     		b	.L14
 992              	.L60:
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 993              		.loc 1 746 13
 994 04ac 314B     		ldr	r3, .L93+4
ARM GAS  /tmp/cct1HO6N.s 			page 32


 995 04ae 1B68     		ldr	r3, [r3]
 996 04b0 03F48073 		and	r3, r3, #256
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 997              		.loc 1 746 12
 998 04b4 002B     		cmp	r3, #0
 999 04b6 F0D0     		beq	.L61
 1000              	.L59:
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_BDCR_LSESYSDIS)
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState & RCC_BDCR_LSEON) != 0U)
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Set LSESYSDIS bit according to LSE propagation option (enabled or disabled) */
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       MODIFY_REG(RCC->BDCR, RCC_BDCR_LSESYSDIS, (RCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSDIS))
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((RCC_OscInitStruct->LSEState & RCC_BDCR_LSEBYP) != 0U)
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* LSE oscillator bypass enable */
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* LSE oscillator enable */
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 1001              		.loc 1 780 5
 1002 04b8 7B68     		ldr	r3, [r7, #4]
 1003 04ba 9B68     		ldr	r3, [r3, #8]
 1004 04bc 012B     		cmp	r3, #1
 1005 04be 08D1     		bne	.L62
 1006              		.loc 1 780 5 is_stmt 0 discriminator 1
 1007 04c0 2B4B     		ldr	r3, .L93
 1008 04c2 D3F89030 		ldr	r3, [r3, #144]
 1009 04c6 2A4A     		ldr	r2, .L93
 1010 04c8 43F00103 		orr	r3, r3, #1
 1011 04cc C2F89030 		str	r3, [r2, #144]
 1012 04d0 24E0     		b	.L63
 1013              	.L62:
 1014              		.loc 1 780 5 discriminator 2
 1015 04d2 7B68     		ldr	r3, [r7, #4]
 1016 04d4 9B68     		ldr	r3, [r3, #8]
 1017 04d6 052B     		cmp	r3, #5
 1018 04d8 10D1     		bne	.L64
 1019              		.loc 1 780 5 discriminator 3
 1020 04da 254B     		ldr	r3, .L93
ARM GAS  /tmp/cct1HO6N.s 			page 33


 1021 04dc D3F89030 		ldr	r3, [r3, #144]
 1022 04e0 234A     		ldr	r2, .L93
 1023 04e2 43F00403 		orr	r3, r3, #4
 1024 04e6 C2F89030 		str	r3, [r2, #144]
 1025 04ea 214B     		ldr	r3, .L93
 1026 04ec D3F89030 		ldr	r3, [r3, #144]
 1027 04f0 1F4A     		ldr	r2, .L93
 1028 04f2 43F00103 		orr	r3, r3, #1
 1029 04f6 C2F89030 		str	r3, [r2, #144]
 1030 04fa 0FE0     		b	.L63
 1031              	.L64:
 1032              		.loc 1 780 5 discriminator 4
 1033 04fc 1C4B     		ldr	r3, .L93
 1034 04fe D3F89030 		ldr	r3, [r3, #144]
 1035 0502 1B4A     		ldr	r2, .L93
 1036 0504 23F00103 		bic	r3, r3, #1
 1037 0508 C2F89030 		str	r3, [r2, #144]
 1038 050c 184B     		ldr	r3, .L93
 1039 050e D3F89030 		ldr	r3, [r3, #144]
 1040 0512 174A     		ldr	r2, .L93
 1041 0514 23F00403 		bic	r3, r3, #4
 1042 0518 C2F89030 		str	r3, [r2, #144]
 1043              	.L63:
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the LSE State */
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 1044              		.loc 1 784 25 is_stmt 1
 1045 051c 7B68     		ldr	r3, [r7, #4]
 1046 051e 9B68     		ldr	r3, [r3, #8]
 1047              		.loc 1 784 7
 1048 0520 002B     		cmp	r3, #0
 1049 0522 16D0     		beq	.L65
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1050              		.loc 1 787 19
 1051 0524 FFF7FEFF 		bl	HAL_GetTick
 1052 0528 3861     		str	r0, [r7, #16]
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 1053              		.loc 1 790 12
 1054 052a 0AE0     		b	.L66
 1055              	.L67:
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 1056              		.loc 1 792 13
 1057 052c FFF7FEFF 		bl	HAL_GetTick
 1058 0530 0246     		mov	r2, r0
 1059              		.loc 1 792 27
 1060 0532 3B69     		ldr	r3, [r7, #16]
 1061 0534 D31A     		subs	r3, r2, r3
 1062              		.loc 1 792 11
 1063 0536 41F28832 		movw	r2, #5000
 1064 053a 9342     		cmp	r3, r2
 1065 053c 01D9     		bls	.L66
ARM GAS  /tmp/cct1HO6N.s 			page 34


 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1066              		.loc 1 794 18
 1067 053e 0323     		movs	r3, #3
 1068 0540 43E1     		b	.L14
 1069              	.L66:
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1070              		.loc 1 790 13
 1071 0542 0B4B     		ldr	r3, .L93
 1072 0544 D3F89030 		ldr	r3, [r3, #144]
 1073 0548 03F00203 		and	r3, r3, #2
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1074              		.loc 1 790 12
 1075 054c 002B     		cmp	r3, #0
 1076 054e EDD0     		beq	.L67
 1077 0550 19E0     		b	.L68
 1078              	.L65:
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1079              		.loc 1 801 19
 1080 0552 FFF7FEFF 		bl	HAL_GetTick
 1081 0556 3861     		str	r0, [r7, #16]
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSE is disabled */
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 1082              		.loc 1 804 12
 1083 0558 0EE0     		b	.L69
 1084              	.L70:
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 1085              		.loc 1 806 13
 1086 055a FFF7FEFF 		bl	HAL_GetTick
 1087 055e 0246     		mov	r2, r0
 1088              		.loc 1 806 27
 1089 0560 3B69     		ldr	r3, [r7, #16]
 1090 0562 D31A     		subs	r3, r2, r3
 1091              		.loc 1 806 11
 1092 0564 41F28832 		movw	r2, #5000
 1093 0568 9342     		cmp	r3, r2
 1094 056a 05D9     		bls	.L69
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1095              		.loc 1 808 18
 1096 056c 0323     		movs	r3, #3
 1097 056e 2CE1     		b	.L14
 1098              	.L94:
 1099              		.align	2
 1100              	.L93:
 1101 0570 00100240 		.word	1073876992
 1102 0574 00700040 		.word	1073770496
 1103              	.L69:
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
ARM GAS  /tmp/cct1HO6N.s 			page 35


 1104              		.loc 1 804 13
 1105 0578 964B     		ldr	r3, .L95
 1106 057a D3F89030 		ldr	r3, [r3, #144]
 1107 057e 03F00203 		and	r3, r3, #2
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1108              		.loc 1 804 12
 1109 0582 002B     		cmp	r3, #0
 1110 0584 E9D1     		bne	.L70
 1111              	.L68:
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_BDCR_LSESYSDIS)
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* By default, stop disabling LSE propagation */
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSDIS);
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 1112              		.loc 1 819 7
 1113 0586 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1114 0588 012B     		cmp	r3, #1
 1115 058a 05D1     		bne	.L57
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 1116              		.loc 1 821 7
 1117 058c 914B     		ldr	r3, .L95
 1118 058e 9B6D     		ldr	r3, [r3, #88]
 1119 0590 904A     		ldr	r2, .L95
 1120 0592 23F08053 		bic	r3, r3, #268435456
 1121 0596 9365     		str	r3, [r2, #88]
 1122              	.L57:
 1123              	.LBE2:
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------ HSI48 Configuration -----------------------*/
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 1124              		.loc 1 826 25
 1125 0598 7B68     		ldr	r3, [r7, #4]
 1126 059a 1B68     		ldr	r3, [r3]
 1127              		.loc 1 826 43
 1128 059c 03F02003 		and	r3, r3, #32
 1129              		.loc 1 826 5
 1130 05a0 002B     		cmp	r3, #0
 1131 05a2 3CD0     		beq	.L71
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the LSI State */
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 1132              		.loc 1 832 25
 1133 05a4 7B68     		ldr	r3, [r7, #4]
 1134 05a6 5B6A     		ldr	r3, [r3, #36]
 1135              		.loc 1 832 7
ARM GAS  /tmp/cct1HO6N.s 			page 36


 1136 05a8 002B     		cmp	r3, #0
 1137 05aa 1CD0     		beq	.L72
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (HSI48). */
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_HSI48_ENABLE();
 1138              		.loc 1 835 7
 1139 05ac 894B     		ldr	r3, .L95
 1140 05ae D3F89830 		ldr	r3, [r3, #152]
 1141 05b2 884A     		ldr	r2, .L95
 1142 05b4 43F00103 		orr	r3, r3, #1
 1143 05b8 C2F89830 		str	r3, [r2, #152]
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1144              		.loc 1 838 19
 1145 05bc FFF7FEFF 		bl	HAL_GetTick
 1146 05c0 3861     		str	r0, [r7, #16]
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till HSI48 is ready */
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == 0U)
 1147              		.loc 1 841 12
 1148 05c2 08E0     		b	.L73
 1149              	.L74:
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 1150              		.loc 1 843 13
 1151 05c4 FFF7FEFF 		bl	HAL_GetTick
 1152 05c8 0246     		mov	r2, r0
 1153              		.loc 1 843 27
 1154 05ca 3B69     		ldr	r3, [r7, #16]
 1155 05cc D31A     		subs	r3, r2, r3
 1156              		.loc 1 843 11
 1157 05ce 022B     		cmp	r3, #2
 1158 05d0 01D9     		bls	.L73
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1159              		.loc 1 845 18
 1160 05d2 0323     		movs	r3, #3
 1161 05d4 F9E0     		b	.L14
 1162              	.L73:
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1163              		.loc 1 841 13
 1164 05d6 7F4B     		ldr	r3, .L95
 1165 05d8 D3F89830 		ldr	r3, [r3, #152]
 1166 05dc 03F00203 		and	r3, r3, #2
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1167              		.loc 1 841 12
 1168 05e0 002B     		cmp	r3, #0
 1169 05e2 EFD0     		beq	.L74
 1170 05e4 1BE0     		b	.L71
 1171              	.L72:
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (HSI48). */
ARM GAS  /tmp/cct1HO6N.s 			page 37


 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_HSI48_DISABLE();
 1172              		.loc 1 852 7
 1173 05e6 7B4B     		ldr	r3, .L95
 1174 05e8 D3F89830 		ldr	r3, [r3, #152]
 1175 05ec 794A     		ldr	r2, .L95
 1176 05ee 23F00103 		bic	r3, r3, #1
 1177 05f2 C2F89830 		str	r3, [r2, #152]
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1178              		.loc 1 855 19
 1179 05f6 FFF7FEFF 		bl	HAL_GetTick
 1180 05fa 3861     		str	r0, [r7, #16]
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till HSI48 is disabled */
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) != 0U)
 1181              		.loc 1 858 12
 1182 05fc 08E0     		b	.L75
 1183              	.L76:
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 1184              		.loc 1 860 13
 1185 05fe FFF7FEFF 		bl	HAL_GetTick
 1186 0602 0246     		mov	r2, r0
 1187              		.loc 1 860 27
 1188 0604 3B69     		ldr	r3, [r7, #16]
 1189 0606 D31A     		subs	r3, r2, r3
 1190              		.loc 1 860 11
 1191 0608 022B     		cmp	r3, #2
 1192 060a 01D9     		bls	.L75
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1193              		.loc 1 862 18
 1194 060c 0323     		movs	r3, #3
 1195 060e DCE0     		b	.L14
 1196              	.L75:
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1197              		.loc 1 858 13
 1198 0610 704B     		ldr	r3, .L95
 1199 0612 D3F89830 		ldr	r3, [r3, #152]
 1200 0616 03F00203 		and	r3, r3, #2
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1201              		.loc 1 858 12
 1202 061a 002B     		cmp	r3, #0
 1203 061c EFD1     		bne	.L76
 1204              	.L71:
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 1205              		.loc 1 872 28
ARM GAS  /tmp/cct1HO6N.s 			page 38


 1206 061e 7B68     		ldr	r3, [r7, #4]
 1207 0620 9B6A     		ldr	r3, [r3, #40]
 1208              		.loc 1 872 5
 1209 0622 002B     		cmp	r3, #0
 1210 0624 00F0D080 		beq	.L77
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(sysclk_source != RCC_CFGR_SWS_PLL)
 1211              		.loc 1 875 7
 1212 0628 BB69     		ldr	r3, [r7, #24]
 1213 062a 0C2B     		cmp	r3, #12
 1214 062c 00F08D80 		beq	.L78
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 1215              		.loc 1 877 32
 1216 0630 7B68     		ldr	r3, [r7, #4]
 1217 0632 9B6A     		ldr	r3, [r3, #40]
 1218              		.loc 1 877 9
 1219 0634 022B     		cmp	r3, #2
 1220 0636 5AD1     		bne	.L79
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Check the parameters */
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLP_SUPPORT */
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Disable the main PLL. */
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1221              		.loc 1 890 9
 1222 0638 664B     		ldr	r3, .L95
 1223 063a 1B68     		ldr	r3, [r3]
 1224 063c 654A     		ldr	r2, .L95
 1225 063e 23F08073 		bic	r3, r3, #16777216
 1226 0642 1360     		str	r3, [r2]
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1227              		.loc 1 893 21
 1228 0644 FFF7FEFF 		bl	HAL_GetTick
 1229 0648 3861     		str	r0, [r7, #16]
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 1230              		.loc 1 896 14
 1231 064a 08E0     		b	.L80
 1232              	.L81:
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1233              		.loc 1 898 15
 1234 064c FFF7FEFF 		bl	HAL_GetTick
 1235 0650 0246     		mov	r2, r0
 1236              		.loc 1 898 29
ARM GAS  /tmp/cct1HO6N.s 			page 39


 1237 0652 3B69     		ldr	r3, [r7, #16]
 1238 0654 D31A     		subs	r3, r2, r3
 1239              		.loc 1 898 13
 1240 0656 022B     		cmp	r3, #2
 1241 0658 01D9     		bls	.L80
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1242              		.loc 1 900 20
 1243 065a 0323     		movs	r3, #3
 1244 065c B5E0     		b	.L14
 1245              	.L80:
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1246              		.loc 1 896 15
 1247 065e 5D4B     		ldr	r3, .L95
 1248 0660 1B68     		ldr	r3, [r3]
 1249 0662 03F00073 		and	r3, r3, #33554432
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1250              		.loc 1 896 14
 1251 0666 002B     		cmp	r3, #0
 1252 0668 F0D1     		bne	.L81
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 1253              		.loc 1 905 9
 1254 066a 5A4B     		ldr	r3, .L95
 1255 066c DA68     		ldr	r2, [r3, #12]
 1256 066e 5A4B     		ldr	r3, .L95+4
 1257 0670 1340     		ands	r3, r3, r2
 1258 0672 7A68     		ldr	r2, [r7, #4]
 1259 0674 D16A     		ldr	r1, [r2, #44]
 1260 0676 7A68     		ldr	r2, [r7, #4]
 1261 0678 126B     		ldr	r2, [r2, #48]
 1262 067a 013A     		subs	r2, r2, #1
 1263 067c 1201     		lsls	r2, r2, #4
 1264 067e 1143     		orrs	r1, r1, r2
 1265 0680 7A68     		ldr	r2, [r7, #4]
 1266 0682 526B     		ldr	r2, [r2, #52]
 1267 0684 1202     		lsls	r2, r2, #8
 1268 0686 1143     		orrs	r1, r1, r2
 1269 0688 7A68     		ldr	r2, [r7, #4]
 1270 068a D26B     		ldr	r2, [r2, #60]
 1271 068c 5208     		lsrs	r2, r2, #1
 1272 068e 013A     		subs	r2, r2, #1
 1273 0690 5205     		lsls	r2, r2, #21
 1274 0692 1143     		orrs	r1, r1, r2
 1275 0694 7A68     		ldr	r2, [r7, #4]
 1276 0696 126C     		ldr	r2, [r2, #64]
 1277 0698 5208     		lsrs	r2, r2, #1
 1278 069a 013A     		subs	r2, r2, #1
 1279 069c 5206     		lsls	r2, r2, #25
 1280 069e 1143     		orrs	r1, r1, r2
 1281 06a0 7A68     		ldr	r2, [r7, #4]
 1282 06a2 926B     		ldr	r2, [r2, #56]
 1283 06a4 D206     		lsls	r2, r2, #27
 1284 06a6 0A43     		orrs	r2, r2, r1
ARM GAS  /tmp/cct1HO6N.s 			page 40


 1285 06a8 4A49     		ldr	r1, .L95
 1286 06aa 1343     		orrs	r3, r3, r2
 1287 06ac CB60     		str	r3, [r1, #12]
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLN,
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLP,
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLQ,
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLR);
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Enable the main PLL. */
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1288              		.loc 1 915 9
 1289 06ae 494B     		ldr	r3, .L95
 1290 06b0 1B68     		ldr	r3, [r3]
 1291 06b2 484A     		ldr	r2, .L95
 1292 06b4 43F08073 		orr	r3, r3, #16777216
 1293 06b8 1360     		str	r3, [r2]
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Enable PLL System Clock output. */
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 1294              		.loc 1 918 9
 1295 06ba 464B     		ldr	r3, .L95
 1296 06bc DB68     		ldr	r3, [r3, #12]
 1297 06be 454A     		ldr	r2, .L95
 1298 06c0 43F08073 		orr	r3, r3, #16777216
 1299 06c4 D360     		str	r3, [r2, #12]
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1300              		.loc 1 921 21
 1301 06c6 FFF7FEFF 		bl	HAL_GetTick
 1302 06ca 3861     		str	r0, [r7, #16]
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 1303              		.loc 1 924 14
 1304 06cc 08E0     		b	.L82
 1305              	.L83:
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1306              		.loc 1 926 15
 1307 06ce FFF7FEFF 		bl	HAL_GetTick
 1308 06d2 0246     		mov	r2, r0
 1309              		.loc 1 926 29
 1310 06d4 3B69     		ldr	r3, [r7, #16]
 1311 06d6 D31A     		subs	r3, r2, r3
 1312              		.loc 1 926 13
 1313 06d8 022B     		cmp	r3, #2
 1314 06da 01D9     		bls	.L82
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1315              		.loc 1 928 20
 1316 06dc 0323     		movs	r3, #3
 1317 06de 74E0     		b	.L14
 1318              	.L82:
ARM GAS  /tmp/cct1HO6N.s 			page 41


 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1319              		.loc 1 924 15
 1320 06e0 3C4B     		ldr	r3, .L95
 1321 06e2 1B68     		ldr	r3, [r3]
 1322 06e4 03F00073 		and	r3, r3, #33554432
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1323              		.loc 1 924 14
 1324 06e8 002B     		cmp	r3, #0
 1325 06ea F0D0     		beq	.L83
 1326 06ec 6CE0     		b	.L77
 1327              	.L79:
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Disable the main PLL. */
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1328              		.loc 1 935 9
 1329 06ee 394B     		ldr	r3, .L95
 1330 06f0 1B68     		ldr	r3, [r3]
 1331 06f2 384A     		ldr	r2, .L95
 1332 06f4 23F08073 		bic	r3, r3, #16777216
 1333 06f8 1360     		str	r3, [r2]
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Disable all PLL outputs to save power if no PLLs on */
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI1_SUPPORT) && defined(RCC_CR_PLLSAI2RDY)
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, (RCC_CR_PLLSAI1RDY | RCC_CR_PLLSAI2RDY)) == 0U)
 1334              		.loc 1 939 12
 1335 06fa 364B     		ldr	r3, .L95
 1336 06fc 1B68     		ldr	r3, [r3]
 1337 06fe 03F02053 		and	r3, r3, #671088640
 1338              		.loc 1 939 11
 1339 0702 002B     		cmp	r3, #0
 1340 0704 05D1     		bne	.L84
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLSOURCE_NONE);
 1341              		.loc 1 941 11
 1342 0706 334B     		ldr	r3, .L95
 1343 0708 DB68     		ldr	r3, [r3, #12]
 1344 070a 324A     		ldr	r2, .L95
 1345 070c 23F00303 		bic	r3, r3, #3
 1346 0710 D360     		str	r3, [r2, #12]
 1347              	.L84:
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #elif defined(RCC_PLLSAI1_SUPPORT)
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == 0U)
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLSOURCE_NONE);
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, RCC_PLLSOURCE_NONE);
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI1_SUPPORT && RCC_CR_PLLSAI2RDY */
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI3CLK);
 1348              		.loc 1 953 9
ARM GAS  /tmp/cct1HO6N.s 			page 42


 1349 0712 304B     		ldr	r3, .L95
 1350 0714 DB68     		ldr	r3, [r3, #12]
 1351 0716 2F4A     		ldr	r2, .L95
 1352 0718 23F08873 		bic	r3, r3, #17825792
 1353 071c 23F48033 		bic	r3, r3, #65536
 1354 0720 D360     		str	r3, [r2, #12]
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #elif defined(RCC_PLLSAI1_SUPPORT)
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI2CLK);
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLL_SYSCLK | RCC_PLL_48M1CLK);
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1355              		.loc 1 961 21
 1356 0722 FFF7FEFF 		bl	HAL_GetTick
 1357 0726 3861     		str	r0, [r7, #16]
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 1358              		.loc 1 964 14
 1359 0728 08E0     		b	.L85
 1360              	.L86:
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1361              		.loc 1 966 15
 1362 072a FFF7FEFF 		bl	HAL_GetTick
 1363 072e 0246     		mov	r2, r0
 1364              		.loc 1 966 29
 1365 0730 3B69     		ldr	r3, [r7, #16]
 1366 0732 D31A     		subs	r3, r2, r3
 1367              		.loc 1 966 13
 1368 0734 022B     		cmp	r3, #2
 1369 0736 01D9     		bls	.L85
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1370              		.loc 1 968 20
 1371 0738 0323     		movs	r3, #3
 1372 073a 46E0     		b	.L14
 1373              	.L85:
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1374              		.loc 1 964 15
 1375 073c 254B     		ldr	r3, .L95
 1376 073e 1B68     		ldr	r3, [r3]
 1377 0740 03F00073 		and	r3, r3, #33554432
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1378              		.loc 1 964 14
 1379 0744 002B     		cmp	r3, #0
 1380 0746 F0D1     		bne	.L86
 1381 0748 3EE0     		b	.L77
 1382              	.L78:
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
ARM GAS  /tmp/cct1HO6N.s 			page 43


 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 1383              		.loc 1 976 33
 1384 074a 7B68     		ldr	r3, [r7, #4]
 1385 074c 9B6A     		ldr	r3, [r3, #40]
 1386              		.loc 1 976 9
 1387 074e 012B     		cmp	r3, #1
 1388 0750 01D1     		bne	.L87
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 1389              		.loc 1 978 16
 1390 0752 0123     		movs	r3, #1
 1391 0754 39E0     		b	.L14
 1392              	.L87:
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         pll_config = RCC->PLLCFGR;
 1393              		.loc 1 982 25
 1394 0756 1F4B     		ldr	r3, .L95
 1395              		.loc 1 982 20
 1396 0758 DB68     		ldr	r3, [r3, #12]
 1397 075a 7B61     		str	r3, [r7, #20]
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 1398              		.loc 1 984 13
 1399 075c 7B69     		ldr	r3, [r7, #20]
 1400 075e 03F00302 		and	r2, r3, #3
 1401              		.loc 1 984 80
 1402 0762 7B68     		ldr	r3, [r7, #4]
 1403 0764 DB6A     		ldr	r3, [r3, #44]
 1404              		.loc 1 984 11
 1405 0766 9A42     		cmp	r2, r3
 1406 0768 2CD1     		bne	.L88
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC
 1407              		.loc 1 985 13 discriminator 1
 1408 076a 7B69     		ldr	r3, [r7, #20]
 1409 076c 03F07002 		and	r2, r3, #112
 1410              		.loc 1 985 82 discriminator 1
 1411 0770 7B68     		ldr	r3, [r7, #4]
 1412 0772 1B6B     		ldr	r3, [r3, #48]
 1413              		.loc 1 985 88 discriminator 1
 1414 0774 013B     		subs	r3, r3, #1
 1415              		.loc 1 985 94 discriminator 1
 1416 0776 1B01     		lsls	r3, r3, #4
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC
 1417              		.loc 1 984 92 discriminator 1
 1418 0778 9A42     		cmp	r2, r3
 1419 077a 23D1     		bne	.L88
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFG
 1420              		.loc 1 986 13
 1421 077c 7B69     		ldr	r3, [r7, #20]
 1422 077e 03F4FE42 		and	r2, r3, #32512
 1423              		.loc 1 986 81
 1424 0782 7B68     		ldr	r3, [r7, #4]
 1425 0784 5B6B     		ldr	r3, [r3, #52]
 1426              		.loc 1 986 87
ARM GAS  /tmp/cct1HO6N.s 			page 44


 1427 0786 1B02     		lsls	r3, r3, #8
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC
 1428              		.loc 1 985 120
 1429 0788 9A42     		cmp	r2, r3
 1430 078a 1BD1     		bne	.L88
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_DIV_2_31_SUPPORT)
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLPDIV) != (RCC_OscInitStruct->PLL.PLLP << RCC_PLLCFG
 1431              		.loc 1 989 13
 1432 078c 7B69     		ldr	r3, [r7, #20]
 1433 078e 03F07842 		and	r2, r3, #-134217728
 1434              		.loc 1 989 81
 1435 0792 7B68     		ldr	r3, [r7, #4]
 1436 0794 9B6B     		ldr	r3, [r3, #56]
 1437              		.loc 1 989 87
 1438 0796 DB06     		lsls	r3, r3, #27
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFG
 1439              		.loc 1 986 113
 1440 0798 9A42     		cmp	r2, r3
 1441 079a 13D1     		bne	.L88
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP)    != ((RCC_OscInitStruct->PLL.PLLP == RCC_PLLP_
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ)    != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 
 1442              		.loc 1 994 13
 1443 079c 7B69     		ldr	r3, [r7, #20]
 1444 079e 03F4C002 		and	r2, r3, #6291456
 1445              		.loc 1 994 84
 1446 07a2 7B68     		ldr	r3, [r7, #4]
 1447 07a4 DB6B     		ldr	r3, [r3, #60]
 1448              		.loc 1 994 91
 1449 07a6 5B08     		lsrs	r3, r3, #1
 1450              		.loc 1 994 98
 1451 07a8 013B     		subs	r3, r3, #1
 1452              		.loc 1 994 104
 1453 07aa 5B05     		lsls	r3, r3, #21
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 1454              		.loc 1 989 116
 1455 07ac 9A42     		cmp	r2, r3
 1456 07ae 09D1     		bne	.L88
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR)    != ((((RCC_OscInitStruct->PLL.PLLR) >> 1U) - 
 1457              		.loc 1 995 13
 1458 07b0 7B69     		ldr	r3, [r7, #20]
 1459 07b2 03F0C062 		and	r2, r3, #100663296
 1460              		.loc 1 995 84
 1461 07b6 7B68     		ldr	r3, [r7, #4]
 1462 07b8 1B6C     		ldr	r3, [r3, #64]
 1463              		.loc 1 995 91
 1464 07ba 5B08     		lsrs	r3, r3, #1
 1465              		.loc 1 995 98
 1466 07bc 013B     		subs	r3, r3, #1
 1467              		.loc 1 995 104
 1468 07be 5B06     		lsls	r3, r3, #25
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR)    != ((((RCC_OscInitStruct->PLL.PLLR) >> 1U) - 
 1469              		.loc 1 994 130
 1470 07c0 9A42     		cmp	r2, r3
ARM GAS  /tmp/cct1HO6N.s 			page 45


 1471 07c2 01D0     		beq	.L77
 1472              	.L88:
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 1473              		.loc 1 997 18
 1474 07c4 0123     		movs	r3, #1
 1475 07c6 00E0     		b	.L14
 1476              	.L77:
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return HAL_OK;
 1477              		.loc 1 1002 10
 1478 07c8 0023     		movs	r3, #0
 1479              	.L14:
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 1480              		.loc 1 1003 1
 1481 07ca 1846     		mov	r0, r3
 1482 07cc 2037     		adds	r7, r7, #32
 1483              	.LCFI8:
 1484              		.cfi_def_cfa_offset 8
 1485 07ce BD46     		mov	sp, r7
 1486              	.LCFI9:
 1487              		.cfi_def_cfa_register 13
 1488              		@ sp needed
 1489 07d0 80BD     		pop	{r7, pc}
 1490              	.L96:
 1491 07d2 00BF     		.align	2
 1492              	.L95:
 1493 07d4 00100240 		.word	1073876992
 1494 07d8 8C809D01 		.word	27099276
 1495              		.cfi_endproc
 1496              	.LFE131:
 1498              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1499              		.align	1
 1500              		.global	HAL_RCC_ClockConfig
 1501              		.syntax unified
 1502              		.thumb
 1503              		.thumb_func
 1504              		.fpu fpv4-sp-d16
 1506              	HAL_RCC_ClockConfig:
 1507              	.LFB132:
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Initialize the CPU, AHB and APB busses clocks according to the specified
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct  pointer to an RCC_OscInitTypeDef structure that
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  FLatency  FLASH Latency
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_0   FLASH 0 Latency cycle
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_1   FLASH 1 Latency cycle
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_2   FLASH 2 Latency cycles
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_3   FLASH 3 Latency cycles
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_4   FLASH 4 Latency cycles
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @if STM32L4S9xx
ARM GAS  /tmp/cct1HO6N.s 			page 46


1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_5   FLASH 5 Latency cycles
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_6   FLASH 6 Latency cycles
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_7   FLASH 7 Latency cycles
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_8   FLASH 8 Latency cycles
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_9   FLASH 9 Latency cycles
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_10  FLASH 10 Latency cycles
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_11  FLASH 11 Latency cycles
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_12  FLASH 12 Latency cycles
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_13  FLASH 13 Latency cycles
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_14  FLASH 14 Latency cycles
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_15  FLASH 15 Latency cycles
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @endif
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The MSI is used by default as system clock source after
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STANDBY mode. After restart from Reset,
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         the MSI frequency is set to its default value 4 MHz.
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The HSI can be selected as system clock source after
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         from STOP modes or in case of failure of the HSE used directly or indirectly
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         as system clock (if the Clock Security System CSS is enabled).
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         occur when the clock source is ready.
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   You can use HAL_RCC_GetClockConfig() function to know which clock is
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         currently used as system clock source.
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 1508              		.loc 1 1056 1
 1509              		.cfi_startproc
 1510              		@ args = 0, pretend = 0, frame = 16
 1511              		@ frame_needed = 1, uses_anonymous_args = 0
 1512 0000 80B5     		push	{r7, lr}
 1513              	.LCFI10:
 1514              		.cfi_def_cfa_offset 8
 1515              		.cfi_offset 7, -8
 1516              		.cfi_offset 14, -4
 1517 0002 84B0     		sub	sp, sp, #16
 1518              	.LCFI11:
 1519              		.cfi_def_cfa_offset 24
 1520 0004 00AF     		add	r7, sp, #0
 1521              	.LCFI12:
 1522              		.cfi_def_cfa_register 7
 1523 0006 7860     		str	r0, [r7, #4]
 1524 0008 3960     		str	r1, [r7]
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
ARM GAS  /tmp/cct1HO6N.s 			page 47


1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t hpre = RCC_SYSCLK_DIV1;
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   HAL_StatusTypeDef status;
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check Null pointer */
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 1525              		.loc 1 1064 5
 1526 000a 7B68     		ldr	r3, [r7, #4]
 1527 000c 002B     		cmp	r3, #0
 1528 000e 01D1     		bne	.L98
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     return HAL_ERROR;
 1529              		.loc 1 1066 12
 1530 0010 0123     		movs	r3, #1
 1531 0012 C8E0     		b	.L99
 1532              	.L98:
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 1533              		.loc 1 1078 17
 1534 0014 664B     		ldr	r3, .L112
 1535 0016 1B68     		ldr	r3, [r3]
 1536 0018 03F00703 		and	r3, r3, #7
 1537              		.loc 1 1078 5
 1538 001c 3A68     		ldr	r2, [r7]
 1539 001e 9A42     		cmp	r2, r3
 1540 0020 10D9     		bls	.L100
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1541              		.loc 1 1081 5
 1542 0022 634B     		ldr	r3, .L112
 1543 0024 1B68     		ldr	r3, [r3]
 1544 0026 23F00702 		bic	r2, r3, #7
 1545 002a 6149     		ldr	r1, .L112
 1546 002c 3B68     		ldr	r3, [r7]
 1547 002e 1343     		orrs	r3, r3, r2
 1548 0030 0B60     		str	r3, [r1]
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1549              		.loc 1 1085 8
 1550 0032 5F4B     		ldr	r3, .L112
 1551 0034 1B68     		ldr	r3, [r3]
 1552 0036 03F00703 		and	r3, r3, #7
 1553              		.loc 1 1085 7
ARM GAS  /tmp/cct1HO6N.s 			page 48


 1554 003a 3A68     		ldr	r2, [r7]
 1555 003c 9A42     		cmp	r2, r3
 1556 003e 01D0     		beq	.L100
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_ERROR;
 1557              		.loc 1 1087 14
 1558 0040 0123     		movs	r3, #1
 1559 0042 B0E0     		b	.L99
 1560              	.L100:
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1561              		.loc 1 1092 25
 1562 0044 7B68     		ldr	r3, [r7, #4]
 1563 0046 1B68     		ldr	r3, [r3]
 1564              		.loc 1 1092 38
 1565 0048 03F00103 		and	r3, r3, #1
 1566              		.loc 1 1092 5
 1567 004c 002B     		cmp	r3, #0
 1568 004e 4CD0     		beq	.L101
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1569              		.loc 1 1097 25
 1570 0050 7B68     		ldr	r3, [r7, #4]
 1571 0052 5B68     		ldr	r3, [r3, #4]
 1572              		.loc 1 1097 7
 1573 0054 032B     		cmp	r3, #3
 1574 0056 07D1     		bne	.L102
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the PLL ready flag */
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 1575              		.loc 1 1100 10
 1576 0058 564B     		ldr	r3, .L112+4
 1577 005a 1B68     		ldr	r3, [r3]
 1578 005c 03F00073 		and	r3, r3, #33554432
 1579              		.loc 1 1100 9
 1580 0060 002B     		cmp	r3, #0
 1581 0062 21D1     		bne	.L103
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 1582              		.loc 1 1102 16
 1583 0064 0123     		movs	r3, #1
 1584 0066 9EE0     		b	.L99
 1585              	.L102:
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Undershoot management when selection PLL as SYSCLK source and frequency above 80Mhz */
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Compute target PLL output frequency */
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_GetSysClockFreqFromPLLSource() > 80000000U)
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) == RCC_SYSCLK_DIV1)
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
ARM GAS  /tmp/cct1HO6N.s 			page 49


1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Intermediate step with HCLK prescaler 2 necessary before to go over 80Mhz */
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           hpre = RCC_SYSCLK_DIV2;
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         else if((((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK) && (R
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Intermediate step with HCLK prescaler 2 necessary before to go over 80Mhz */
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           hpre = RCC_SYSCLK_DIV2;
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         else
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* nothing to do */
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* HSE is selected as System Clock Source */
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1586              		.loc 1 1131 27
 1587 0068 7B68     		ldr	r3, [r7, #4]
 1588 006a 5B68     		ldr	r3, [r3, #4]
 1589              		.loc 1 1131 9
 1590 006c 022B     		cmp	r3, #2
 1591 006e 07D1     		bne	.L104
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Check the HSE ready flag */
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 1592              		.loc 1 1134 12
 1593 0070 504B     		ldr	r3, .L112+4
 1594 0072 1B68     		ldr	r3, [r3]
 1595 0074 03F40033 		and	r3, r3, #131072
 1596              		.loc 1 1134 11
 1597 0078 002B     		cmp	r3, #0
 1598 007a 15D1     		bne	.L103
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 1599              		.loc 1 1136 18
 1600 007c 0123     		movs	r3, #1
 1601 007e 92E0     		b	.L99
 1602              	.L104:
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI is selected as System Clock Source */
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 1603              		.loc 1 1140 32
 1604 0080 7B68     		ldr	r3, [r7, #4]
 1605 0082 5B68     		ldr	r3, [r3, #4]
 1606              		.loc 1 1140 14
 1607 0084 002B     		cmp	r3, #0
 1608 0086 07D1     		bne	.L105
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Check the MSI ready flag */
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 1609              		.loc 1 1143 12
ARM GAS  /tmp/cct1HO6N.s 			page 50


 1610 0088 4A4B     		ldr	r3, .L112+4
 1611 008a 1B68     		ldr	r3, [r3]
 1612 008c 03F00203 		and	r3, r3, #2
 1613              		.loc 1 1143 11
 1614 0090 002B     		cmp	r3, #0
 1615 0092 09D1     		bne	.L103
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 1616              		.loc 1 1145 18
 1617 0094 0123     		movs	r3, #1
 1618 0096 86E0     		b	.L99
 1619              	.L105:
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* HSI is selected as System Clock Source */
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Check the HSI ready flag */
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 1620              		.loc 1 1152 12
 1621 0098 464B     		ldr	r3, .L112+4
 1622 009a 1B68     		ldr	r3, [r3]
 1623 009c 03F48063 		and	r3, r3, #1024
 1624              		.loc 1 1152 11
 1625 00a0 002B     		cmp	r3, #0
 1626 00a2 01D1     		bne	.L103
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 1627              		.loc 1 1154 18
 1628 00a4 0123     		movs	r3, #1
 1629 00a6 7EE0     		b	.L99
 1630              	.L103:
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Overshoot management when going down from PLL as SYSCLK source and frequency above 80Mhz *
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(HAL_RCC_GetSysClockFreq() > 80000000U)
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Intermediate step with HCLK prescaler 2 necessary before to go under 80Mhz */
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         hpre = RCC_SYSCLK_DIV2;
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 1631              		.loc 1 1169 5
 1632 00a8 424B     		ldr	r3, .L112+4
 1633 00aa 9B68     		ldr	r3, [r3, #8]
 1634 00ac 23F00302 		bic	r2, r3, #3
 1635 00b0 7B68     		ldr	r3, [r7, #4]
 1636 00b2 5B68     		ldr	r3, [r3, #4]
 1637 00b4 3F49     		ldr	r1, .L112+4
 1638 00b6 1343     		orrs	r3, r3, r2
 1639 00b8 8B60     		str	r3, [r1, #8]
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
ARM GAS  /tmp/cct1HO6N.s 			page 51


1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Get Start Tick*/
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1640              		.loc 1 1172 17
 1641 00ba FFF7FEFF 		bl	HAL_GetTick
 1642 00be F860     		str	r0, [r7, #12]
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     while(__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1643              		.loc 1 1174 10
 1644 00c0 0AE0     		b	.L106
 1645              	.L107:
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1646              		.loc 1 1176 11
 1647 00c2 FFF7FEFF 		bl	HAL_GetTick
 1648 00c6 0246     		mov	r2, r0
 1649              		.loc 1 1176 25
 1650 00c8 FB68     		ldr	r3, [r7, #12]
 1651 00ca D31A     		subs	r3, r2, r3
 1652              		.loc 1 1176 9
 1653 00cc 41F28832 		movw	r2, #5000
 1654 00d0 9342     		cmp	r3, r2
 1655 00d2 01D9     		bls	.L106
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1656              		.loc 1 1178 16
 1657 00d4 0323     		movs	r3, #3
 1658 00d6 66E0     		b	.L99
 1659              	.L106:
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1660              		.loc 1 1174 11
 1661 00d8 364B     		ldr	r3, .L112+4
 1662 00da 9B68     		ldr	r3, [r3, #8]
 1663 00dc 03F00C02 		and	r2, r3, #12
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1664              		.loc 1 1174 62
 1665 00e0 7B68     		ldr	r3, [r7, #4]
 1666 00e2 5B68     		ldr	r3, [r3, #4]
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1667              		.loc 1 1174 77
 1668 00e4 9B00     		lsls	r3, r3, #2
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1669              		.loc 1 1174 10
 1670 00e6 9A42     		cmp	r2, r3
 1671 00e8 EBD1     		bne	.L107
 1672              	.L101:
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1673              		.loc 1 1184 25
 1674 00ea 7B68     		ldr	r3, [r7, #4]
 1675 00ec 1B68     		ldr	r3, [r3]
 1676              		.loc 1 1184 38
 1677 00ee 03F00203 		and	r3, r3, #2
 1678              		.loc 1 1184 5
ARM GAS  /tmp/cct1HO6N.s 			page 52


 1679 00f2 002B     		cmp	r3, #0
 1680 00f4 08D0     		beq	.L108
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1681              		.loc 1 1187 5
 1682 00f6 2F4B     		ldr	r3, .L112+4
 1683 00f8 9B68     		ldr	r3, [r3, #8]
 1684 00fa 23F0F002 		bic	r2, r3, #240
 1685 00fe 7B68     		ldr	r3, [r7, #4]
 1686 0100 9B68     		ldr	r3, [r3, #8]
 1687 0102 2C49     		ldr	r1, .L112+4
 1688 0104 1343     		orrs	r3, r3, r2
 1689 0106 8B60     		str	r3, [r1, #8]
 1690              	.L108:
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Is intermediate HCLK prescaler 2 applied internally, complete with HCLK prescaler 1 */
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(hpre == RCC_SYSCLK_DIV2)
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV1);
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 1691              		.loc 1 1201 17
 1692 0108 294B     		ldr	r3, .L112
 1693 010a 1B68     		ldr	r3, [r3]
 1694 010c 03F00703 		and	r3, r3, #7
 1695              		.loc 1 1201 5
 1696 0110 3A68     		ldr	r2, [r7]
 1697 0112 9A42     		cmp	r2, r3
 1698 0114 10D2     		bcs	.L109
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1699              		.loc 1 1204 5
 1700 0116 264B     		ldr	r3, .L112
 1701 0118 1B68     		ldr	r3, [r3]
 1702 011a 23F00702 		bic	r2, r3, #7
 1703 011e 2449     		ldr	r1, .L112
 1704 0120 3B68     		ldr	r3, [r7]
 1705 0122 1343     		orrs	r3, r3, r2
 1706 0124 0B60     		str	r3, [r1]
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1707              		.loc 1 1208 8
 1708 0126 224B     		ldr	r3, .L112
 1709 0128 1B68     		ldr	r3, [r3]
 1710 012a 03F00703 		and	r3, r3, #7
 1711              		.loc 1 1208 7
ARM GAS  /tmp/cct1HO6N.s 			page 53


 1712 012e 3A68     		ldr	r2, [r7]
 1713 0130 9A42     		cmp	r2, r3
 1714 0132 01D0     		beq	.L109
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_ERROR;
 1715              		.loc 1 1210 14
 1716 0134 0123     		movs	r3, #1
 1717 0136 36E0     		b	.L99
 1718              	.L109:
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1719              		.loc 1 1215 25
 1720 0138 7B68     		ldr	r3, [r7, #4]
 1721 013a 1B68     		ldr	r3, [r3]
 1722              		.loc 1 1215 38
 1723 013c 03F00403 		and	r3, r3, #4
 1724              		.loc 1 1215 5
 1725 0140 002B     		cmp	r3, #0
 1726 0142 08D0     		beq	.L110
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1727              		.loc 1 1218 5
 1728 0144 1B4B     		ldr	r3, .L112+4
 1729 0146 9B68     		ldr	r3, [r3, #8]
 1730 0148 23F4E062 		bic	r2, r3, #1792
 1731 014c 7B68     		ldr	r3, [r7, #4]
 1732 014e DB68     		ldr	r3, [r3, #12]
 1733 0150 1849     		ldr	r1, .L112+4
 1734 0152 1343     		orrs	r3, r3, r2
 1735 0154 8B60     		str	r3, [r1, #8]
 1736              	.L110:
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1737              		.loc 1 1222 25
 1738 0156 7B68     		ldr	r3, [r7, #4]
 1739 0158 1B68     		ldr	r3, [r3]
 1740              		.loc 1 1222 38
 1741 015a 03F00803 		and	r3, r3, #8
 1742              		.loc 1 1222 5
 1743 015e 002B     		cmp	r3, #0
 1744 0160 09D0     		beq	.L111
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1745              		.loc 1 1225 5
 1746 0162 144B     		ldr	r3, .L112+4
 1747 0164 9B68     		ldr	r3, [r3, #8]
 1748 0166 23F46052 		bic	r2, r3, #14336
 1749 016a 7B68     		ldr	r3, [r7, #4]
 1750 016c 1B69     		ldr	r3, [r3, #16]
 1751 016e DB00     		lsls	r3, r3, #3
ARM GAS  /tmp/cct1HO6N.s 			page 54


 1752 0170 1049     		ldr	r1, .L112+4
 1753 0172 1343     		orrs	r3, r3, r2
 1754 0174 8B60     		str	r3, [r1, #8]
 1755              	.L111:
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) 
 1756              		.loc 1 1229 21
 1757 0176 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1758 017a 0146     		mov	r1, r0
 1759              		.loc 1 1229 65
 1760 017c 0D4B     		ldr	r3, .L112+4
 1761 017e 9B68     		ldr	r3, [r3, #8]
 1762              		.loc 1 1229 100
 1763 0180 1B09     		lsrs	r3, r3, #4
 1764 0182 03F00F03 		and	r3, r3, #15
 1765              		.loc 1 1229 64
 1766 0186 0C4A     		ldr	r2, .L112+8
 1767 0188 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1768              		.loc 1 1229 122
 1769 018a 03F01F03 		and	r3, r3, #31
 1770              		.loc 1 1229 47
 1771 018e 21FA03F3 		lsr	r3, r1, r3
 1772              		.loc 1 1229 19
 1773 0192 0A4A     		ldr	r2, .L112+12
 1774 0194 1360     		str	r3, [r2]
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   status = HAL_InitTick(uwTickPrio);
 1775              		.loc 1 1232 12
 1776 0196 0A4B     		ldr	r3, .L112+16
 1777 0198 1B68     		ldr	r3, [r3]
 1778 019a 1846     		mov	r0, r3
 1779 019c FFF7FEFF 		bl	HAL_InitTick
 1780 01a0 0346     		mov	r3, r0
 1781 01a2 FB72     		strb	r3, [r7, #11]
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return status;
 1782              		.loc 1 1234 10
 1783 01a4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1784              	.L99:
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 1785              		.loc 1 1235 1
 1786 01a6 1846     		mov	r0, r3
 1787 01a8 1037     		adds	r7, r7, #16
 1788              	.LCFI13:
 1789              		.cfi_def_cfa_offset 8
 1790 01aa BD46     		mov	sp, r7
 1791              	.LCFI14:
 1792              		.cfi_def_cfa_register 13
 1793              		@ sp needed
 1794 01ac 80BD     		pop	{r7, pc}
 1795              	.L113:
 1796 01ae 00BF     		.align	2
 1797              	.L112:
 1798 01b0 00200240 		.word	1073881088
ARM GAS  /tmp/cct1HO6N.s 			page 55


 1799 01b4 00100240 		.word	1073876992
 1800 01b8 00000000 		.word	AHBPrescTable
 1801 01bc 00000000 		.word	SystemCoreClock
 1802 01c0 00000000 		.word	uwTickPrio
 1803              		.cfi_endproc
 1804              	.LFE132:
 1806              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1807              		.align	1
 1808              		.global	HAL_RCC_MCOConfig
 1809              		.syntax unified
 1810              		.thumb
 1811              		.thumb_func
 1812              		.fpu fpv4-sp-d16
 1814              	HAL_RCC_MCOConfig:
 1815              	.LFB133:
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  *
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** @verbatim
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..]
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to:
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     (+) Ouput clock to MCO pin.
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     (+) Retrieve current clock frequencies.
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     (+) Enable the Clock Security System.
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** @endverbatim
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Select the clock source to output on MCO pin(PA8).
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   PA8 should be configured in alternate function mode.
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_MCOx  specifies the output direction for the clock source.
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          For STM32L4xx family this parameter can have only one value:
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1  Clock source to output on MCO1 pin(PA8).
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_MCOSource  specifies the clock source to output.
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK  MCO output disabled, no clock on MCO
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK  system  clock selected as MCO source
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_MSI  MSI clock selected as MCO source
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI  HSI clock selected as MCO source
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE  HSE clock selected as MCO sourcee
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK  main PLL clock selected as MCO source
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI  LSI clock selected as MCO source
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE  LSE clock selected as MCO source
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @if STM32L443xx
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48  HSI48 clock selected as MCO source for devices with 
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @endif
ARM GAS  /tmp/cct1HO6N.s 			page 56


1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_MCODiv  specifies the MCO prescaler.
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1  no division applied to MCO clock
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2  division by 2 applied to MCO clock
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4  division by 4 applied to MCO clock
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8  division by 8 applied to MCO clock
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_MCOConfig( uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 1816              		.loc 1 1288 1
 1817              		.cfi_startproc
 1818              		@ args = 0, pretend = 0, frame = 40
 1819              		@ frame_needed = 1, uses_anonymous_args = 0
 1820 0000 80B5     		push	{r7, lr}
 1821              	.LCFI15:
 1822              		.cfi_def_cfa_offset 8
 1823              		.cfi_offset 7, -8
 1824              		.cfi_offset 14, -4
 1825 0002 8AB0     		sub	sp, sp, #40
 1826              	.LCFI16:
 1827              		.cfi_def_cfa_offset 48
 1828 0004 00AF     		add	r7, sp, #0
 1829              	.LCFI17:
 1830              		.cfi_def_cfa_register 7
 1831 0006 F860     		str	r0, [r7, #12]
 1832 0008 B960     		str	r1, [r7, #8]
 1833 000a 7A60     		str	r2, [r7, #4]
 1834              	.LBB4:
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   UNUSED(RCC_MCOx);
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* MCO Clock Enable */
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   __MCO1_CLK_ENABLE();
 1835              		.loc 1 1300 3
 1836 000c 154B     		ldr	r3, .L115
 1837 000e DB6C     		ldr	r3, [r3, #76]
 1838 0010 144A     		ldr	r2, .L115
 1839 0012 43F00103 		orr	r3, r3, #1
 1840 0016 D364     		str	r3, [r2, #76]
 1841 0018 124B     		ldr	r3, .L115
 1842 001a DB6C     		ldr	r3, [r3, #76]
 1843 001c 03F00103 		and	r3, r3, #1
 1844 0020 3B61     		str	r3, [r7, #16]
 1845 0022 3B69     		ldr	r3, [r7, #16]
 1846              	.LBE4:
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Configue the MCO1 pin in alternate function mode */
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Pin = MCO1_PIN;
ARM GAS  /tmp/cct1HO6N.s 			page 57


 1847              		.loc 1 1303 23
 1848 0024 4FF48073 		mov	r3, #256
 1849 0028 7B61     		str	r3, [r7, #20]
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1850              		.loc 1 1304 24
 1851 002a 0223     		movs	r3, #2
 1852 002c BB61     		str	r3, [r7, #24]
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 1853              		.loc 1 1305 25
 1854 002e 0223     		movs	r3, #2
 1855 0030 3B62     		str	r3, [r7, #32]
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1856              		.loc 1 1306 24
 1857 0032 0023     		movs	r3, #0
 1858 0034 FB61     		str	r3, [r7, #28]
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1859              		.loc 1 1307 29
 1860 0036 0023     		movs	r3, #0
 1861 0038 7B62     		str	r3, [r7, #36]
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1862              		.loc 1 1308 3
 1863 003a 07F11403 		add	r3, r7, #20
 1864 003e 1946     		mov	r1, r3
 1865 0040 4FF09040 		mov	r0, #1207959552
 1866 0044 FFF7FEFF 		bl	HAL_GPIO_Init
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Mask MCOSEL[] and MCOPRE[] bits then set MCO1 clock source and prescaler */
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCOSEL | RCC_CFGR_MCOPRE), (RCC_MCOSource | RCC_MCODiv ));
 1867              		.loc 1 1311 3
 1868 0048 064B     		ldr	r3, .L115
 1869 004a 9B68     		ldr	r3, [r3, #8]
 1870 004c 23F0FE42 		bic	r2, r3, #2130706432
 1871 0050 B968     		ldr	r1, [r7, #8]
 1872 0052 7B68     		ldr	r3, [r7, #4]
 1873 0054 0B43     		orrs	r3, r3, r1
 1874 0056 0349     		ldr	r1, .L115
 1875 0058 1343     		orrs	r3, r3, r2
 1876 005a 8B60     		str	r3, [r1, #8]
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 1877              		.loc 1 1312 1
 1878 005c 00BF     		nop
 1879 005e 2837     		adds	r7, r7, #40
 1880              	.LCFI18:
 1881              		.cfi_def_cfa_offset 8
 1882 0060 BD46     		mov	sp, r7
 1883              	.LCFI19:
 1884              		.cfi_def_cfa_register 13
 1885              		@ sp needed
 1886 0062 80BD     		pop	{r7, pc}
 1887              	.L116:
 1888              		.align	2
 1889              	.L115:
 1890 0064 00100240 		.word	1073876992
 1891              		.cfi_endproc
 1892              	.LFE133:
 1894              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1895              		.align	1
ARM GAS  /tmp/cct1HO6N.s 			page 58


 1896              		.global	HAL_RCC_GetSysClockFreq
 1897              		.syntax unified
 1898              		.thumb
 1899              		.thumb_func
 1900              		.fpu fpv4-sp-d16
 1902              	HAL_RCC_GetSysClockFreq:
 1903              	.LFB134:
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the SYSCLK frequency.
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         constant and the selected clock source:
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is MSI, function returns values based on MSI
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *             Value as defined by the MSI range.
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**),
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *           HSI_VALUE(*) or MSI Value multiplied/divided by the PLL factors.
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32l4xx_hal_conf.h file (default value
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *               in voltage and temperature.
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32l4xx_hal_conf.h file (default value
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *                have wrong result.
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         value for HSE crystal.
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval SYSCLK frequency
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 1904              		.loc 1 1347 1
 1905              		.cfi_startproc
 1906              		@ args = 0, pretend = 0, frame = 32
 1907              		@ frame_needed = 1, uses_anonymous_args = 0
 1908              		@ link register save eliminated.
 1909 0000 80B4     		push	{r7}
 1910              	.LCFI20:
 1911              		.cfi_def_cfa_offset 4
 1912              		.cfi_offset 7, -4
 1913 0002 89B0     		sub	sp, sp, #36
 1914              	.LCFI21:
 1915              		.cfi_def_cfa_offset 40
 1916 0004 00AF     		add	r7, sp, #0
 1917              	.LCFI22:
 1918              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cct1HO6N.s 			page 59


1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t msirange = 0U, sysclockfreq = 0U;
 1919              		.loc 1 1348 12
 1920 0006 0023     		movs	r3, #0
 1921 0008 FB61     		str	r3, [r7, #28]
 1922              		.loc 1 1348 27
 1923 000a 0023     		movs	r3, #0
 1924 000c BB61     		str	r3, [r7, #24]
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t pllvco, pllsource, pllr, pllm;    /* no init needed */
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t sysclk_source, pll_oscsource;
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 1925              		.loc 1 1352 19
 1926 000e 3E4B     		ldr	r3, .L132
 1927 0010 9B68     		ldr	r3, [r3, #8]
 1928              		.loc 1 1352 17
 1929 0012 03F00C03 		and	r3, r3, #12
 1930 0016 3B61     		str	r3, [r7, #16]
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 1931              		.loc 1 1353 19
 1932 0018 3B4B     		ldr	r3, .L132
 1933 001a DB68     		ldr	r3, [r3, #12]
 1934              		.loc 1 1353 17
 1935 001c 03F00303 		and	r3, r3, #3
 1936 0020 FB60     		str	r3, [r7, #12]
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 1937              		.loc 1 1355 5
 1938 0022 3B69     		ldr	r3, [r7, #16]
 1939 0024 002B     		cmp	r3, #0
 1940 0026 05D0     		beq	.L118
 1941              		.loc 1 1355 42 discriminator 1
 1942 0028 3B69     		ldr	r3, [r7, #16]
 1943 002a 0C2B     		cmp	r3, #12
 1944 002c 21D1     		bne	.L119
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****      ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 1945              		.loc 1 1356 43
 1946 002e FB68     		ldr	r3, [r7, #12]
 1947 0030 012B     		cmp	r3, #1
 1948 0032 1ED1     		bne	.L119
 1949              	.L118:
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* MSI or PLL with MSI source used as system clock source */
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Get SYSCLK source */
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
 1950              		.loc 1 1361 8
 1951 0034 344B     		ldr	r3, .L132
 1952 0036 1B68     		ldr	r3, [r3]
 1953 0038 03F00803 		and	r3, r3, #8
 1954              		.loc 1 1361 7
 1955 003c 002B     		cmp	r3, #0
 1956 003e 07D1     		bne	.L120
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     { /* MSISRANGE from RCC_CSR applies */
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 1957              		.loc 1 1363 18
 1958 0040 314B     		ldr	r3, .L132
 1959 0042 D3F89430 		ldr	r3, [r3, #148]
ARM GAS  /tmp/cct1HO6N.s 			page 60


 1960              		.loc 1 1363 56
 1961 0046 1B0A     		lsrs	r3, r3, #8
 1962              		.loc 1 1363 16
 1963 0048 03F00F03 		and	r3, r3, #15
 1964 004c FB61     		str	r3, [r7, #28]
 1965 004e 05E0     		b	.L121
 1966              	.L120:
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     { /* MSIRANGE from RCC_CR applies */
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 1967              		.loc 1 1367 18
 1968 0050 2D4B     		ldr	r3, .L132
 1969 0052 1B68     		ldr	r3, [r3]
 1970              		.loc 1 1367 53
 1971 0054 1B09     		lsrs	r3, r3, #4
 1972              		.loc 1 1367 16
 1973 0056 03F00F03 		and	r3, r3, #15
 1974 005a FB61     		str	r3, [r7, #28]
 1975              	.L121:
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /*MSI frequency range in HZ*/
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     msirange = MSIRangeTable[msirange];
 1976              		.loc 1 1370 14
 1977 005c 2B4A     		ldr	r2, .L132+4
 1978 005e FB69     		ldr	r3, [r7, #28]
 1979 0060 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1980 0064 FB61     		str	r3, [r7, #28]
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(sysclk_source == RCC_CFGR_SWS_MSI)
 1981              		.loc 1 1372 7
 1982 0066 3B69     		ldr	r3, [r7, #16]
 1983 0068 002B     		cmp	r3, #0
 1984 006a 0DD1     		bne	.L123
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI used as system clock source */
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       sysclockfreq = msirange;
 1985              		.loc 1 1375 20
 1986 006c FB69     		ldr	r3, [r7, #28]
 1987 006e BB61     		str	r3, [r7, #24]
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1988              		.loc 1 1372 7
 1989 0070 0AE0     		b	.L123
 1990              	.L119:
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else if(sysclk_source == RCC_CFGR_SWS_HSI)
 1991              		.loc 1 1378 10
 1992 0072 3B69     		ldr	r3, [r7, #16]
 1993 0074 042B     		cmp	r3, #4
 1994 0076 02D1     		bne	.L124
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* HSI used as system clock source */
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = HSI_VALUE;
 1995              		.loc 1 1381 18
 1996 0078 254B     		ldr	r3, .L132+8
 1997 007a BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/cct1HO6N.s 			page 61


 1998 007c 04E0     		b	.L123
 1999              	.L124:
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else if(sysclk_source == RCC_CFGR_SWS_HSE)
 2000              		.loc 1 1383 10
 2001 007e 3B69     		ldr	r3, [r7, #16]
 2002 0080 082B     		cmp	r3, #8
 2003 0082 01D1     		bne	.L123
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* HSE used as system clock source */
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = HSE_VALUE;
 2004              		.loc 1 1386 18
 2005 0084 234B     		ldr	r3, .L132+12
 2006 0086 BB61     		str	r3, [r7, #24]
 2007              	.L123:
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* unexpected case: sysclockfreq at 0 */
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(sysclk_source == RCC_CFGR_SWS_PLL)
 2008              		.loc 1 1393 5
 2009 0088 3B69     		ldr	r3, [r7, #16]
 2010 008a 0C2B     		cmp	r3, #12
 2011 008c 34D1     		bne	.L125
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* PLL used as system clock  source */
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE) * PLLN / PLLM
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     SYSCLK = PLL_VCO / PLLR
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     */
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 2012              		.loc 1 1400 17
 2013 008e 1E4B     		ldr	r3, .L132
 2014 0090 DB68     		ldr	r3, [r3, #12]
 2015              		.loc 1 1400 15
 2016 0092 03F00303 		and	r3, r3, #3
 2017 0096 BB60     		str	r3, [r7, #8]
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     switch (pllsource)
 2018              		.loc 1 1402 5
 2019 0098 BB68     		ldr	r3, [r7, #8]
 2020 009a 022B     		cmp	r3, #2
 2021 009c 03D0     		beq	.L126
 2022 009e BB68     		ldr	r3, [r7, #8]
 2023 00a0 032B     		cmp	r3, #3
 2024 00a2 03D0     		beq	.L127
 2025 00a4 05E0     		b	.L131
 2026              	.L126:
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pllvco = HSI_VALUE;
 2027              		.loc 1 1405 14
 2028 00a6 1A4B     		ldr	r3, .L132+8
 2029 00a8 7B61     		str	r3, [r7, #20]
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       break;
ARM GAS  /tmp/cct1HO6N.s 			page 62


 2030              		.loc 1 1406 7
 2031 00aa 05E0     		b	.L129
 2032              	.L127:
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pllvco = HSE_VALUE;
 2033              		.loc 1 1409 14
 2034 00ac 194B     		ldr	r3, .L132+12
 2035 00ae 7B61     		str	r3, [r7, #20]
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       break;
 2036              		.loc 1 1410 7
 2037 00b0 02E0     		b	.L129
 2038              	.L131:
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     case RCC_PLLSOURCE_MSI:  /* MSI used as PLL clock source */
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     default:
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pllvco = msirange;
 2039              		.loc 1 1414 14
 2040 00b2 FB69     		ldr	r3, [r7, #28]
 2041 00b4 7B61     		str	r3, [r7, #20]
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       break;
 2042              		.loc 1 1415 7
 2043 00b6 00BF     		nop
 2044              	.L129:
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 2045              		.loc 1 1417 13
 2046 00b8 134B     		ldr	r3, .L132
 2047 00ba DB68     		ldr	r3, [r3, #12]
 2048              		.loc 1 1417 54
 2049 00bc 1B09     		lsrs	r3, r3, #4
 2050 00be 03F00703 		and	r3, r3, #7
 2051              		.loc 1 1417 10
 2052 00c2 0133     		adds	r3, r3, #1
 2053 00c4 7B60     		str	r3, [r7, #4]
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     pllvco = (pllvco * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)) / pllm;
 2054              		.loc 1 1418 25
 2055 00c6 104B     		ldr	r3, .L132
 2056 00c8 DB68     		ldr	r3, [r3, #12]
 2057              		.loc 1 1418 66
 2058 00ca 1B0A     		lsrs	r3, r3, #8
 2059 00cc 03F07F03 		and	r3, r3, #127
 2060              		.loc 1 1418 22
 2061 00d0 7A69     		ldr	r2, [r7, #20]
 2062 00d2 02FB03F2 		mul	r2, r2, r3
 2063              		.loc 1 1418 12
 2064 00d6 7B68     		ldr	r3, [r7, #4]
 2065 00d8 B2FBF3F3 		udiv	r3, r2, r3
 2066 00dc 7B61     		str	r3, [r7, #20]
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 2067              		.loc 1 1419 14
 2068 00de 0A4B     		ldr	r3, .L132
 2069 00e0 DB68     		ldr	r3, [r3, #12]
 2070              		.loc 1 1419 55
 2071 00e2 5B0E     		lsrs	r3, r3, #25
 2072 00e4 03F00303 		and	r3, r3, #3
 2073              		.loc 1 1419 87
ARM GAS  /tmp/cct1HO6N.s 			page 63


 2074 00e8 0133     		adds	r3, r3, #1
 2075              		.loc 1 1419 10
 2076 00ea 5B00     		lsls	r3, r3, #1
 2077 00ec 3B60     		str	r3, [r7]
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = pllvco / pllr;
 2078              		.loc 1 1420 18
 2079 00ee 7A69     		ldr	r2, [r7, #20]
 2080 00f0 3B68     		ldr	r3, [r7]
 2081 00f2 B2FBF3F3 		udiv	r3, r2, r3
 2082 00f6 BB61     		str	r3, [r7, #24]
 2083              	.L125:
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return sysclockfreq;
 2084              		.loc 1 1423 10
 2085 00f8 BB69     		ldr	r3, [r7, #24]
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2086              		.loc 1 1424 1
 2087 00fa 1846     		mov	r0, r3
 2088 00fc 2437     		adds	r7, r7, #36
 2089              	.LCFI23:
 2090              		.cfi_def_cfa_offset 4
 2091 00fe BD46     		mov	sp, r7
 2092              	.LCFI24:
 2093              		.cfi_def_cfa_register 13
 2094              		@ sp needed
 2095 0100 5DF8047B 		ldr	r7, [sp], #4
 2096              	.LCFI25:
 2097              		.cfi_restore 7
 2098              		.cfi_def_cfa_offset 0
 2099 0104 7047     		bx	lr
 2100              	.L133:
 2101 0106 00BF     		.align	2
 2102              	.L132:
 2103 0108 00100240 		.word	1073876992
 2104 010c 00000000 		.word	MSIRangeTable
 2105 0110 0024F400 		.word	16000000
 2106 0114 00127A00 		.word	8000000
 2107              		.cfi_endproc
 2108              	.LFE134:
 2110              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2111              		.align	1
 2112              		.global	HAL_RCC_GetHCLKFreq
 2113              		.syntax unified
 2114              		.thumb
 2115              		.thumb_func
 2116              		.fpu fpv4-sp-d16
 2118              	HAL_RCC_GetHCLKFreq:
 2119              	.LFB135:
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the HCLK frequency.
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval HCLK frequency in Hz
ARM GAS  /tmp/cct1HO6N.s 			page 64


1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2120              		.loc 1 1435 1
 2121              		.cfi_startproc
 2122              		@ args = 0, pretend = 0, frame = 0
 2123              		@ frame_needed = 1, uses_anonymous_args = 0
 2124              		@ link register save eliminated.
 2125 0000 80B4     		push	{r7}
 2126              	.LCFI26:
 2127              		.cfi_def_cfa_offset 4
 2128              		.cfi_offset 7, -4
 2129 0002 00AF     		add	r7, sp, #0
 2130              	.LCFI27:
 2131              		.cfi_def_cfa_register 7
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return SystemCoreClock;
 2132              		.loc 1 1436 10
 2133 0004 034B     		ldr	r3, .L136
 2134 0006 1B68     		ldr	r3, [r3]
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2135              		.loc 1 1437 1
 2136 0008 1846     		mov	r0, r3
 2137 000a BD46     		mov	sp, r7
 2138              	.LCFI28:
 2139              		.cfi_def_cfa_register 13
 2140              		@ sp needed
 2141 000c 5DF8047B 		ldr	r7, [sp], #4
 2142              	.LCFI29:
 2143              		.cfi_restore 7
 2144              		.cfi_def_cfa_offset 0
 2145 0010 7047     		bx	lr
 2146              	.L137:
 2147 0012 00BF     		.align	2
 2148              	.L136:
 2149 0014 00000000 		.word	SystemCoreClock
 2150              		.cfi_endproc
 2151              	.LFE135:
 2153              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2154              		.align	1
 2155              		.global	HAL_RCC_GetPCLK1Freq
 2156              		.syntax unified
 2157              		.thumb
 2158              		.thumb_func
 2159              		.fpu fpv4-sp-d16
 2161              	HAL_RCC_GetPCLK1Freq:
 2162              	.LFB136:
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the PCLK1 frequency.
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval PCLK1 frequency in Hz
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2163              		.loc 1 1446 1
 2164              		.cfi_startproc
ARM GAS  /tmp/cct1HO6N.s 			page 65


 2165              		@ args = 0, pretend = 0, frame = 0
 2166              		@ frame_needed = 1, uses_anonymous_args = 0
 2167 0000 80B5     		push	{r7, lr}
 2168              	.LCFI30:
 2169              		.cfi_def_cfa_offset 8
 2170              		.cfi_offset 7, -8
 2171              		.cfi_offset 14, -4
 2172 0002 00AF     		add	r7, sp, #0
 2173              	.LCFI31:
 2174              		.cfi_def_cfa_register 7
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1) >> RCC_CFGR_P
 2175              		.loc 1 1448 11
 2176 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2177 0008 0146     		mov	r1, r0
 2178              		.loc 1 1448 51
 2179 000a 064B     		ldr	r3, .L140
 2180 000c 9B68     		ldr	r3, [r3, #8]
 2181              		.loc 1 1448 87
 2182 000e 1B0A     		lsrs	r3, r3, #8
 2183 0010 03F00703 		and	r3, r3, #7
 2184              		.loc 1 1448 50
 2185 0014 044A     		ldr	r2, .L140+4
 2186 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2187              		.loc 1 1448 110
 2188 0018 03F01F03 		and	r3, r3, #31
 2189              		.loc 1 1448 33
 2190 001c 21FA03F3 		lsr	r3, r1, r3
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2191              		.loc 1 1449 1
 2192 0020 1846     		mov	r0, r3
 2193 0022 80BD     		pop	{r7, pc}
 2194              	.L141:
 2195              		.align	2
 2196              	.L140:
 2197 0024 00100240 		.word	1073876992
 2198 0028 00000000 		.word	APBPrescTable
 2199              		.cfi_endproc
 2200              	.LFE136:
 2202              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2203              		.align	1
 2204              		.global	HAL_RCC_GetPCLK2Freq
 2205              		.syntax unified
 2206              		.thumb
 2207              		.thumb_func
 2208              		.fpu fpv4-sp-d16
 2210              	HAL_RCC_GetPCLK2Freq:
 2211              	.LFB137:
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the PCLK2 frequency.
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval PCLK2 frequency in Hz
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
ARM GAS  /tmp/cct1HO6N.s 			page 66


 2212              		.loc 1 1458 1
 2213              		.cfi_startproc
 2214              		@ args = 0, pretend = 0, frame = 0
 2215              		@ frame_needed = 1, uses_anonymous_args = 0
 2216 0000 80B5     		push	{r7, lr}
 2217              	.LCFI32:
 2218              		.cfi_def_cfa_offset 8
 2219              		.cfi_offset 7, -8
 2220              		.cfi_offset 14, -4
 2221 0002 00AF     		add	r7, sp, #0
 2222              	.LCFI33:
 2223              		.cfi_def_cfa_register 7
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> RCC_CFGR_PP
 2224              		.loc 1 1460 11
 2225 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2226 0008 0146     		mov	r1, r0
 2227              		.loc 1 1460 50
 2228 000a 064B     		ldr	r3, .L144
 2229 000c 9B68     		ldr	r3, [r3, #8]
 2230              		.loc 1 1460 86
 2231 000e DB0A     		lsrs	r3, r3, #11
 2232 0010 03F00703 		and	r3, r3, #7
 2233              		.loc 1 1460 49
 2234 0014 044A     		ldr	r2, .L144+4
 2235 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2236              		.loc 1 1460 109
 2237 0018 03F01F03 		and	r3, r3, #31
 2238              		.loc 1 1460 32
 2239 001c 21FA03F3 		lsr	r3, r1, r3
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2240              		.loc 1 1461 1
 2241 0020 1846     		mov	r0, r3
 2242 0022 80BD     		pop	{r7, pc}
 2243              	.L145:
 2244              		.align	2
 2245              	.L144:
 2246 0024 00100240 		.word	1073876992
 2247 0028 00000000 		.word	APBPrescTable
 2248              		.cfi_endproc
 2249              	.LFE137:
 2251              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2252              		.align	1
 2253              		.global	HAL_RCC_GetOscConfig
 2254              		.syntax unified
 2255              		.thumb
 2256              		.thumb_func
 2257              		.fpu fpv4-sp-d16
 2259              	HAL_RCC_GetOscConfig:
 2260              	.LFB138:
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Configure the RCC_OscInitStruct according to the internal
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         RCC configuration registers.
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct  pointer to an RCC_OscInitTypeDef structure that
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         will be configured.
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
ARM GAS  /tmp/cct1HO6N.s 			page 67


1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2261              		.loc 1 1471 1
 2262              		.cfi_startproc
 2263              		@ args = 0, pretend = 0, frame = 8
 2264              		@ frame_needed = 1, uses_anonymous_args = 0
 2265              		@ link register save eliminated.
 2266 0000 80B4     		push	{r7}
 2267              	.LCFI34:
 2268              		.cfi_def_cfa_offset 4
 2269              		.cfi_offset 7, -4
 2270 0002 83B0     		sub	sp, sp, #12
 2271              	.LCFI35:
 2272              		.cfi_def_cfa_offset 16
 2273 0004 00AF     		add	r7, sp, #0
 2274              	.LCFI36:
 2275              		.cfi_def_cfa_register 7
 2276 0006 7860     		str	r0, [r7, #4]
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != (void *)NULL);
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 2277              		.loc 1 1477 37
 2278 0008 7B68     		ldr	r3, [r7, #4]
 2279 000a 3F22     		movs	r2, #63
 2280 000c 1A60     		str	r2, [r3]
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLA
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2281              		.loc 1 1485 6
 2282 000e 604B     		ldr	r3, .L163
 2283 0010 1B68     		ldr	r3, [r3]
 2284 0012 03F48023 		and	r3, r3, #262144
 2285              		.loc 1 1485 5
 2286 0016 B3F5802F 		cmp	r3, #262144
 2287 001a 04D1     		bne	.L147
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2288              		.loc 1 1487 33
 2289 001c 7B68     		ldr	r3, [r7, #4]
 2290 001e 4FF4A022 		mov	r2, #327680
 2291 0022 5A60     		str	r2, [r3, #4]
 2292 0024 0EE0     		b	.L148
 2293              	.L147:
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else if(READ_BIT(RCC->CR, RCC_CR_HSEON) == RCC_CR_HSEON)
 2294              		.loc 1 1489 11
 2295 0026 5A4B     		ldr	r3, .L163
 2296 0028 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cct1HO6N.s 			page 68


 2297 002a 03F48033 		and	r3, r3, #65536
 2298              		.loc 1 1489 10
 2299 002e B3F5803F 		cmp	r3, #65536
 2300 0032 04D1     		bne	.L149
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2301              		.loc 1 1491 33
 2302 0034 7B68     		ldr	r3, [r7, #4]
 2303 0036 4FF48032 		mov	r2, #65536
 2304 003a 5A60     		str	r2, [r3, #4]
 2305 003c 02E0     		b	.L148
 2306              	.L149:
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2307              		.loc 1 1495 33
 2308 003e 7B68     		ldr	r3, [r7, #4]
 2309 0040 0022     		movs	r2, #0
 2310 0042 5A60     		str	r2, [r3, #4]
 2311              	.L148:
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****    /* Get the MSI configuration -----------------------------------------------*/
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_MSION) == RCC_CR_MSION)
 2312              		.loc 1 1499 6
 2313 0044 524B     		ldr	r3, .L163
 2314 0046 1B68     		ldr	r3, [r3]
 2315 0048 03F00103 		and	r3, r3, #1
 2316              		.loc 1 1499 5
 2317 004c 012B     		cmp	r3, #1
 2318 004e 03D1     		bne	.L150
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->MSIState = RCC_MSI_ON;
 2319              		.loc 1 1501 33
 2320 0050 7B68     		ldr	r3, [r7, #4]
 2321 0052 0122     		movs	r2, #1
 2322 0054 9A61     		str	r2, [r3, #24]
 2323 0056 02E0     		b	.L151
 2324              	.L150:
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->MSIState = RCC_MSI_OFF;
 2325              		.loc 1 1505 33
 2326 0058 7B68     		ldr	r3, [r7, #4]
 2327 005a 0022     		movs	r2, #0
 2328 005c 9A61     		str	r2, [r3, #24]
 2329              	.L151:
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->MSICalibrationValue = READ_BIT(RCC->ICSCR, RCC_ICSCR_MSITRIM) >> RCC_ICSCR_MSI
 2330              		.loc 1 1508 44
 2331 005e 4C4B     		ldr	r3, .L163
 2332 0060 5B68     		ldr	r3, [r3, #4]
 2333              		.loc 1 1508 84
 2334 0062 1B0A     		lsrs	r3, r3, #8
ARM GAS  /tmp/cct1HO6N.s 			page 69


 2335 0064 DAB2     		uxtb	r2, r3
 2336              		.loc 1 1508 42
 2337 0066 7B68     		ldr	r3, [r7, #4]
 2338 0068 DA61     		str	r2, [r3, #28]
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->MSIClockRange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE);
 2339              		.loc 1 1509 38
 2340 006a 494B     		ldr	r3, .L163
 2341 006c 1B68     		ldr	r3, [r3]
 2342 006e 03F0F002 		and	r2, r3, #240
 2343              		.loc 1 1509 36
 2344 0072 7B68     		ldr	r3, [r7, #4]
 2345 0074 1A62     		str	r2, [r3, #32]
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_HSION) == RCC_CR_HSION)
 2346              		.loc 1 1512 6
 2347 0076 464B     		ldr	r3, .L163
 2348 0078 1B68     		ldr	r3, [r3]
 2349 007a 03F48073 		and	r3, r3, #256
 2350              		.loc 1 1512 5
 2351 007e B3F5807F 		cmp	r3, #256
 2352 0082 04D1     		bne	.L152
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2353              		.loc 1 1514 33
 2354 0084 7B68     		ldr	r3, [r7, #4]
 2355 0086 4FF48072 		mov	r2, #256
 2356 008a DA60     		str	r2, [r3, #12]
 2357 008c 02E0     		b	.L153
 2358              	.L152:
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2359              		.loc 1 1518 33
 2360 008e 7B68     		ldr	r3, [r7, #4]
 2361 0090 0022     		movs	r2, #0
 2362 0092 DA60     		str	r2, [r3, #12]
 2363              	.L153:
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = READ_BIT(RCC->ICSCR, RCC_ICSCR_HSITRIM) >> RCC_ICSCR_HSI
 2364              		.loc 1 1521 44
 2365 0094 3E4B     		ldr	r3, .L163
 2366 0096 5B68     		ldr	r3, [r3, #4]
 2367              		.loc 1 1521 84
 2368 0098 1B0E     		lsrs	r3, r3, #24
 2369 009a 03F07F02 		and	r2, r3, #127
 2370              		.loc 1 1521 42
 2371 009e 7B68     		ldr	r3, [r7, #4]
 2372 00a0 1A61     		str	r2, [r3, #16]
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->BDCR, RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2373              		.loc 1 1524 6
 2374 00a2 3B4B     		ldr	r3, .L163
 2375 00a4 D3F89030 		ldr	r3, [r3, #144]
ARM GAS  /tmp/cct1HO6N.s 			page 70


 2376 00a8 03F00403 		and	r3, r3, #4
 2377              		.loc 1 1524 5
 2378 00ac 042B     		cmp	r3, #4
 2379 00ae 03D1     		bne	.L154
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_BDCR_LSESYSDIS)
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((RCC->BDCR & RCC_BDCR_LSESYSDIS) == RCC_BDCR_LSESYSDIS)
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS_RTC_ONLY;
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2380              		.loc 1 1534 35
 2381 00b0 7B68     		ldr	r3, [r7, #4]
 2382 00b2 0522     		movs	r2, #5
 2383 00b4 9A60     		str	r2, [r3, #8]
 2384 00b6 0DE0     		b	.L155
 2385              	.L154:
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else if(READ_BIT(RCC->BDCR, RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2386              		.loc 1 1537 11
 2387 00b8 354B     		ldr	r3, .L163
 2388 00ba D3F89030 		ldr	r3, [r3, #144]
 2389 00be 03F00103 		and	r3, r3, #1
 2390              		.loc 1 1537 10
 2391 00c2 012B     		cmp	r3, #1
 2392 00c4 03D1     		bne	.L156
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_BDCR_LSESYSDIS)
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((RCC->BDCR & RCC_BDCR_LSESYSDIS) == RCC_BDCR_LSESYSDIS)
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       RCC_OscInitStruct->LSEState = RCC_LSE_ON_RTC_ONLY;
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2393              		.loc 1 1547 35
 2394 00c6 7B68     		ldr	r3, [r7, #4]
 2395 00c8 0122     		movs	r2, #1
 2396 00ca 9A60     		str	r2, [r3, #8]
 2397 00cc 02E0     		b	.L155
 2398              	.L156:
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2399              		.loc 1 1552 33
 2400 00ce 7B68     		ldr	r3, [r7, #4]
 2401 00d0 0022     		movs	r2, #0
 2402 00d2 9A60     		str	r2, [r3, #8]
 2403              	.L155:
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
ARM GAS  /tmp/cct1HO6N.s 			page 71


1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CSR, RCC_CSR_LSION) == RCC_CSR_LSION)
 2404              		.loc 1 1556 6
 2405 00d4 2E4B     		ldr	r3, .L163
 2406 00d6 D3F89430 		ldr	r3, [r3, #148]
 2407 00da 03F00103 		and	r3, r3, #1
 2408              		.loc 1 1556 5
 2409 00de 012B     		cmp	r3, #1
 2410 00e0 03D1     		bne	.L157
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2411              		.loc 1 1558 33
 2412 00e2 7B68     		ldr	r3, [r7, #4]
 2413 00e4 0122     		movs	r2, #1
 2414 00e6 5A61     		str	r2, [r3, #20]
 2415 00e8 02E0     		b	.L158
 2416              	.L157:
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2417              		.loc 1 1562 33
 2418 00ea 7B68     		ldr	r3, [r7, #4]
 2419 00ec 0022     		movs	r2, #0
 2420 00ee 5A61     		str	r2, [r3, #20]
 2421              	.L158:
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_CSR_LSIPREDIV)
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if((RCC->CSR & RCC_CSR_LSIPREDIV) == RCC_CSR_LSIPREDIV)
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIDiv = RCC_LSI_DIV128;
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIDiv = RCC_LSI_DIV1;
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_CSR_LSIPREDIV */
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the HSI48 configuration ---------------------------------------------*/
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48ON) == RCC_CRRCR_HSI48ON)
 2422              		.loc 1 1579 6
 2423 00f0 274B     		ldr	r3, .L163
 2424 00f2 D3F89830 		ldr	r3, [r3, #152]
 2425 00f6 03F00103 		and	r3, r3, #1
 2426              		.loc 1 1579 5
 2427 00fa 012B     		cmp	r3, #1
 2428 00fc 03D1     		bne	.L159
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_ON;
 2429              		.loc 1 1581 35
 2430 00fe 7B68     		ldr	r3, [r7, #4]
 2431 0100 0122     		movs	r2, #1
 2432 0102 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/cct1HO6N.s 			page 72


 2433 0104 02E0     		b	.L160
 2434              	.L159:
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_OFF;
 2435              		.loc 1 1585 35
 2436 0106 7B68     		ldr	r3, [r7, #4]
 2437 0108 0022     		movs	r2, #0
 2438 010a 5A62     		str	r2, [r3, #36]
 2439              	.L160:
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->HSI48State = RCC_HSI48_OFF;
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_PLLON) == RCC_CR_PLLON)
 2440              		.loc 1 1592 6
 2441 010c 204B     		ldr	r3, .L163
 2442 010e 1B68     		ldr	r3, [r3]
 2443 0110 03F08073 		and	r3, r3, #16777216
 2444              		.loc 1 1592 5
 2445 0114 B3F1807F 		cmp	r3, #16777216
 2446 0118 03D1     		bne	.L161
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2447              		.loc 1 1594 37
 2448 011a 7B68     		ldr	r3, [r7, #4]
 2449 011c 0222     		movs	r2, #2
 2450 011e 9A62     		str	r2, [r3, #40]
 2451 0120 02E0     		b	.L162
 2452              	.L161:
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2453              		.loc 1 1598 37
 2454 0122 7B68     		ldr	r3, [r7, #4]
 2455 0124 0122     		movs	r2, #1
 2456 0126 9A62     		str	r2, [r3, #40]
 2457              	.L162:
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 2458              		.loc 1 1600 38
 2459 0128 194B     		ldr	r3, .L163
 2460 012a DB68     		ldr	r3, [r3, #12]
 2461 012c 03F00302 		and	r2, r3, #3
 2462              		.loc 1 1600 36
 2463 0130 7B68     		ldr	r3, [r7, #4]
 2464 0132 DA62     		str	r2, [r3, #44]
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) 
 2465              		.loc 1 1601 34
 2466 0134 164B     		ldr	r3, .L163
 2467 0136 DB68     		ldr	r3, [r3, #12]
 2468              		.loc 1 1601 75
 2469 0138 1B09     		lsrs	r3, r3, #4
ARM GAS  /tmp/cct1HO6N.s 			page 73


 2470 013a 03F00703 		and	r3, r3, #7
 2471              		.loc 1 1601 100
 2472 013e 5A1C     		adds	r2, r3, #1
 2473              		.loc 1 1601 31
 2474 0140 7B68     		ldr	r3, [r7, #4]
 2475 0142 1A63     		str	r2, [r3, #48]
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
 2476              		.loc 1 1602 33
 2477 0144 124B     		ldr	r3, .L163
 2478 0146 DB68     		ldr	r3, [r3, #12]
 2479              		.loc 1 1602 74
 2480 0148 1B0A     		lsrs	r3, r3, #8
 2481 014a 03F07F02 		and	r2, r3, #127
 2482              		.loc 1 1602 31
 2483 014e 7B68     		ldr	r3, [r7, #4]
 2484 0150 5A63     		str	r2, [r3, #52]
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Pos
 2485              		.loc 1 1603 36
 2486 0152 0F4B     		ldr	r3, .L163
 2487 0154 DB68     		ldr	r3, [r3, #12]
 2488              		.loc 1 1603 77
 2489 0156 5B0D     		lsrs	r3, r3, #21
 2490 0158 03F00303 		and	r3, r3, #3
 2491              		.loc 1 1603 102
 2492 015c 0133     		adds	r3, r3, #1
 2493              		.loc 1 1603 108
 2494 015e 5A00     		lsls	r2, r3, #1
 2495              		.loc 1 1603 31
 2496 0160 7B68     		ldr	r3, [r7, #4]
 2497 0162 DA63     		str	r2, [r3, #60]
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos
 2498              		.loc 1 1604 36
 2499 0164 0A4B     		ldr	r3, .L163
 2500 0166 DB68     		ldr	r3, [r3, #12]
 2501              		.loc 1 1604 77
 2502 0168 5B0E     		lsrs	r3, r3, #25
 2503 016a 03F00303 		and	r3, r3, #3
 2504              		.loc 1 1604 102
 2505 016e 0133     		adds	r3, r3, #1
 2506              		.loc 1 1604 108
 2507 0170 5A00     		lsls	r2, r3, #1
 2508              		.loc 1 1604 31
 2509 0172 7B68     		ldr	r3, [r7, #4]
 2510 0174 1A64     		str	r2, [r3, #64]
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_DIV_2_31_SUPPORT)
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLPDIV) >> RCC_PLLCFGR_PLLPDIV_
 2511              		.loc 1 1607 33
 2512 0176 064B     		ldr	r3, .L163
 2513 0178 DB68     		ldr	r3, [r3, #12]
 2514              		.loc 1 1607 77
 2515 017a DB0E     		lsrs	r3, r3, #27
 2516 017c 03F01F02 		and	r2, r3, #31
 2517              		.loc 1 1607 31
 2518 0180 7B68     		ldr	r3, [r7, #4]
 2519 0182 9A63     		str	r2, [r3, #56]
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
ARM GAS  /tmp/cct1HO6N.s 			page 74


1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLP) != 0U)
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLP = RCC_PLLP_DIV17;
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLP = RCC_PLLP_DIV7;
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLP_DIV_2_31_SUPPORT */
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLP_SUPPORT */
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2520              		.loc 1 1619 1
 2521 0184 00BF     		nop
 2522 0186 0C37     		adds	r7, r7, #12
 2523              	.LCFI37:
 2524              		.cfi_def_cfa_offset 4
 2525 0188 BD46     		mov	sp, r7
 2526              	.LCFI38:
 2527              		.cfi_def_cfa_register 13
 2528              		@ sp needed
 2529 018a 5DF8047B 		ldr	r7, [sp], #4
 2530              	.LCFI39:
 2531              		.cfi_restore 7
 2532              		.cfi_def_cfa_offset 0
 2533 018e 7047     		bx	lr
 2534              	.L164:
 2535              		.align	2
 2536              	.L163:
 2537 0190 00100240 		.word	1073876992
 2538              		.cfi_endproc
 2539              	.LFE138:
 2541              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2542              		.align	1
 2543              		.global	HAL_RCC_GetClockConfig
 2544              		.syntax unified
 2545              		.thumb
 2546              		.thumb_func
 2547              		.fpu fpv4-sp-d16
 2549              	HAL_RCC_GetClockConfig:
 2550              	.LFB139:
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Configure the RCC_ClkInitStruct according to the internal
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         RCC configuration registers.
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct  pointer to an RCC_ClkInitTypeDef structure that
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         will be configured.
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  pFLatency  Pointer on the Flash Latency.
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2551              		.loc 1 1630 1
 2552              		.cfi_startproc
 2553              		@ args = 0, pretend = 0, frame = 8
 2554              		@ frame_needed = 1, uses_anonymous_args = 0
 2555              		@ link register save eliminated.
 2556 0000 80B4     		push	{r7}
ARM GAS  /tmp/cct1HO6N.s 			page 75


 2557              	.LCFI40:
 2558              		.cfi_def_cfa_offset 4
 2559              		.cfi_offset 7, -4
 2560 0002 83B0     		sub	sp, sp, #12
 2561              	.LCFI41:
 2562              		.cfi_def_cfa_offset 16
 2563 0004 00AF     		add	r7, sp, #0
 2564              	.LCFI42:
 2565              		.cfi_def_cfa_register 7
 2566 0006 7860     		str	r0, [r7, #4]
 2567 0008 3960     		str	r1, [r7]
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != (void  *)NULL);
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(pFLatency != (void *)NULL);
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2568              		.loc 1 1636 32
 2569 000a 7B68     		ldr	r3, [r7, #4]
 2570 000c 0F22     		movs	r2, #15
 2571 000e 1A60     		str	r2, [r3]
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = READ_BIT(RCC->CFGR, RCC_CFGR_SW);
 2572              		.loc 1 1639 37
 2573 0010 124B     		ldr	r3, .L166
 2574 0012 9B68     		ldr	r3, [r3, #8]
 2575 0014 03F00302 		and	r2, r3, #3
 2576              		.loc 1 1639 35
 2577 0018 7B68     		ldr	r3, [r7, #4]
 2578 001a 5A60     		str	r2, [r3, #4]
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = READ_BIT(RCC->CFGR, RCC_CFGR_HPRE);
 2579              		.loc 1 1642 38
 2580 001c 0F4B     		ldr	r3, .L166
 2581 001e 9B68     		ldr	r3, [r3, #8]
 2582 0020 03F0F002 		and	r2, r3, #240
 2583              		.loc 1 1642 36
 2584 0024 7B68     		ldr	r3, [r7, #4]
 2585 0026 9A60     		str	r2, [r3, #8]
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1);
 2586              		.loc 1 1645 39
 2587 0028 0C4B     		ldr	r3, .L166
 2588 002a 9B68     		ldr	r3, [r3, #8]
 2589 002c 03F4E062 		and	r2, r3, #1792
 2590              		.loc 1 1645 37
 2591 0030 7B68     		ldr	r3, [r7, #4]
 2592 0032 DA60     		str	r2, [r3, #12]
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> 3U);
 2593              		.loc 1 1648 40
 2594 0034 094B     		ldr	r3, .L166
 2595 0036 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/cct1HO6N.s 			page 76


 2596              		.loc 1 1648 76
 2597 0038 DB08     		lsrs	r3, r3, #3
 2598 003a 03F4E062 		and	r2, r3, #1792
 2599              		.loc 1 1648 37
 2600 003e 7B68     		ldr	r3, [r7, #4]
 2601 0040 1A61     		str	r2, [r3, #16]
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *pFLatency = __HAL_FLASH_GET_LATENCY();
 2602              		.loc 1 1651 16
 2603 0042 074B     		ldr	r3, .L166+4
 2604 0044 1B68     		ldr	r3, [r3]
 2605 0046 03F00702 		and	r2, r3, #7
 2606              		.loc 1 1651 14
 2607 004a 3B68     		ldr	r3, [r7]
 2608 004c 1A60     		str	r2, [r3]
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2609              		.loc 1 1652 1
 2610 004e 00BF     		nop
 2611 0050 0C37     		adds	r7, r7, #12
 2612              	.LCFI43:
 2613              		.cfi_def_cfa_offset 4
 2614 0052 BD46     		mov	sp, r7
 2615              	.LCFI44:
 2616              		.cfi_def_cfa_register 13
 2617              		@ sp needed
 2618 0054 5DF8047B 		ldr	r7, [sp], #4
 2619              	.LCFI45:
 2620              		.cfi_restore 7
 2621              		.cfi_def_cfa_offset 0
 2622 0058 7047     		bx	lr
 2623              	.L167:
 2624 005a 00BF     		.align	2
 2625              	.L166:
 2626 005c 00100240 		.word	1073876992
 2627 0060 00200240 		.word	1073881088
 2628              		.cfi_endproc
 2629              	.LFE139:
 2631              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 2632              		.align	1
 2633              		.global	HAL_RCC_EnableCSS
 2634              		.syntax unified
 2635              		.thumb
 2636              		.thumb_func
 2637              		.fpu fpv4-sp-d16
 2639              	HAL_RCC_EnableCSS:
 2640              	.LFB140:
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Enable the Clock Security System.
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The Clock Security System can only be cleared by reset.
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
ARM GAS  /tmp/cct1HO6N.s 			page 77


1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2641              		.loc 1 1665 1
 2642              		.cfi_startproc
 2643              		@ args = 0, pretend = 0, frame = 0
 2644              		@ frame_needed = 1, uses_anonymous_args = 0
 2645              		@ link register save eliminated.
 2646 0000 80B4     		push	{r7}
 2647              	.LCFI46:
 2648              		.cfi_def_cfa_offset 4
 2649              		.cfi_offset 7, -4
 2650 0002 00AF     		add	r7, sp, #0
 2651              	.LCFI47:
 2652              		.cfi_def_cfa_register 7
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 2653              		.loc 1 1666 3
 2654 0004 054B     		ldr	r3, .L169
 2655 0006 1B68     		ldr	r3, [r3]
 2656 0008 044A     		ldr	r2, .L169
 2657 000a 43F40023 		orr	r3, r3, #524288
 2658 000e 1360     		str	r3, [r2]
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2659              		.loc 1 1667 1
 2660 0010 00BF     		nop
 2661 0012 BD46     		mov	sp, r7
 2662              	.LCFI48:
 2663              		.cfi_def_cfa_register 13
 2664              		@ sp needed
 2665 0014 5DF8047B 		ldr	r7, [sp], #4
 2666              	.LCFI49:
 2667              		.cfi_restore 7
 2668              		.cfi_def_cfa_offset 0
 2669 0018 7047     		bx	lr
 2670              	.L170:
 2671 001a 00BF     		.align	2
 2672              	.L169:
 2673 001c 00100240 		.word	1073876992
 2674              		.cfi_endproc
 2675              	.LFE140:
 2677              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2678              		.align	1
 2679              		.global	HAL_RCC_NMI_IRQHandler
 2680              		.syntax unified
 2681              		.thumb
 2682              		.thumb_func
 2683              		.fpu fpv4-sp-d16
 2685              	HAL_RCC_NMI_IRQHandler:
 2686              	.LFB141:
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief Handle the RCC Clock Security System interrupt request.
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
ARM GAS  /tmp/cct1HO6N.s 			page 78


 2687              		.loc 1 1675 1
 2688              		.cfi_startproc
 2689              		@ args = 0, pretend = 0, frame = 0
 2690              		@ frame_needed = 1, uses_anonymous_args = 0
 2691 0000 80B5     		push	{r7, lr}
 2692              	.LCFI50:
 2693              		.cfi_def_cfa_offset 8
 2694              		.cfi_offset 7, -8
 2695              		.cfi_offset 14, -4
 2696 0002 00AF     		add	r7, sp, #0
 2697              	.LCFI51:
 2698              		.cfi_def_cfa_register 7
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check RCC CSSF interrupt flag  */
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2699              		.loc 1 1677 6
 2700 0004 074B     		ldr	r3, .L174
 2701 0006 DB69     		ldr	r3, [r3, #28]
 2702 0008 03F48073 		and	r3, r3, #256
 2703              		.loc 1 1677 5
 2704 000c B3F5807F 		cmp	r3, #256
 2705 0010 05D1     		bne	.L173
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2706              		.loc 1 1680 5
 2707 0012 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2708              		.loc 1 1683 5
 2709 0016 034B     		ldr	r3, .L174
 2710 0018 4FF48072 		mov	r2, #256
 2711 001c 1A62     		str	r2, [r3, #32]
 2712              	.L173:
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2713              		.loc 1 1685 1
 2714 001e 00BF     		nop
 2715 0020 80BD     		pop	{r7, pc}
 2716              	.L175:
 2717 0022 00BF     		.align	2
 2718              	.L174:
 2719 0024 00100240 		.word	1073876992
 2720              		.cfi_endproc
 2721              	.LFE141:
 2723              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2724              		.align	1
 2725              		.weak	HAL_RCC_CSSCallback
 2726              		.syntax unified
 2727              		.thumb
 2728              		.thumb_func
 2729              		.fpu fpv4-sp-d16
 2731              	HAL_RCC_CSSCallback:
 2732              	.LFB142:
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback.
ARM GAS  /tmp/cct1HO6N.s 			page 79


1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval none
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2733              		.loc 1 1692 1
 2734              		.cfi_startproc
 2735              		@ args = 0, pretend = 0, frame = 0
 2736              		@ frame_needed = 1, uses_anonymous_args = 0
 2737              		@ link register save eliminated.
 2738 0000 80B4     		push	{r7}
 2739              	.LCFI52:
 2740              		.cfi_def_cfa_offset 4
 2741              		.cfi_offset 7, -4
 2742 0002 00AF     		add	r7, sp, #0
 2743              	.LCFI53:
 2744              		.cfi_def_cfa_register 7
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback should be implemented in the user file
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****    */
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2745              		.loc 1 1696 1
 2746 0004 00BF     		nop
 2747 0006 BD46     		mov	sp, r7
 2748              	.LCFI54:
 2749              		.cfi_def_cfa_register 13
 2750              		@ sp needed
 2751 0008 5DF8047B 		ldr	r7, [sp], #4
 2752              	.LCFI55:
 2753              		.cfi_restore 7
 2754              		.cfi_def_cfa_offset 0
 2755 000c 7047     		bx	lr
 2756              		.cfi_endproc
 2757              	.LFE142:
 2759              		.section	.text.RCC_SetFlashLatencyFromMSIRange,"ax",%progbits
 2760              		.align	1
 2761              		.syntax unified
 2762              		.thumb
 2763              		.thumb_func
 2764              		.fpu fpv4-sp-d16
 2766              	RCC_SetFlashLatencyFromMSIRange:
 2767              	.LFB143:
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Functions
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Update number of Flash wait states in line with MSI range and current
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             voltage range.
ARM GAS  /tmp/cct1HO6N.s 			page 80


1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_11
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval HAL status
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2768              		.loc 1 1717 1
 2769              		.cfi_startproc
 2770              		@ args = 0, pretend = 0, frame = 24
 2771              		@ frame_needed = 1, uses_anonymous_args = 0
 2772 0000 80B5     		push	{r7, lr}
 2773              	.LCFI56:
 2774              		.cfi_def_cfa_offset 8
 2775              		.cfi_offset 7, -8
 2776              		.cfi_offset 14, -4
 2777 0002 86B0     		sub	sp, sp, #24
 2778              	.LCFI57:
 2779              		.cfi_def_cfa_offset 32
 2780 0004 00AF     		add	r7, sp, #0
 2781              	.LCFI58:
 2782              		.cfi_def_cfa_register 7
 2783 0006 7860     		str	r0, [r7, #4]
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t vos;
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */
 2784              		.loc 1 1719 12
 2785 0008 0023     		movs	r3, #0
 2786 000a 3B61     		str	r3, [r7, #16]
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(__HAL_RCC_PWR_IS_CLK_ENABLED())
 2787              		.loc 1 1721 6
 2788 000c 2A4B     		ldr	r3, .L188
 2789 000e 9B6D     		ldr	r3, [r3, #88]
 2790 0010 03F08053 		and	r3, r3, #268435456
 2791              		.loc 1 1721 5
 2792 0014 002B     		cmp	r3, #0
 2793 0016 03D0     		beq	.L178
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     vos = HAL_PWREx_GetVoltageRange();
 2794              		.loc 1 1723 11
 2795 0018 FFF7FEFF 		bl	HAL_PWREx_GetVoltageRange
 2796 001c 7861     		str	r0, [r7, #20]
 2797 001e 14E0     		b	.L179
 2798              	.L178:
 2799              	.LBB5:
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 2800              		.loc 1 1727 5
 2801 0020 254B     		ldr	r3, .L188
 2802 0022 9B6D     		ldr	r3, [r3, #88]
 2803 0024 244A     		ldr	r2, .L188
 2804 0026 43F08053 		orr	r3, r3, #268435456
 2805 002a 9365     		str	r3, [r2, #88]
 2806 002c 224B     		ldr	r3, .L188
 2807 002e 9B6D     		ldr	r3, [r3, #88]
 2808 0030 03F08053 		and	r3, r3, #268435456
 2809 0034 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/cct1HO6N.s 			page 81


 2810 0036 FB68     		ldr	r3, [r7, #12]
 2811              	.LBE5:
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     vos = HAL_PWREx_GetVoltageRange();
 2812              		.loc 1 1728 11
 2813 0038 FFF7FEFF 		bl	HAL_PWREx_GetVoltageRange
 2814 003c 7861     		str	r0, [r7, #20]
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_PWR_CLK_DISABLE();
 2815              		.loc 1 1729 5
 2816 003e 1E4B     		ldr	r3, .L188
 2817 0040 9B6D     		ldr	r3, [r3, #88]
 2818 0042 1D4A     		ldr	r2, .L188
 2819 0044 23F08053 		bic	r3, r3, #268435456
 2820 0048 9365     		str	r3, [r2, #88]
 2821              	.L179:
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(vos == PWR_REGULATOR_VOLTAGE_SCALE1)
 2822              		.loc 1 1732 5
 2823 004a 7B69     		ldr	r3, [r7, #20]
 2824 004c B3F5007F 		cmp	r3, #512
 2825 0050 0BD1     		bne	.L180
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(msirange > RCC_MSIRANGE_8)
 2826              		.loc 1 1734 7
 2827 0052 7B68     		ldr	r3, [r7, #4]
 2828 0054 802B     		cmp	r3, #128
 2829 0056 19D9     		bls	.L183
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI > 16Mhz */
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(msirange > RCC_MSIRANGE_10)
 2830              		.loc 1 1737 9
 2831 0058 7B68     		ldr	r3, [r7, #4]
 2832 005a A02B     		cmp	r3, #160
 2833 005c 02D9     		bls	.L182
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 48Mhz */
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_2; /* 2WS */
 2834              		.loc 1 1740 17
 2835 005e 0223     		movs	r3, #2
 2836 0060 3B61     		str	r3, [r7, #16]
 2837 0062 13E0     		b	.L183
 2838              	.L182:
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 24Mhz or 32Mhz */
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_1; /* 1WS */
 2839              		.loc 1 1745 17
 2840 0064 0123     		movs	r3, #1
 2841 0066 3B61     		str	r3, [r7, #16]
 2842 0068 10E0     		b	.L183
 2843              	.L180:
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* else MSI <= 16Mhz default FLASH_LATENCY_0 0WS */
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
ARM GAS  /tmp/cct1HO6N.s 			page 82


1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(msirange >= RCC_MSIRANGE_8)
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI >= 16Mhz */
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       latency = FLASH_LATENCY_2; /* 2WS */
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(msirange == RCC_MSIRANGE_7)
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 8Mhz */
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_1; /* 1WS */
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(msirange > RCC_MSIRANGE_8)
 2844              		.loc 1 1768 7
 2845 006a 7B68     		ldr	r3, [r7, #4]
 2846 006c 802B     		cmp	r3, #128
 2847 006e 02D9     		bls	.L184
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI > 16Mhz */
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       latency = FLASH_LATENCY_3; /* 3WS */
 2848              		.loc 1 1771 15
 2849 0070 0323     		movs	r3, #3
 2850 0072 3B61     		str	r3, [r7, #16]
 2851 0074 0AE0     		b	.L183
 2852              	.L184:
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(msirange == RCC_MSIRANGE_8)
 2853              		.loc 1 1775 9
 2854 0076 7B68     		ldr	r3, [r7, #4]
 2855 0078 802B     		cmp	r3, #128
 2856 007a 02D1     		bne	.L185
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 16Mhz */
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_2; /* 2WS */
 2857              		.loc 1 1778 17
 2858 007c 0223     		movs	r3, #2
 2859 007e 3B61     		str	r3, [r7, #16]
 2860 0080 04E0     		b	.L183
 2861              	.L185:
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else if(msirange == RCC_MSIRANGE_7)
 2862              		.loc 1 1780 14
 2863 0082 7B68     		ldr	r3, [r7, #4]
 2864 0084 702B     		cmp	r3, #112
 2865 0086 01D1     		bne	.L183
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 8Mhz */
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_1; /* 1WS */
 2866              		.loc 1 1783 17
 2867 0088 0123     		movs	r3, #1
ARM GAS  /tmp/cct1HO6N.s 			page 83


 2868 008a 3B61     		str	r3, [r7, #16]
 2869              	.L183:
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   __HAL_FLASH_SET_LATENCY(latency);
 2870              		.loc 1 1790 3
 2871 008c 0B4B     		ldr	r3, .L188+4
 2872 008e 1B68     		ldr	r3, [r3]
 2873 0090 23F00702 		bic	r2, r3, #7
 2874 0094 0949     		ldr	r1, .L188+4
 2875 0096 3B69     		ldr	r3, [r7, #16]
 2876 0098 1343     		orrs	r3, r3, r2
 2877 009a 0B60     		str	r3, [r1]
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check that the new number of wait states is taken into account to access the Flash
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****      memory by reading the FLASH_ACR register */
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(__HAL_FLASH_GET_LATENCY() != latency)
 2878              		.loc 1 1794 6
 2879 009c 074B     		ldr	r3, .L188+4
 2880 009e 1B68     		ldr	r3, [r3]
 2881 00a0 03F00703 		and	r3, r3, #7
 2882              		.loc 1 1794 5
 2883 00a4 3A69     		ldr	r2, [r7, #16]
 2884 00a6 9A42     		cmp	r2, r3
 2885 00a8 01D0     		beq	.L186
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     return HAL_ERROR;
 2886              		.loc 1 1796 12
 2887 00aa 0123     		movs	r3, #1
 2888 00ac 00E0     		b	.L187
 2889              	.L186:
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return HAL_OK;
 2890              		.loc 1 1799 10
 2891 00ae 0023     		movs	r3, #0
 2892              	.L187:
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2893              		.loc 1 1800 1
 2894 00b0 1846     		mov	r0, r3
 2895 00b2 1837     		adds	r7, r7, #24
 2896              	.LCFI59:
 2897              		.cfi_def_cfa_offset 8
 2898 00b4 BD46     		mov	sp, r7
 2899              	.LCFI60:
 2900              		.cfi_def_cfa_register 13
 2901              		@ sp needed
 2902 00b6 80BD     		pop	{r7, pc}
 2903              	.L189:
 2904              		.align	2
 2905              	.L188:
 2906 00b8 00100240 		.word	1073876992
 2907 00bc 00200240 		.word	1073881088
ARM GAS  /tmp/cct1HO6N.s 			page 84


 2908              		.cfi_endproc
 2909              	.LFE143:
 2911              		.text
 2912              	.Letext0:
 2913              		.file 2 "/home/hung/opt/xPacks/@gnu-mcu-eclipse/arm-none-eabi-gcc/8.2.1-1.7.1/.content/arm-none-ea
 2914              		.file 3 "/home/hung/opt/xPacks/@gnu-mcu-eclipse/arm-none-eabi-gcc/8.2.1-1.7.1/.content/arm-none-ea
 2915              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2916              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 2917              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l496xx.h"
 2918              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 2919              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2920              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 2921              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 2922              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 2923              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/cct1HO6N.s 			page 85


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_rcc.c
     /tmp/cct1HO6N.s:18     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/cct1HO6N.s:26     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/cct1HO6N.s:230    .text.HAL_RCC_DeInit:0000000000000130 $d
     /tmp/cct1HO6N.s:239    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/cct1HO6N.s:246    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/cct1HO6N.s:2766   .text.RCC_SetFlashLatencyFromMSIRange:0000000000000000 RCC_SetFlashLatencyFromMSIRange
     /tmp/cct1HO6N.s:1902   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/cct1HO6N.s:665    .text.HAL_RCC_OscConfig:00000000000002a4 $d
     /tmp/cct1HO6N.s:671    .text.HAL_RCC_OscConfig:00000000000002b4 $t
     /tmp/cct1HO6N.s:1101   .text.HAL_RCC_OscConfig:0000000000000570 $d
     /tmp/cct1HO6N.s:1105   .text.HAL_RCC_OscConfig:0000000000000578 $t
     /tmp/cct1HO6N.s:1493   .text.HAL_RCC_OscConfig:00000000000007d4 $d
     /tmp/cct1HO6N.s:1499   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/cct1HO6N.s:1506   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/cct1HO6N.s:1798   .text.HAL_RCC_ClockConfig:00000000000001b0 $d
     /tmp/cct1HO6N.s:1807   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/cct1HO6N.s:1814   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/cct1HO6N.s:1890   .text.HAL_RCC_MCOConfig:0000000000000064 $d
     /tmp/cct1HO6N.s:1895   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/cct1HO6N.s:2103   .text.HAL_RCC_GetSysClockFreq:0000000000000108 $d
     /tmp/cct1HO6N.s:2111   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/cct1HO6N.s:2118   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/cct1HO6N.s:2149   .text.HAL_RCC_GetHCLKFreq:0000000000000014 $d
     /tmp/cct1HO6N.s:2154   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/cct1HO6N.s:2161   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/cct1HO6N.s:2197   .text.HAL_RCC_GetPCLK1Freq:0000000000000024 $d
     /tmp/cct1HO6N.s:2203   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/cct1HO6N.s:2210   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/cct1HO6N.s:2246   .text.HAL_RCC_GetPCLK2Freq:0000000000000024 $d
     /tmp/cct1HO6N.s:2252   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/cct1HO6N.s:2259   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/cct1HO6N.s:2537   .text.HAL_RCC_GetOscConfig:0000000000000190 $d
     /tmp/cct1HO6N.s:2542   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/cct1HO6N.s:2549   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/cct1HO6N.s:2626   .text.HAL_RCC_GetClockConfig:000000000000005c $d
     /tmp/cct1HO6N.s:2632   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/cct1HO6N.s:2639   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/cct1HO6N.s:2673   .text.HAL_RCC_EnableCSS:000000000000001c $d
     /tmp/cct1HO6N.s:2678   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/cct1HO6N.s:2685   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/cct1HO6N.s:2731   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/cct1HO6N.s:2719   .text.HAL_RCC_NMI_IRQHandler:0000000000000024 $d
     /tmp/cct1HO6N.s:2724   .text.HAL_RCC_CSSCallback:0000000000000000 $t
     /tmp/cct1HO6N.s:2760   .text.RCC_SetFlashLatencyFromMSIRange:0000000000000000 $t
     /tmp/cct1HO6N.s:2906   .text.RCC_SetFlashLatencyFromMSIRange:00000000000000b8 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
uwTickPrio
AHBPrescTable
HAL_GPIO_Init
MSIRangeTable
APBPrescTable
ARM GAS  /tmp/cct1HO6N.s 			page 86


HAL_PWREx_GetVoltageRange
