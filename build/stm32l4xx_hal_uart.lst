ARM GAS  /tmp/ccFXX6mG.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_UART_Init:
  27              	.LFB130:
  28              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @file    stm32l4xx_hal_uart.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   [..]
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART interrupts handling:
ARM GAS  /tmp/ccFXX6mG.s 			page 2


  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ##### Callback registration #####
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ==================================
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
ARM GAS  /tmp/ccFXX6mG.s 			page 3


  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and a pointer to the user callback function.
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     weak (surcharged) function.
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and the Callback ID.
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @endverbatim
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @attention
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
ARM GAS  /tmp/ccFXX6mG.s 			page 4


 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * All rights reserved.</center></h2>
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #include "stm32l4xx_hal.h"
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup STM32L4xx_HAL_Driver
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8| \
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_FIFOEN ))                      /*!< UART or USART C
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8 )) /*!< UART or
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT| \
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR3_TXFTCFG | USART_CR3_RXFTCFG ))  /*!< UART or USART 
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT))  /*!< UA
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
ARM GAS  /tmp/ccFXX6mG.s 			page 5


 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** ===============================================================================
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in asynchronous mode.
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Baud Rate
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Word Length
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Stop Bit
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Hardware flow control
ARM GAS  /tmp/ccFXX6mG.s 			page 6


 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Over Sampling Method
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) One-Bit Sampling Method
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) data logical level inversion
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX and TX pins swap
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX overrun detection disabling
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA disabling on RX error
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) MSB first on communication line
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) auto Baud rate detection
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     are available in reference manual).
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   following table.
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Table 1. UART frame format.
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  29              		.loc 1 309 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
ARM GAS  /tmp/ccFXX6mG.s 			page 7


  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
  45              		.loc 1 311 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
  49              		.loc 1 313 12
  50 000e 0123     		movs	r3, #1
  51 0010 40E0     		b	.L3
  52              	.L2:
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  53              		.loc 1 327 12
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 5B6F     		ldr	r3, [r3, #116]
  56              		.loc 1 327 6
  57 0016 002B     		cmp	r3, #0
  58 0018 06D1     		bne	.L4
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  59              		.loc 1 330 17
  60 001a 7B68     		ldr	r3, [r7, #4]
  61 001c 0022     		movs	r2, #0
  62 001e 83F87020 		strb	r2, [r3, #112]
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
ARM GAS  /tmp/ccFXX6mG.s 			page 8


 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  63              		.loc 1 344 5
  64 0022 7868     		ldr	r0, [r7, #4]
  65 0024 FFF7FEFF 		bl	HAL_UART_MspInit
  66              	.L4:
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  67              		.loc 1 348 17
  68 0028 7B68     		ldr	r3, [r7, #4]
  69 002a 2422     		movs	r2, #36
  70 002c 5A67     		str	r2, [r3, #116]
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  71              		.loc 1 350 3
  72 002e 7B68     		ldr	r3, [r7, #4]
  73 0030 1B68     		ldr	r3, [r3]
  74 0032 1A68     		ldr	r2, [r3]
  75 0034 7B68     		ldr	r3, [r7, #4]
  76 0036 1B68     		ldr	r3, [r3]
  77 0038 22F00102 		bic	r2, r2, #1
  78 003c 1A60     		str	r2, [r3]
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  79              		.loc 1 353 7
  80 003e 7868     		ldr	r0, [r7, #4]
  81 0040 FFF7FEFF 		bl	UART_SetConfig
  82 0044 0346     		mov	r3, r0
  83              		.loc 1 353 6
  84 0046 012B     		cmp	r3, #1
  85 0048 01D1     		bne	.L5
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
  86              		.loc 1 355 12
  87 004a 0123     		movs	r3, #1
  88 004c 22E0     		b	.L3
  89              	.L5:
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  90              		.loc 1 358 26
  91 004e 7B68     		ldr	r3, [r7, #4]
  92 0050 5B6A     		ldr	r3, [r3, #36]
  93              		.loc 1 358 6
  94 0052 002B     		cmp	r3, #0
  95 0054 02D0     		beq	.L6
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
  96              		.loc 1 360 5
  97 0056 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccFXX6mG.s 			page 9


  98 0058 FFF7FEFF 		bl	UART_AdvFeatureConfig
  99              	.L6:
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 100              		.loc 1 366 3
 101 005c 7B68     		ldr	r3, [r7, #4]
 102 005e 1B68     		ldr	r3, [r3]
 103 0060 5A68     		ldr	r2, [r3, #4]
 104 0062 7B68     		ldr	r3, [r7, #4]
 105 0064 1B68     		ldr	r3, [r3]
 106 0066 22F49042 		bic	r2, r2, #18432
 107 006a 5A60     		str	r2, [r3, #4]
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 108              		.loc 1 367 3
 109 006c 7B68     		ldr	r3, [r7, #4]
 110 006e 1B68     		ldr	r3, [r3]
 111 0070 9A68     		ldr	r2, [r3, #8]
 112 0072 7B68     		ldr	r3, [r7, #4]
 113 0074 1B68     		ldr	r3, [r3]
 114 0076 22F02A02 		bic	r2, r2, #42
 115 007a 9A60     		str	r2, [r3, #8]
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 116              		.loc 1 369 3
 117 007c 7B68     		ldr	r3, [r7, #4]
 118 007e 1B68     		ldr	r3, [r3]
 119 0080 1A68     		ldr	r2, [r3]
 120 0082 7B68     		ldr	r3, [r7, #4]
 121 0084 1B68     		ldr	r3, [r3]
 122 0086 42F00102 		orr	r2, r2, #1
 123 008a 1A60     		str	r2, [r3]
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 124              		.loc 1 372 11
 125 008c 7868     		ldr	r0, [r7, #4]
 126 008e FFF7FEFF 		bl	UART_CheckIdleState
 127 0092 0346     		mov	r3, r0
 128              	.L3:
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 129              		.loc 1 373 1
 130 0094 1846     		mov	r0, r3
 131 0096 0837     		adds	r7, r7, #8
 132              	.LCFI3:
 133              		.cfi_def_cfa_offset 8
 134 0098 BD46     		mov	sp, r7
 135              	.LCFI4:
 136              		.cfi_def_cfa_register 13
 137              		@ sp needed
 138 009a 80BD     		pop	{r7, pc}
 139              		.cfi_endproc
 140              	.LFE130:
 142              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
ARM GAS  /tmp/ccFXX6mG.s 			page 10


 143              		.align	1
 144              		.global	HAL_HalfDuplex_Init
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	HAL_HalfDuplex_Init:
 151              	.LFB131:
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 152              		.loc 1 382 1
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 8
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156 0000 80B5     		push	{r7, lr}
 157              	.LCFI5:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 82B0     		sub	sp, sp, #8
 162              	.LCFI6:
 163              		.cfi_def_cfa_offset 16
 164 0004 00AF     		add	r7, sp, #0
 165              	.LCFI7:
 166              		.cfi_def_cfa_register 7
 167 0006 7860     		str	r0, [r7, #4]
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 168              		.loc 1 384 6
 169 0008 7B68     		ldr	r3, [r7, #4]
 170 000a 002B     		cmp	r3, #0
 171 000c 01D1     		bne	.L8
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 172              		.loc 1 386 12
 173 000e 0123     		movs	r3, #1
 174 0010 48E0     		b	.L9
 175              	.L8:
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART instance */
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 176              		.loc 1 392 12
 177 0012 7B68     		ldr	r3, [r7, #4]
 178 0014 5B6F     		ldr	r3, [r3, #116]
 179              		.loc 1 392 6
 180 0016 002B     		cmp	r3, #0
 181 0018 06D1     		bne	.L10
ARM GAS  /tmp/ccFXX6mG.s 			page 11


 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 182              		.loc 1 395 17
 183 001a 7B68     		ldr	r3, [r7, #4]
 184 001c 0022     		movs	r2, #0
 185 001e 83F87020 		strb	r2, [r3, #112]
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 186              		.loc 1 409 5
 187 0022 7868     		ldr	r0, [r7, #4]
 188 0024 FFF7FEFF 		bl	HAL_UART_MspInit
 189              	.L10:
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 190              		.loc 1 413 17
 191 0028 7B68     		ldr	r3, [r7, #4]
 192 002a 2422     		movs	r2, #36
 193 002c 5A67     		str	r2, [r3, #116]
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 194              		.loc 1 415 3
 195 002e 7B68     		ldr	r3, [r7, #4]
 196 0030 1B68     		ldr	r3, [r3]
 197 0032 1A68     		ldr	r2, [r3]
 198 0034 7B68     		ldr	r3, [r7, #4]
 199 0036 1B68     		ldr	r3, [r3]
 200 0038 22F00102 		bic	r2, r2, #1
 201 003c 1A60     		str	r2, [r3]
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 202              		.loc 1 418 7
 203 003e 7868     		ldr	r0, [r7, #4]
 204 0040 FFF7FEFF 		bl	UART_SetConfig
 205 0044 0346     		mov	r3, r0
 206              		.loc 1 418 6
 207 0046 012B     		cmp	r3, #1
 208 0048 01D1     		bne	.L11
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 209              		.loc 1 420 12
 210 004a 0123     		movs	r3, #1
ARM GAS  /tmp/ccFXX6mG.s 			page 12


 211 004c 2AE0     		b	.L9
 212              	.L11:
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 213              		.loc 1 423 26
 214 004e 7B68     		ldr	r3, [r7, #4]
 215 0050 5B6A     		ldr	r3, [r3, #36]
 216              		.loc 1 423 6
 217 0052 002B     		cmp	r3, #0
 218 0054 02D0     		beq	.L12
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 219              		.loc 1 425 5
 220 0056 7868     		ldr	r0, [r7, #4]
 221 0058 FFF7FEFF 		bl	UART_AdvFeatureConfig
 222              	.L12:
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 223              		.loc 1 431 3
 224 005c 7B68     		ldr	r3, [r7, #4]
 225 005e 1B68     		ldr	r3, [r3]
 226 0060 5A68     		ldr	r2, [r3, #4]
 227 0062 7B68     		ldr	r3, [r7, #4]
 228 0064 1B68     		ldr	r3, [r3]
 229 0066 22F49042 		bic	r2, r2, #18432
 230 006a 5A60     		str	r2, [r3, #4]
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 231              		.loc 1 432 3
 232 006c 7B68     		ldr	r3, [r7, #4]
 233 006e 1B68     		ldr	r3, [r3]
 234 0070 9A68     		ldr	r2, [r3, #8]
 235 0072 7B68     		ldr	r3, [r7, #4]
 236 0074 1B68     		ldr	r3, [r3]
 237 0076 22F02202 		bic	r2, r2, #34
 238 007a 9A60     		str	r2, [r3, #8]
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 239              		.loc 1 435 3
 240 007c 7B68     		ldr	r3, [r7, #4]
 241 007e 1B68     		ldr	r3, [r3]
 242 0080 9A68     		ldr	r2, [r3, #8]
 243 0082 7B68     		ldr	r3, [r7, #4]
 244 0084 1B68     		ldr	r3, [r3]
 245 0086 42F00802 		orr	r2, r2, #8
 246 008a 9A60     		str	r2, [r3, #8]
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 247              		.loc 1 437 3
 248 008c 7B68     		ldr	r3, [r7, #4]
 249 008e 1B68     		ldr	r3, [r3]
 250 0090 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccFXX6mG.s 			page 13


 251 0092 7B68     		ldr	r3, [r7, #4]
 252 0094 1B68     		ldr	r3, [r3]
 253 0096 42F00102 		orr	r2, r2, #1
 254 009a 1A60     		str	r2, [r3]
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 255              		.loc 1 440 11
 256 009c 7868     		ldr	r0, [r7, #4]
 257 009e FFF7FEFF 		bl	UART_CheckIdleState
 258 00a2 0346     		mov	r3, r0
 259              	.L9:
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 260              		.loc 1 441 1
 261 00a4 1846     		mov	r0, r3
 262 00a6 0837     		adds	r7, r7, #8
 263              	.LCFI8:
 264              		.cfi_def_cfa_offset 8
 265 00a8 BD46     		mov	sp, r7
 266              	.LCFI9:
 267              		.cfi_def_cfa_register 13
 268              		@ sp needed
 269 00aa 80BD     		pop	{r7, pc}
 270              		.cfi_endproc
 271              	.LFE131:
 273              		.section	.text.HAL_LIN_Init,"ax",%progbits
 274              		.align	1
 275              		.global	HAL_LIN_Init
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu fpv4-sp-d16
 281              	HAL_LIN_Init:
 282              	.LFB132:
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart             UART handle.
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 283              		.loc 1 455 1
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 8
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287 0000 80B5     		push	{r7, lr}
 288              	.LCFI10:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 7, -8
 291              		.cfi_offset 14, -4
ARM GAS  /tmp/ccFXX6mG.s 			page 14


 292 0002 82B0     		sub	sp, sp, #8
 293              	.LCFI11:
 294              		.cfi_def_cfa_offset 16
 295 0004 00AF     		add	r7, sp, #0
 296              	.LCFI12:
 297              		.cfi_def_cfa_register 7
 298 0006 7860     		str	r0, [r7, #4]
 299 0008 3960     		str	r1, [r7]
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 300              		.loc 1 457 6
 301 000a 7B68     		ldr	r3, [r7, #4]
 302 000c 002B     		cmp	r3, #0
 303 000e 01D1     		bne	.L14
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 304              		.loc 1 459 12
 305 0010 0123     		movs	r3, #1
 306 0012 5FE0     		b	.L15
 307              	.L14:
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the LIN UART instance */
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 308              		.loc 1 468 18
 309 0014 7B68     		ldr	r3, [r7, #4]
 310 0016 DB69     		ldr	r3, [r3, #28]
 311              		.loc 1 468 6
 312 0018 B3F5004F 		cmp	r3, #32768
 313 001c 01D1     		bne	.L16
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 314              		.loc 1 470 12
 315 001e 0123     		movs	r3, #1
 316 0020 58E0     		b	.L15
 317              	.L16:
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 318              		.loc 1 473 18
 319 0022 7B68     		ldr	r3, [r7, #4]
 320 0024 9B68     		ldr	r3, [r3, #8]
 321              		.loc 1 473 6
 322 0026 002B     		cmp	r3, #0
 323 0028 01D0     		beq	.L17
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 324              		.loc 1 475 12
 325 002a 0123     		movs	r3, #1
 326 002c 52E0     		b	.L15
 327              	.L17:
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccFXX6mG.s 			page 15


 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 328              		.loc 1 478 12
 329 002e 7B68     		ldr	r3, [r7, #4]
 330 0030 5B6F     		ldr	r3, [r3, #116]
 331              		.loc 1 478 6
 332 0032 002B     		cmp	r3, #0
 333 0034 06D1     		bne	.L18
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 334              		.loc 1 481 17
 335 0036 7B68     		ldr	r3, [r7, #4]
 336 0038 0022     		movs	r2, #0
 337 003a 83F87020 		strb	r2, [r3, #112]
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 338              		.loc 1 495 5
 339 003e 7868     		ldr	r0, [r7, #4]
 340 0040 FFF7FEFF 		bl	HAL_UART_MspInit
 341              	.L18:
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 342              		.loc 1 499 17
 343 0044 7B68     		ldr	r3, [r7, #4]
 344 0046 2422     		movs	r2, #36
 345 0048 5A67     		str	r2, [r3, #116]
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 346              		.loc 1 501 3
 347 004a 7B68     		ldr	r3, [r7, #4]
 348 004c 1B68     		ldr	r3, [r3]
 349 004e 1A68     		ldr	r2, [r3]
 350 0050 7B68     		ldr	r3, [r7, #4]
 351 0052 1B68     		ldr	r3, [r3]
 352 0054 22F00102 		bic	r2, r2, #1
 353 0058 1A60     		str	r2, [r3]
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 354              		.loc 1 504 7
 355 005a 7868     		ldr	r0, [r7, #4]
 356 005c FFF7FEFF 		bl	UART_SetConfig
ARM GAS  /tmp/ccFXX6mG.s 			page 16


 357 0060 0346     		mov	r3, r0
 358              		.loc 1 504 6
 359 0062 012B     		cmp	r3, #1
 360 0064 01D1     		bne	.L19
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 361              		.loc 1 506 12
 362 0066 0123     		movs	r3, #1
 363 0068 34E0     		b	.L15
 364              	.L19:
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 365              		.loc 1 509 26
 366 006a 7B68     		ldr	r3, [r7, #4]
 367 006c 5B6A     		ldr	r3, [r3, #36]
 368              		.loc 1 509 6
 369 006e 002B     		cmp	r3, #0
 370 0070 02D0     		beq	.L20
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 371              		.loc 1 511 5
 372 0072 7868     		ldr	r0, [r7, #4]
 373 0074 FFF7FEFF 		bl	UART_AdvFeatureConfig
 374              	.L20:
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 375              		.loc 1 517 3
 376 0078 7B68     		ldr	r3, [r7, #4]
 377 007a 1B68     		ldr	r3, [r3]
 378 007c 5A68     		ldr	r2, [r3, #4]
 379 007e 7B68     		ldr	r3, [r7, #4]
 380 0080 1B68     		ldr	r3, [r3]
 381 0082 22F40062 		bic	r2, r2, #2048
 382 0086 5A60     		str	r2, [r3, #4]
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 383              		.loc 1 518 3
 384 0088 7B68     		ldr	r3, [r7, #4]
 385 008a 1B68     		ldr	r3, [r3]
 386 008c 9A68     		ldr	r2, [r3, #8]
 387 008e 7B68     		ldr	r3, [r7, #4]
 388 0090 1B68     		ldr	r3, [r3]
 389 0092 22F02A02 		bic	r2, r2, #42
 390 0096 9A60     		str	r2, [r3, #8]
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 391              		.loc 1 521 3
 392 0098 7B68     		ldr	r3, [r7, #4]
 393 009a 1B68     		ldr	r3, [r3]
 394 009c 5A68     		ldr	r2, [r3, #4]
 395 009e 7B68     		ldr	r3, [r7, #4]
 396 00a0 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccFXX6mG.s 			page 17


 397 00a2 42F48042 		orr	r2, r2, #16384
 398 00a6 5A60     		str	r2, [r3, #4]
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 399              		.loc 1 524 3
 400 00a8 7B68     		ldr	r3, [r7, #4]
 401 00aa 1B68     		ldr	r3, [r3]
 402 00ac 5B68     		ldr	r3, [r3, #4]
 403 00ae 23F02001 		bic	r1, r3, #32
 404 00b2 7B68     		ldr	r3, [r7, #4]
 405 00b4 1B68     		ldr	r3, [r3]
 406 00b6 3A68     		ldr	r2, [r7]
 407 00b8 0A43     		orrs	r2, r2, r1
 408 00ba 5A60     		str	r2, [r3, #4]
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 409              		.loc 1 526 3
 410 00bc 7B68     		ldr	r3, [r7, #4]
 411 00be 1B68     		ldr	r3, [r3]
 412 00c0 1A68     		ldr	r2, [r3]
 413 00c2 7B68     		ldr	r3, [r7, #4]
 414 00c4 1B68     		ldr	r3, [r3]
 415 00c6 42F00102 		orr	r2, r2, #1
 416 00ca 1A60     		str	r2, [r3]
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 417              		.loc 1 529 11
 418 00cc 7868     		ldr	r0, [r7, #4]
 419 00ce FFF7FEFF 		bl	UART_CheckIdleState
 420 00d2 0346     		mov	r3, r0
 421              	.L15:
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 422              		.loc 1 530 1
 423 00d4 1846     		mov	r0, r3
 424 00d6 0837     		adds	r7, r7, #8
 425              	.LCFI13:
 426              		.cfi_def_cfa_offset 8
 427 00d8 BD46     		mov	sp, r7
 428              	.LCFI14:
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 00da 80BD     		pop	{r7, pc}
 432              		.cfi_endproc
 433              	.LFE132:
 435              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 436              		.align	1
 437              		.global	HAL_MultiProcessor_Init
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 441              		.fpu fpv4-sp-d16
 443              	HAL_MultiProcessor_Init:
 444              	.LFB133:
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccFXX6mG.s 			page 18


 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart        UART handle.
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 445              		.loc 1 552 1
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 16
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449 0000 80B5     		push	{r7, lr}
 450              	.LCFI15:
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 84B0     		sub	sp, sp, #16
 455              	.LCFI16:
 456              		.cfi_def_cfa_offset 24
 457 0004 00AF     		add	r7, sp, #0
 458              	.LCFI17:
 459              		.cfi_def_cfa_register 7
 460 0006 F860     		str	r0, [r7, #12]
 461 0008 0B46     		mov	r3, r1
 462 000a 7A60     		str	r2, [r7, #4]
 463 000c FB72     		strb	r3, [r7, #11]
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 464              		.loc 1 554 6
 465 000e FB68     		ldr	r3, [r7, #12]
 466 0010 002B     		cmp	r3, #0
 467 0012 01D1     		bne	.L22
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 468              		.loc 1 556 12
 469 0014 0123     		movs	r3, #1
 470 0016 59E0     		b	.L23
 471              	.L22:
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the wake up method parameter */
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
ARM GAS  /tmp/ccFXX6mG.s 			page 19


 472              		.loc 1 562 12
 473 0018 FB68     		ldr	r3, [r7, #12]
 474 001a 5B6F     		ldr	r3, [r3, #116]
 475              		.loc 1 562 6
 476 001c 002B     		cmp	r3, #0
 477 001e 06D1     		bne	.L24
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 478              		.loc 1 565 17
 479 0020 FB68     		ldr	r3, [r7, #12]
 480 0022 0022     		movs	r2, #0
 481 0024 83F87020 		strb	r2, [r3, #112]
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 482              		.loc 1 579 5
 483 0028 F868     		ldr	r0, [r7, #12]
 484 002a FFF7FEFF 		bl	HAL_UART_MspInit
 485              	.L24:
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 486              		.loc 1 583 17
 487 002e FB68     		ldr	r3, [r7, #12]
 488 0030 2422     		movs	r2, #36
 489 0032 5A67     		str	r2, [r3, #116]
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 490              		.loc 1 585 3
 491 0034 FB68     		ldr	r3, [r7, #12]
 492 0036 1B68     		ldr	r3, [r3]
 493 0038 1A68     		ldr	r2, [r3]
 494 003a FB68     		ldr	r3, [r7, #12]
 495 003c 1B68     		ldr	r3, [r3]
 496 003e 22F00102 		bic	r2, r2, #1
 497 0042 1A60     		str	r2, [r3]
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 498              		.loc 1 588 7
 499 0044 F868     		ldr	r0, [r7, #12]
 500 0046 FFF7FEFF 		bl	UART_SetConfig
 501 004a 0346     		mov	r3, r0
 502              		.loc 1 588 6
ARM GAS  /tmp/ccFXX6mG.s 			page 20


 503 004c 012B     		cmp	r3, #1
 504 004e 01D1     		bne	.L25
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 505              		.loc 1 590 12
 506 0050 0123     		movs	r3, #1
 507 0052 3BE0     		b	.L23
 508              	.L25:
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 509              		.loc 1 593 26
 510 0054 FB68     		ldr	r3, [r7, #12]
 511 0056 5B6A     		ldr	r3, [r3, #36]
 512              		.loc 1 593 6
 513 0058 002B     		cmp	r3, #0
 514 005a 02D0     		beq	.L26
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 515              		.loc 1 595 5
 516 005c F868     		ldr	r0, [r7, #12]
 517 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 518              	.L26:
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 519              		.loc 1 601 3
 520 0062 FB68     		ldr	r3, [r7, #12]
 521 0064 1B68     		ldr	r3, [r3]
 522 0066 5A68     		ldr	r2, [r3, #4]
 523 0068 FB68     		ldr	r3, [r7, #12]
 524 006a 1B68     		ldr	r3, [r3]
 525 006c 22F49042 		bic	r2, r2, #18432
 526 0070 5A60     		str	r2, [r3, #4]
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 527              		.loc 1 602 3
 528 0072 FB68     		ldr	r3, [r7, #12]
 529 0074 1B68     		ldr	r3, [r3]
 530 0076 9A68     		ldr	r2, [r3, #8]
 531 0078 FB68     		ldr	r3, [r7, #12]
 532 007a 1B68     		ldr	r3, [r3]
 533 007c 22F02A02 		bic	r2, r2, #42
 534 0080 9A60     		str	r2, [r3, #8]
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 535              		.loc 1 604 6
 536 0082 7B68     		ldr	r3, [r7, #4]
 537 0084 B3F5006F 		cmp	r3, #2048
 538 0088 0AD1     		bne	.L27
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 539              		.loc 1 607 5
 540 008a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccFXX6mG.s 			page 21


 541 008c 1B68     		ldr	r3, [r3]
 542 008e 5B68     		ldr	r3, [r3, #4]
 543 0090 23F07F41 		bic	r1, r3, #-16777216
 544 0094 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 545 0096 1A06     		lsls	r2, r3, #24
 546 0098 FB68     		ldr	r3, [r7, #12]
 547 009a 1B68     		ldr	r3, [r3]
 548 009c 0A43     		orrs	r2, r2, r1
 549 009e 5A60     		str	r2, [r3, #4]
 550              	.L27:
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 551              		.loc 1 611 3
 552 00a0 FB68     		ldr	r3, [r7, #12]
 553 00a2 1B68     		ldr	r3, [r3]
 554 00a4 1B68     		ldr	r3, [r3]
 555 00a6 23F40061 		bic	r1, r3, #2048
 556 00aa FB68     		ldr	r3, [r7, #12]
 557 00ac 1B68     		ldr	r3, [r3]
 558 00ae 7A68     		ldr	r2, [r7, #4]
 559 00b0 0A43     		orrs	r2, r2, r1
 560 00b2 1A60     		str	r2, [r3]
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 561              		.loc 1 613 3
 562 00b4 FB68     		ldr	r3, [r7, #12]
 563 00b6 1B68     		ldr	r3, [r3]
 564 00b8 1A68     		ldr	r2, [r3]
 565 00ba FB68     		ldr	r3, [r7, #12]
 566 00bc 1B68     		ldr	r3, [r3]
 567 00be 42F00102 		orr	r2, r2, #1
 568 00c2 1A60     		str	r2, [r3]
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 569              		.loc 1 616 11
 570 00c4 F868     		ldr	r0, [r7, #12]
 571 00c6 FFF7FEFF 		bl	UART_CheckIdleState
 572 00ca 0346     		mov	r3, r0
 573              	.L23:
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 574              		.loc 1 617 1
 575 00cc 1846     		mov	r0, r3
 576 00ce 1037     		adds	r7, r7, #16
 577              	.LCFI18:
 578              		.cfi_def_cfa_offset 8
 579 00d0 BD46     		mov	sp, r7
 580              	.LCFI19:
 581              		.cfi_def_cfa_register 13
 582              		@ sp needed
 583 00d2 80BD     		pop	{r7, pc}
 584              		.cfi_endproc
 585              	.LFE133:
 587              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 588              		.align	1
ARM GAS  /tmp/ccFXX6mG.s 			page 22


 589              		.global	HAL_UART_DeInit
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 593              		.fpu fpv4-sp-d16
 595              	HAL_UART_DeInit:
 596              	.LFB134:
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 597              		.loc 1 626 1
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 8
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 80B5     		push	{r7, lr}
 602              	.LCFI20:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 82B0     		sub	sp, sp, #8
 607              	.LCFI21:
 608              		.cfi_def_cfa_offset 16
 609 0004 00AF     		add	r7, sp, #0
 610              	.LCFI22:
 611              		.cfi_def_cfa_register 7
 612 0006 7860     		str	r0, [r7, #4]
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 613              		.loc 1 628 6
 614 0008 7B68     		ldr	r3, [r7, #4]
 615 000a 002B     		cmp	r3, #0
 616 000c 01D1     		bne	.L29
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 617              		.loc 1 630 12
 618 000e 0123     		movs	r3, #1
 619 0010 27E0     		b	.L30
 620              	.L29:
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 621              		.loc 1 636 17
 622 0012 7B68     		ldr	r3, [r7, #4]
 623 0014 2422     		movs	r2, #36
 624 0016 5A67     		str	r2, [r3, #116]
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 625              		.loc 1 638 3
ARM GAS  /tmp/ccFXX6mG.s 			page 23


 626 0018 7B68     		ldr	r3, [r7, #4]
 627 001a 1B68     		ldr	r3, [r3]
 628 001c 1A68     		ldr	r2, [r3]
 629 001e 7B68     		ldr	r3, [r7, #4]
 630 0020 1B68     		ldr	r3, [r3]
 631 0022 22F00102 		bic	r2, r2, #1
 632 0026 1A60     		str	r2, [r3]
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 633              		.loc 1 640 8
 634 0028 7B68     		ldr	r3, [r7, #4]
 635 002a 1B68     		ldr	r3, [r3]
 636              		.loc 1 640 24
 637 002c 0022     		movs	r2, #0
 638 002e 1A60     		str	r2, [r3]
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 639              		.loc 1 641 8
 640 0030 7B68     		ldr	r3, [r7, #4]
 641 0032 1B68     		ldr	r3, [r3]
 642              		.loc 1 641 24
 643 0034 0022     		movs	r2, #0
 644 0036 5A60     		str	r2, [r3, #4]
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 645              		.loc 1 642 8
 646 0038 7B68     		ldr	r3, [r7, #4]
 647 003a 1B68     		ldr	r3, [r3]
 648              		.loc 1 642 24
 649 003c 0022     		movs	r2, #0
 650 003e 9A60     		str	r2, [r3, #8]
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 651              		.loc 1 653 3
 652 0040 7868     		ldr	r0, [r7, #4]
 653 0042 FFF7FEFF 		bl	HAL_UART_MspDeInit
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 654              		.loc 1 656 20
 655 0046 7B68     		ldr	r3, [r7, #4]
 656 0048 0022     		movs	r2, #0
 657 004a DA67     		str	r2, [r3, #124]
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 658              		.loc 1 657 17
 659 004c 7B68     		ldr	r3, [r7, #4]
 660 004e 0022     		movs	r2, #0
 661 0050 5A67     		str	r2, [r3, #116]
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 662              		.loc 1 658 18
ARM GAS  /tmp/ccFXX6mG.s 			page 24


 663 0052 7B68     		ldr	r3, [r7, #4]
 664 0054 0022     		movs	r2, #0
 665 0056 9A67     		str	r2, [r3, #120]
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 666              		.loc 1 660 3
 667 0058 7B68     		ldr	r3, [r7, #4]
 668 005a 0022     		movs	r2, #0
 669 005c 83F87020 		strb	r2, [r3, #112]
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 670              		.loc 1 662 10
 671 0060 0023     		movs	r3, #0
 672              	.L30:
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 673              		.loc 1 663 1
 674 0062 1846     		mov	r0, r3
 675 0064 0837     		adds	r7, r7, #8
 676              	.LCFI23:
 677              		.cfi_def_cfa_offset 8
 678 0066 BD46     		mov	sp, r7
 679              	.LCFI24:
 680              		.cfi_def_cfa_register 13
 681              		@ sp needed
 682 0068 80BD     		pop	{r7, pc}
 683              		.cfi_endproc
 684              	.LFE134:
 686              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 687              		.align	1
 688              		.weak	HAL_UART_MspInit
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 692              		.fpu fpv4-sp-d16
 694              	HAL_UART_MspInit:
 695              	.LFB135:
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 696              		.loc 1 671 1
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 8
 699              		@ frame_needed = 1, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 701 0000 80B4     		push	{r7}
 702              	.LCFI25:
 703              		.cfi_def_cfa_offset 4
 704              		.cfi_offset 7, -4
 705 0002 83B0     		sub	sp, sp, #12
 706              	.LCFI26:
 707              		.cfi_def_cfa_offset 16
 708 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccFXX6mG.s 			page 25


 709              	.LCFI27:
 710              		.cfi_def_cfa_register 7
 711 0006 7860     		str	r0, [r7, #4]
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 712              		.loc 1 678 1
 713 0008 00BF     		nop
 714 000a 0C37     		adds	r7, r7, #12
 715              	.LCFI28:
 716              		.cfi_def_cfa_offset 4
 717 000c BD46     		mov	sp, r7
 718              	.LCFI29:
 719              		.cfi_def_cfa_register 13
 720              		@ sp needed
 721 000e 5DF8047B 		ldr	r7, [sp], #4
 722              	.LCFI30:
 723              		.cfi_restore 7
 724              		.cfi_def_cfa_offset 0
 725 0012 7047     		bx	lr
 726              		.cfi_endproc
 727              	.LFE135:
 729              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 730              		.align	1
 731              		.weak	HAL_UART_MspDeInit
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 735              		.fpu fpv4-sp-d16
 737              	HAL_UART_MspDeInit:
 738              	.LFB136:
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 739              		.loc 1 686 1
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 8
 742              		@ frame_needed = 1, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 744 0000 80B4     		push	{r7}
 745              	.LCFI31:
 746              		.cfi_def_cfa_offset 4
 747              		.cfi_offset 7, -4
 748 0002 83B0     		sub	sp, sp, #12
 749              	.LCFI32:
 750              		.cfi_def_cfa_offset 16
 751 0004 00AF     		add	r7, sp, #0
 752              	.LCFI33:
ARM GAS  /tmp/ccFXX6mG.s 			page 26


 753              		.cfi_def_cfa_register 7
 754 0006 7860     		str	r0, [r7, #4]
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 755              		.loc 1 693 1
 756 0008 00BF     		nop
 757 000a 0C37     		adds	r7, r7, #12
 758              	.LCFI34:
 759              		.cfi_def_cfa_offset 4
 760 000c BD46     		mov	sp, r7
 761              	.LCFI35:
 762              		.cfi_def_cfa_register 13
 763              		@ sp needed
 764 000e 5DF8047B 		ldr	r7, [sp], #4
 765              	.LCFI36:
 766              		.cfi_restore 7
 767              		.cfi_def_cfa_offset 0
 768 0012 7047     		bx	lr
 769              		.cfi_endproc
 770              	.LFE136:
 772              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 773              		.align	1
 774              		.global	HAL_UART_Transmit
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu fpv4-sp-d16
 780              	HAL_UART_Transmit:
 781              	.LFB137:
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccFXX6mG.s 			page 27


 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (pCallback == NULL)
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
ARM GAS  /tmp/ccFXX6mG.s 			page 28


 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
ARM GAS  /tmp/ccFXX6mG.s 			page 29


 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
ARM GAS  /tmp/ccFXX6mG.s 			page 30


 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccFXX6mG.s 			page 31


 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### IO operation functions #####
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and Half duplex data transfers.
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) There are two mode of transfer:
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            after finishing transfer.
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            using DMA mode.
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Blocking mode API's are :
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive()
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccFXX6mG.s 			page 32


1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort()
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         Errors are handled as follows :
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer.
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data to be sent.
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 782              		.loc 1 1046 1
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 32
 785              		@ frame_needed = 1, uses_anonymous_args = 0
 786 0000 80B5     		push	{r7, lr}
 787              	.LCFI37:
 788              		.cfi_def_cfa_offset 8
 789              		.cfi_offset 7, -8
 790              		.cfi_offset 14, -4
 791 0002 8AB0     		sub	sp, sp, #40
 792              	.LCFI38:
 793              		.cfi_def_cfa_offset 48
ARM GAS  /tmp/ccFXX6mG.s 			page 33


 794 0004 02AF     		add	r7, sp, #8
 795              	.LCFI39:
 796              		.cfi_def_cfa 7, 40
 797 0006 F860     		str	r0, [r7, #12]
 798 0008 B960     		str	r1, [r7, #8]
 799 000a 3B60     		str	r3, [r7]
 800 000c 1346     		mov	r3, r2	@ movhi
 801 000e FB80     		strh	r3, [r7, #6]	@ movhi
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *pdata16bits;
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 802              		.loc 1 1052 12
 803 0010 FB68     		ldr	r3, [r7, #12]
 804 0012 5B6F     		ldr	r3, [r3, #116]
 805              		.loc 1 1052 6
 806 0014 202B     		cmp	r3, #32
 807 0016 40F08180 		bne	.L34
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 808              		.loc 1 1054 8
 809 001a BB68     		ldr	r3, [r7, #8]
 810 001c 002B     		cmp	r3, #0
 811 001e 02D0     		beq	.L35
 812              		.loc 1 1054 25 discriminator 1
 813 0020 FB88     		ldrh	r3, [r7, #6]
 814 0022 002B     		cmp	r3, #0
 815 0024 01D1     		bne	.L36
 816              	.L35:
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
 817              		.loc 1 1056 15
 818 0026 0123     		movs	r3, #1
 819 0028 79E0     		b	.L37
 820              	.L36:
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 821              		.loc 1 1059 5
 822 002a FB68     		ldr	r3, [r7, #12]
 823 002c 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 824 0030 012B     		cmp	r3, #1
 825 0032 01D1     		bne	.L38
 826              		.loc 1 1059 5 is_stmt 0 discriminator 1
 827 0034 0223     		movs	r3, #2
 828 0036 72E0     		b	.L37
 829              	.L38:
 830              		.loc 1 1059 5 discriminator 2
 831 0038 FB68     		ldr	r3, [r7, #12]
 832 003a 0122     		movs	r2, #1
 833 003c 83F87020 		strb	r2, [r3, #112]
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 834              		.loc 1 1061 22 is_stmt 1 discriminator 2
 835 0040 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccFXX6mG.s 			page 34


 836 0042 0022     		movs	r2, #0
 837 0044 DA67     		str	r2, [r3, #124]
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 838              		.loc 1 1062 19 discriminator 2
 839 0046 FB68     		ldr	r3, [r7, #12]
 840 0048 2122     		movs	r2, #33
 841 004a 5A67     		str	r2, [r3, #116]
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 842              		.loc 1 1065 17 discriminator 2
 843 004c FFF7FEFF 		bl	HAL_GetTick
 844 0050 7861     		str	r0, [r7, #20]
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 845              		.loc 1 1067 24 discriminator 2
 846 0052 FB68     		ldr	r3, [r7, #12]
 847 0054 FA88     		ldrh	r2, [r7, #6]	@ movhi
 848 0056 A3F85020 		strh	r2, [r3, #80]	@ movhi
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 849              		.loc 1 1068 24 discriminator 2
 850 005a FB68     		ldr	r3, [r7, #12]
 851 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 852 005e A3F85220 		strh	r2, [r3, #82]	@ movhi
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 853              		.loc 1 1071 21 discriminator 2
 854 0062 FB68     		ldr	r3, [r7, #12]
 855 0064 9B68     		ldr	r3, [r3, #8]
 856              		.loc 1 1071 8 discriminator 2
 857 0066 B3F5805F 		cmp	r3, #4096
 858 006a 08D1     		bne	.L39
 859              		.loc 1 1071 71 discriminator 1
 860 006c FB68     		ldr	r3, [r7, #12]
 861 006e 1B69     		ldr	r3, [r3, #16]
 862              		.loc 1 1071 56 discriminator 1
 863 0070 002B     		cmp	r3, #0
 864 0072 04D1     		bne	.L39
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = NULL;
 865              		.loc 1 1073 19
 866 0074 0023     		movs	r3, #0
 867 0076 FB61     		str	r3, [r7, #28]
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 868              		.loc 1 1074 19
 869 0078 BB68     		ldr	r3, [r7, #8]
 870 007a BB61     		str	r3, [r7, #24]
 871 007c 03E0     		b	.L40
 872              	.L39:
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = pData;
 873              		.loc 1 1078 19
 874 007e BB68     		ldr	r3, [r7, #8]
 875 0080 FB61     		str	r3, [r7, #28]
ARM GAS  /tmp/ccFXX6mG.s 			page 35


1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = NULL;
 876              		.loc 1 1079 19
 877 0082 0023     		movs	r3, #0
 878 0084 BB61     		str	r3, [r7, #24]
 879              	.L40:
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 880              		.loc 1 1082 11
 881 0086 2DE0     		b	.L41
 882              	.L45:
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 883              		.loc 1 1084 11
 884 0088 3B68     		ldr	r3, [r7]
 885 008a 0093     		str	r3, [sp]
 886 008c 7B69     		ldr	r3, [r7, #20]
 887 008e 0022     		movs	r2, #0
 888 0090 8021     		movs	r1, #128
 889 0092 F868     		ldr	r0, [r7, #12]
 890 0094 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 891 0098 0346     		mov	r3, r0
 892              		.loc 1 1084 10
 893 009a 002B     		cmp	r3, #0
 894 009c 01D0     		beq	.L42
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
 895              		.loc 1 1086 16
 896 009e 0323     		movs	r3, #3
 897 00a0 3DE0     		b	.L37
 898              	.L42:
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (pdata8bits == NULL)
 899              		.loc 1 1088 10
 900 00a2 FB69     		ldr	r3, [r7, #28]
 901 00a4 002B     		cmp	r3, #0
 902 00a6 0BD1     		bne	.L43
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 903              		.loc 1 1090 43
 904 00a8 BB69     		ldr	r3, [r7, #24]
 905 00aa 1A88     		ldrh	r2, [r3]
 906              		.loc 1 1090 14
 907 00ac FB68     		ldr	r3, [r7, #12]
 908 00ae 1B68     		ldr	r3, [r3]
 909              		.loc 1 1090 32
 910 00b0 C2F30802 		ubfx	r2, r2, #0, #9
 911 00b4 92B2     		uxth	r2, r2
 912              		.loc 1 1090 30
 913 00b6 1A85     		strh	r2, [r3, #40]	@ movhi
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata16bits++;
 914              		.loc 1 1091 20
 915 00b8 BB69     		ldr	r3, [r7, #24]
 916 00ba 0233     		adds	r3, r3, #2
 917 00bc BB61     		str	r3, [r7, #24]
 918 00be 08E0     		b	.L44
 919              	.L43:
ARM GAS  /tmp/ccFXX6mG.s 			page 36


1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 920              		.loc 1 1095 42
 921 00c0 FB69     		ldr	r3, [r7, #28]
 922 00c2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 923              		.loc 1 1095 14
 924 00c4 FB68     		ldr	r3, [r7, #12]
 925 00c6 1B68     		ldr	r3, [r3]
 926              		.loc 1 1095 32
 927 00c8 92B2     		uxth	r2, r2
 928              		.loc 1 1095 30
 929 00ca 1A85     		strh	r2, [r3, #40]	@ movhi
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata8bits++;
 930              		.loc 1 1096 19
 931 00cc FB69     		ldr	r3, [r7, #28]
 932 00ce 0133     		adds	r3, r3, #1
 933 00d0 FB61     		str	r3, [r7, #28]
 934              	.L44:
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 935              		.loc 1 1098 12
 936 00d2 FB68     		ldr	r3, [r7, #12]
 937 00d4 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 938 00d8 9BB2     		uxth	r3, r3
 939              		.loc 1 1098 25
 940 00da 013B     		subs	r3, r3, #1
 941 00dc 9AB2     		uxth	r2, r3
 942 00de FB68     		ldr	r3, [r7, #12]
 943 00e0 A3F85220 		strh	r2, [r3, #82]	@ movhi
 944              	.L41:
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 945              		.loc 1 1082 17
 946 00e4 FB68     		ldr	r3, [r7, #12]
 947 00e6 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 948 00ea 9BB2     		uxth	r3, r3
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 949              		.loc 1 1082 11
 950 00ec 002B     		cmp	r3, #0
 951 00ee CBD1     		bne	.L45
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 952              		.loc 1 1101 9
 953 00f0 3B68     		ldr	r3, [r7]
 954 00f2 0093     		str	r3, [sp]
 955 00f4 7B69     		ldr	r3, [r7, #20]
 956 00f6 0022     		movs	r2, #0
 957 00f8 4021     		movs	r1, #64
 958 00fa F868     		ldr	r0, [r7, #12]
 959 00fc FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 960 0100 0346     		mov	r3, r0
 961              		.loc 1 1101 8
 962 0102 002B     		cmp	r3, #0
 963 0104 01D0     		beq	.L46
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccFXX6mG.s 			page 37


1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
 964              		.loc 1 1103 14
 965 0106 0323     		movs	r3, #3
 966 0108 09E0     		b	.L37
 967              	.L46:
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 968              		.loc 1 1107 19
 969 010a FB68     		ldr	r3, [r7, #12]
 970 010c 2022     		movs	r2, #32
 971 010e 5A67     		str	r2, [r3, #116]
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 972              		.loc 1 1109 5
 973 0110 FB68     		ldr	r3, [r7, #12]
 974 0112 0022     		movs	r2, #0
 975 0114 83F87020 		strb	r2, [r3, #112]
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 976              		.loc 1 1111 12
 977 0118 0023     		movs	r3, #0
 978 011a 00E0     		b	.L37
 979              	.L34:
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 980              		.loc 1 1115 12
 981 011c 0223     		movs	r3, #2
 982              	.L37:
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 983              		.loc 1 1117 1
 984 011e 1846     		mov	r0, r3
 985 0120 2037     		adds	r7, r7, #32
 986              	.LCFI40:
 987              		.cfi_def_cfa_offset 8
 988 0122 BD46     		mov	sp, r7
 989              	.LCFI41:
 990              		.cfi_def_cfa_register 13
 991              		@ sp needed
 992 0124 80BD     		pop	{r7, pc}
 993              		.cfi_endproc
 994              	.LFE137:
 996              		.section	.text.HAL_UART_Receive,"ax",%progbits
 997              		.align	1
 998              		.global	HAL_UART_Receive
 999              		.syntax unified
 1000              		.thumb
 1001              		.thumb_func
 1002              		.fpu fpv4-sp-d16
 1004              	HAL_UART_Receive:
 1005              	.LFB138:
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccFXX6mG.s 			page 38


1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer.
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data to be received.
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1006              		.loc 1 1132 1
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 32
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010 0000 80B5     		push	{r7, lr}
 1011              	.LCFI42:
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 7, -8
 1014              		.cfi_offset 14, -4
 1015 0002 8AB0     		sub	sp, sp, #40
 1016              	.LCFI43:
 1017              		.cfi_def_cfa_offset 48
 1018 0004 02AF     		add	r7, sp, #8
 1019              	.LCFI44:
 1020              		.cfi_def_cfa 7, 40
 1021 0006 F860     		str	r0, [r7, #12]
 1022 0008 B960     		str	r1, [r7, #8]
 1023 000a 3B60     		str	r3, [r7]
 1024 000c 1346     		mov	r3, r2	@ movhi
 1025 000e FB80     		strh	r3, [r7, #6]	@ movhi
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *pdata16bits;
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask;
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1026              		.loc 1 1139 12
 1027 0010 FB68     		ldr	r3, [r7, #12]
 1028 0012 9B6F     		ldr	r3, [r3, #120]
 1029              		.loc 1 1139 6
 1030 0014 202B     		cmp	r3, #32
 1031 0016 40F0BB80 		bne	.L48
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1032              		.loc 1 1141 8
 1033 001a BB68     		ldr	r3, [r7, #8]
 1034 001c 002B     		cmp	r3, #0
 1035 001e 02D0     		beq	.L49
 1036              		.loc 1 1141 25 discriminator 1
 1037 0020 FB88     		ldrh	r3, [r7, #6]
 1038 0022 002B     		cmp	r3, #0
 1039 0024 01D1     		bne	.L50
 1040              	.L49:
ARM GAS  /tmp/ccFXX6mG.s 			page 39


1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
 1041              		.loc 1 1143 15
 1042 0026 0123     		movs	r3, #1
 1043 0028 B3E0     		b	.L51
 1044              	.L50:
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1045              		.loc 1 1146 5
 1046 002a FB68     		ldr	r3, [r7, #12]
 1047 002c 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1048 0030 012B     		cmp	r3, #1
 1049 0032 01D1     		bne	.L52
 1050              		.loc 1 1146 5 is_stmt 0 discriminator 1
 1051 0034 0223     		movs	r3, #2
 1052 0036 ACE0     		b	.L51
 1053              	.L52:
 1054              		.loc 1 1146 5 discriminator 2
 1055 0038 FB68     		ldr	r3, [r7, #12]
 1056 003a 0122     		movs	r2, #1
 1057 003c 83F87020 		strb	r2, [r3, #112]
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1058              		.loc 1 1148 22 is_stmt 1 discriminator 2
 1059 0040 FB68     		ldr	r3, [r7, #12]
 1060 0042 0022     		movs	r2, #0
 1061 0044 DA67     		str	r2, [r3, #124]
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1062              		.loc 1 1149 20 discriminator 2
 1063 0046 FB68     		ldr	r3, [r7, #12]
 1064 0048 2222     		movs	r2, #34
 1065 004a 9A67     		str	r2, [r3, #120]
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1066              		.loc 1 1152 17 discriminator 2
 1067 004c FFF7FEFF 		bl	HAL_GetTick
 1068 0050 7861     		str	r0, [r7, #20]
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 1069              		.loc 1 1154 24 discriminator 2
 1070 0052 FB68     		ldr	r3, [r7, #12]
 1071 0054 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1072 0056 A3F85820 		strh	r2, [r3, #88]	@ movhi
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1073              		.loc 1 1155 24 discriminator 2
 1074 005a FB68     		ldr	r3, [r7, #12]
 1075 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1076 005e A3F85A20 		strh	r2, [r3, #90]	@ movhi
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1077              		.loc 1 1158 5 discriminator 2
 1078 0062 FB68     		ldr	r3, [r7, #12]
 1079 0064 9B68     		ldr	r3, [r3, #8]
 1080 0066 B3F5805F 		cmp	r3, #4096
ARM GAS  /tmp/ccFXX6mG.s 			page 40


 1081 006a 0ED1     		bne	.L53
 1082              		.loc 1 1158 5 is_stmt 0 discriminator 1
 1083 006c FB68     		ldr	r3, [r7, #12]
 1084 006e 1B69     		ldr	r3, [r3, #16]
 1085 0070 002B     		cmp	r3, #0
 1086 0072 05D1     		bne	.L54
 1087              		.loc 1 1158 5 discriminator 3
 1088 0074 FB68     		ldr	r3, [r7, #12]
 1089 0076 40F2FF12 		movw	r2, #511
 1090 007a A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1091 007e 2DE0     		b	.L56
 1092              	.L54:
 1093              		.loc 1 1158 5 discriminator 4
 1094 0080 FB68     		ldr	r3, [r7, #12]
 1095 0082 FF22     		movs	r2, #255
 1096 0084 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1097 0088 28E0     		b	.L56
 1098              	.L53:
 1099              		.loc 1 1158 5 discriminator 2
 1100 008a FB68     		ldr	r3, [r7, #12]
 1101 008c 9B68     		ldr	r3, [r3, #8]
 1102 008e 002B     		cmp	r3, #0
 1103 0090 0DD1     		bne	.L57
 1104              		.loc 1 1158 5 discriminator 5
 1105 0092 FB68     		ldr	r3, [r7, #12]
 1106 0094 1B69     		ldr	r3, [r3, #16]
 1107 0096 002B     		cmp	r3, #0
 1108 0098 04D1     		bne	.L58
 1109              		.loc 1 1158 5 discriminator 7
 1110 009a FB68     		ldr	r3, [r7, #12]
 1111 009c FF22     		movs	r2, #255
 1112 009e A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1113 00a2 1BE0     		b	.L56
 1114              	.L58:
 1115              		.loc 1 1158 5 discriminator 8
 1116 00a4 FB68     		ldr	r3, [r7, #12]
 1117 00a6 7F22     		movs	r2, #127
 1118 00a8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1119 00ac 16E0     		b	.L56
 1120              	.L57:
 1121              		.loc 1 1158 5 discriminator 6
 1122 00ae FB68     		ldr	r3, [r7, #12]
 1123 00b0 9B68     		ldr	r3, [r3, #8]
 1124 00b2 B3F1805F 		cmp	r3, #268435456
 1125 00b6 0DD1     		bne	.L60
 1126              		.loc 1 1158 5 discriminator 9
 1127 00b8 FB68     		ldr	r3, [r7, #12]
 1128 00ba 1B69     		ldr	r3, [r3, #16]
 1129 00bc 002B     		cmp	r3, #0
 1130 00be 04D1     		bne	.L61
 1131              		.loc 1 1158 5 discriminator 11
 1132 00c0 FB68     		ldr	r3, [r7, #12]
 1133 00c2 7F22     		movs	r2, #127
 1134 00c4 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1135 00c8 08E0     		b	.L56
 1136              	.L61:
 1137              		.loc 1 1158 5 discriminator 12
ARM GAS  /tmp/ccFXX6mG.s 			page 41


 1138 00ca FB68     		ldr	r3, [r7, #12]
 1139 00cc 3F22     		movs	r2, #63
 1140 00ce A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1141 00d2 03E0     		b	.L56
 1142              	.L60:
 1143              		.loc 1 1158 5 discriminator 10
 1144 00d4 FB68     		ldr	r3, [r7, #12]
 1145 00d6 0022     		movs	r2, #0
 1146 00d8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1147              	.L56:
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 1148              		.loc 1 1159 12 is_stmt 1
 1149 00dc FB68     		ldr	r3, [r7, #12]
 1150 00de B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 1151 00e2 7B82     		strh	r3, [r7, #18]	@ movhi
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1152              		.loc 1 1162 21
 1153 00e4 FB68     		ldr	r3, [r7, #12]
 1154 00e6 9B68     		ldr	r3, [r3, #8]
 1155              		.loc 1 1162 8
 1156 00e8 B3F5805F 		cmp	r3, #4096
 1157 00ec 08D1     		bne	.L63
 1158              		.loc 1 1162 71 discriminator 1
 1159 00ee FB68     		ldr	r3, [r7, #12]
 1160 00f0 1B69     		ldr	r3, [r3, #16]
 1161              		.loc 1 1162 56 discriminator 1
 1162 00f2 002B     		cmp	r3, #0
 1163 00f4 04D1     		bne	.L63
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = NULL;
 1164              		.loc 1 1164 19
 1165 00f6 0023     		movs	r3, #0
 1166 00f8 FB61     		str	r3, [r7, #28]
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1167              		.loc 1 1165 19
 1168 00fa BB68     		ldr	r3, [r7, #8]
 1169 00fc BB61     		str	r3, [r7, #24]
 1170 00fe 03E0     		b	.L64
 1171              	.L63:
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = pData;
 1172              		.loc 1 1169 19
 1173 0100 BB68     		ldr	r3, [r7, #8]
 1174 0102 FB61     		str	r3, [r7, #28]
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = NULL;
 1175              		.loc 1 1170 19
 1176 0104 0023     		movs	r3, #0
 1177 0106 BB61     		str	r3, [r7, #24]
 1178              	.L64:
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* as long as data have to be received */
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
ARM GAS  /tmp/ccFXX6mG.s 			page 42


 1179              		.loc 1 1174 11
 1180 0108 33E0     		b	.L65
 1181              	.L69:
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1182              		.loc 1 1176 11
 1183 010a 3B68     		ldr	r3, [r7]
 1184 010c 0093     		str	r3, [sp]
 1185 010e 7B69     		ldr	r3, [r7, #20]
 1186 0110 0022     		movs	r2, #0
 1187 0112 2021     		movs	r1, #32
 1188 0114 F868     		ldr	r0, [r7, #12]
 1189 0116 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1190 011a 0346     		mov	r3, r0
 1191              		.loc 1 1176 10
 1192 011c 002B     		cmp	r3, #0
 1193 011e 01D0     		beq	.L66
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
 1194              		.loc 1 1178 16
 1195 0120 0323     		movs	r3, #3
 1196 0122 36E0     		b	.L51
 1197              	.L66:
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (pdata8bits == NULL)
 1198              		.loc 1 1180 10
 1199 0124 FB69     		ldr	r3, [r7, #28]
 1200 0126 002B     		cmp	r3, #0
 1201 0128 0CD1     		bne	.L67
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 1202              		.loc 1 1182 40
 1203 012a FB68     		ldr	r3, [r7, #12]
 1204 012c 1B68     		ldr	r3, [r3]
 1205              		.loc 1 1182 50
 1206 012e 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 1207 0130 9AB2     		uxth	r2, r3
 1208              		.loc 1 1182 24
 1209 0132 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1210 0134 1340     		ands	r3, r3, r2
 1211 0136 9AB2     		uxth	r2, r3
 1212              		.loc 1 1182 22
 1213 0138 BB69     		ldr	r3, [r7, #24]
 1214 013a 1A80     		strh	r2, [r3]	@ movhi
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata16bits++;
 1215              		.loc 1 1183 20
 1216 013c BB69     		ldr	r3, [r7, #24]
 1217 013e 0233     		adds	r3, r3, #2
 1218 0140 BB61     		str	r3, [r7, #24]
 1219 0142 0DE0     		b	.L68
 1220              	.L67:
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1221              		.loc 1 1187 38
 1222 0144 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccFXX6mG.s 			page 43


 1223 0146 1B68     		ldr	r3, [r3]
 1224              		.loc 1 1187 48
 1225 0148 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 1226 014a 9BB2     		uxth	r3, r3
 1227              		.loc 1 1187 23
 1228 014c DAB2     		uxtb	r2, r3
 1229              		.loc 1 1187 56
 1230 014e 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1231 0150 DBB2     		uxtb	r3, r3
 1232              		.loc 1 1187 23
 1233 0152 1340     		ands	r3, r3, r2
 1234 0154 DAB2     		uxtb	r2, r3
 1235              		.loc 1 1187 21
 1236 0156 FB69     		ldr	r3, [r7, #28]
 1237 0158 1A70     		strb	r2, [r3]
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata8bits++;
 1238              		.loc 1 1188 19
 1239 015a FB69     		ldr	r3, [r7, #28]
 1240 015c 0133     		adds	r3, r3, #1
 1241 015e FB61     		str	r3, [r7, #28]
 1242              	.L68:
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount--;
 1243              		.loc 1 1190 12
 1244 0160 FB68     		ldr	r3, [r7, #12]
 1245 0162 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1246 0166 9BB2     		uxth	r3, r3
 1247              		.loc 1 1190 25
 1248 0168 013B     		subs	r3, r3, #1
 1249 016a 9AB2     		uxth	r2, r3
 1250 016c FB68     		ldr	r3, [r7, #12]
 1251 016e A3F85A20 		strh	r2, [r3, #90]	@ movhi
 1252              	.L65:
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1253              		.loc 1 1174 17
 1254 0172 FB68     		ldr	r3, [r7, #12]
 1255 0174 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1256 0178 9BB2     		uxth	r3, r3
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1257              		.loc 1 1174 11
 1258 017a 002B     		cmp	r3, #0
 1259 017c C5D1     		bne	.L69
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1260              		.loc 1 1194 20
 1261 017e FB68     		ldr	r3, [r7, #12]
 1262 0180 2022     		movs	r2, #32
 1263 0182 9A67     		str	r2, [r3, #120]
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1264              		.loc 1 1196 5
 1265 0184 FB68     		ldr	r3, [r7, #12]
 1266 0186 0022     		movs	r2, #0
 1267 0188 83F87020 		strb	r2, [r3, #112]
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccFXX6mG.s 			page 44


1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1268              		.loc 1 1198 12
 1269 018c 0023     		movs	r3, #0
 1270 018e 00E0     		b	.L51
 1271              	.L48:
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1272              		.loc 1 1202 12
 1273 0190 0223     		movs	r3, #2
 1274              	.L51:
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1275              		.loc 1 1204 1
 1276 0192 1846     		mov	r0, r3
 1277 0194 2037     		adds	r7, r7, #32
 1278              	.LCFI45:
 1279              		.cfi_def_cfa_offset 8
 1280 0196 BD46     		mov	sp, r7
 1281              	.LCFI46:
 1282              		.cfi_def_cfa_register 13
 1283              		@ sp needed
 1284 0198 80BD     		pop	{r7, pc}
 1285              		.cfi_endproc
 1286              	.LFE138:
 1288              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1289              		.align	1
 1290              		.global	HAL_UART_Transmit_IT
 1291              		.syntax unified
 1292              		.thumb
 1293              		.thumb_func
 1294              		.fpu fpv4-sp-d16
 1296              	HAL_UART_Transmit_IT:
 1297              	.LFB139:
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be sent.
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1298              		.loc 1 1214 1
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 16
 1301              		@ frame_needed = 1, uses_anonymous_args = 0
 1302              		@ link register save eliminated.
 1303 0000 80B4     		push	{r7}
 1304              	.LCFI47:
 1305              		.cfi_def_cfa_offset 4
 1306              		.cfi_offset 7, -4
 1307 0002 85B0     		sub	sp, sp, #20
 1308              	.LCFI48:
 1309              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccFXX6mG.s 			page 45


 1310 0004 00AF     		add	r7, sp, #0
 1311              	.LCFI49:
 1312              		.cfi_def_cfa_register 7
 1313 0006 F860     		str	r0, [r7, #12]
 1314 0008 B960     		str	r1, [r7, #8]
 1315 000a 1346     		mov	r3, r2
 1316 000c FB80     		strh	r3, [r7, #6]	@ movhi
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1317              		.loc 1 1216 12
 1318 000e FB68     		ldr	r3, [r7, #12]
 1319 0010 5B6F     		ldr	r3, [r3, #116]
 1320              		.loc 1 1216 6
 1321 0012 202B     		cmp	r3, #32
 1322 0014 44D1     		bne	.L71
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1323              		.loc 1 1218 8
 1324 0016 BB68     		ldr	r3, [r7, #8]
 1325 0018 002B     		cmp	r3, #0
 1326 001a 02D0     		beq	.L72
 1327              		.loc 1 1218 25 discriminator 1
 1328 001c FB88     		ldrh	r3, [r7, #6]
 1329 001e 002B     		cmp	r3, #0
 1330 0020 01D1     		bne	.L73
 1331              	.L72:
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1332              		.loc 1 1220 14
 1333 0022 0123     		movs	r3, #1
 1334 0024 3DE0     		b	.L74
 1335              	.L73:
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1336              		.loc 1 1223 5
 1337 0026 FB68     		ldr	r3, [r7, #12]
 1338 0028 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1339 002c 012B     		cmp	r3, #1
 1340 002e 01D1     		bne	.L75
 1341              		.loc 1 1223 5 is_stmt 0 discriminator 1
 1342 0030 0223     		movs	r3, #2
 1343 0032 36E0     		b	.L74
 1344              	.L75:
 1345              		.loc 1 1223 5 discriminator 2
 1346 0034 FB68     		ldr	r3, [r7, #12]
 1347 0036 0122     		movs	r2, #1
 1348 0038 83F87020 		strb	r2, [r3, #112]
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1349              		.loc 1 1225 24 is_stmt 1 discriminator 2
 1350 003c FB68     		ldr	r3, [r7, #12]
 1351 003e BA68     		ldr	r2, [r7, #8]
 1352 0040 DA64     		str	r2, [r3, #76]
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1353              		.loc 1 1226 24 discriminator 2
 1354 0042 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccFXX6mG.s 			page 46


 1355 0044 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1356 0046 A3F85020 		strh	r2, [r3, #80]	@ movhi
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1357              		.loc 1 1227 24 discriminator 2
 1358 004a FB68     		ldr	r3, [r7, #12]
 1359 004c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1360 004e A3F85220 		strh	r2, [r3, #82]	@ movhi
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
 1361              		.loc 1 1228 24 discriminator 2
 1362 0052 FB68     		ldr	r3, [r7, #12]
 1363 0054 0022     		movs	r2, #0
 1364 0056 5A66     		str	r2, [r3, #100]
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1365              		.loc 1 1230 22 discriminator 2
 1366 0058 FB68     		ldr	r3, [r7, #12]
 1367 005a 0022     		movs	r2, #0
 1368 005c DA67     		str	r2, [r3, #124]
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1369              		.loc 1 1231 19 discriminator 2
 1370 005e FB68     		ldr	r3, [r7, #12]
 1371 0060 2122     		movs	r2, #33
 1372 0062 5A67     		str	r2, [r3, #116]
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccFXX6mG.s 			page 47


1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the Tx ISR function pointer according to the data word length */
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1373              		.loc 1 1271 21 discriminator 2
 1374 0064 FB68     		ldr	r3, [r7, #12]
 1375 0066 9B68     		ldr	r3, [r3, #8]
 1376              		.loc 1 1271 8 discriminator 2
 1377 0068 B3F5805F 		cmp	r3, #4096
 1378 006c 07D1     		bne	.L76
 1379              		.loc 1 1271 71 discriminator 1
 1380 006e FB68     		ldr	r3, [r7, #12]
 1381 0070 1B69     		ldr	r3, [r3, #16]
 1382              		.loc 1 1271 56 discriminator 1
 1383 0072 002B     		cmp	r3, #0
 1384 0074 03D1     		bne	.L76
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = UART_TxISR_16BIT;
 1385              		.loc 1 1273 20
 1386 0076 FB68     		ldr	r3, [r7, #12]
 1387 0078 0D4A     		ldr	r2, .L78
 1388 007a 5A66     		str	r2, [r3, #100]
 1389 007c 02E0     		b	.L77
 1390              	.L76:
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = UART_TxISR_8BIT;
 1391              		.loc 1 1277 20
 1392 007e FB68     		ldr	r3, [r7, #12]
 1393 0080 0C4A     		ldr	r2, .L78+4
 1394 0082 5A66     		str	r2, [r3, #100]
 1395              	.L77:
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1396              		.loc 1 1280 5
 1397 0084 FB68     		ldr	r3, [r7, #12]
 1398 0086 0022     		movs	r2, #0
 1399 0088 83F87020 		strb	r2, [r3, #112]
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the Transmit Data Register Empty interrupt */
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 1400              		.loc 1 1283 5
 1401 008c FB68     		ldr	r3, [r7, #12]
 1402 008e 1B68     		ldr	r3, [r3]
 1403 0090 1A68     		ldr	r2, [r3]
 1404 0092 FB68     		ldr	r3, [r7, #12]
 1405 0094 1B68     		ldr	r3, [r3]
 1406 0096 42F08002 		orr	r2, r2, #128
 1407 009a 1A60     		str	r2, [r3]
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1408              		.loc 1 1286 12
ARM GAS  /tmp/ccFXX6mG.s 			page 48


 1409 009c 0023     		movs	r3, #0
 1410 009e 00E0     		b	.L74
 1411              	.L71:
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1412              		.loc 1 1290 12
 1413 00a0 0223     		movs	r3, #2
 1414              	.L74:
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1415              		.loc 1 1292 1
 1416 00a2 1846     		mov	r0, r3
 1417 00a4 1437     		adds	r7, r7, #20
 1418              	.LCFI50:
 1419              		.cfi_def_cfa_offset 4
 1420 00a6 BD46     		mov	sp, r7
 1421              	.LCFI51:
 1422              		.cfi_def_cfa_register 13
 1423              		@ sp needed
 1424 00a8 5DF8047B 		ldr	r7, [sp], #4
 1425              	.LCFI52:
 1426              		.cfi_restore 7
 1427              		.cfi_def_cfa_offset 0
 1428 00ac 7047     		bx	lr
 1429              	.L79:
 1430 00ae 00BF     		.align	2
 1431              	.L78:
 1432 00b0 00000000 		.word	UART_TxISR_16BIT
 1433 00b4 00000000 		.word	UART_TxISR_8BIT
 1434              		.cfi_endproc
 1435              	.LFE139:
 1437              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1438              		.align	1
 1439              		.global	HAL_UART_Receive_IT
 1440              		.syntax unified
 1441              		.thumb
 1442              		.thumb_func
 1443              		.fpu fpv4-sp-d16
 1445              	HAL_UART_Receive_IT:
 1446              	.LFB140:
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be received.
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1447              		.loc 1 1302 1
 1448              		.cfi_startproc
 1449              		@ args = 0, pretend = 0, frame = 16
 1450              		@ frame_needed = 1, uses_anonymous_args = 0
 1451              		@ link register save eliminated.
ARM GAS  /tmp/ccFXX6mG.s 			page 49


 1452 0000 80B4     		push	{r7}
 1453              	.LCFI53:
 1454              		.cfi_def_cfa_offset 4
 1455              		.cfi_offset 7, -4
 1456 0002 85B0     		sub	sp, sp, #20
 1457              	.LCFI54:
 1458              		.cfi_def_cfa_offset 24
 1459 0004 00AF     		add	r7, sp, #0
 1460              	.LCFI55:
 1461              		.cfi_def_cfa_register 7
 1462 0006 F860     		str	r0, [r7, #12]
 1463 0008 B960     		str	r1, [r7, #8]
 1464 000a 1346     		mov	r3, r2
 1465 000c FB80     		strh	r3, [r7, #6]	@ movhi
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1466              		.loc 1 1304 12
 1467 000e FB68     		ldr	r3, [r7, #12]
 1468 0010 9B6F     		ldr	r3, [r3, #120]
 1469              		.loc 1 1304 6
 1470 0012 202B     		cmp	r3, #32
 1471 0014 40F08A80 		bne	.L81
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1472              		.loc 1 1306 8
 1473 0018 BB68     		ldr	r3, [r7, #8]
 1474 001a 002B     		cmp	r3, #0
 1475 001c 02D0     		beq	.L82
 1476              		.loc 1 1306 25 discriminator 1
 1477 001e FB88     		ldrh	r3, [r7, #6]
 1478 0020 002B     		cmp	r3, #0
 1479 0022 01D1     		bne	.L83
 1480              	.L82:
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1481              		.loc 1 1308 14
 1482 0024 0123     		movs	r3, #1
 1483 0026 82E0     		b	.L84
 1484              	.L83:
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1485              		.loc 1 1311 5
 1486 0028 FB68     		ldr	r3, [r7, #12]
 1487 002a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1488 002e 012B     		cmp	r3, #1
 1489 0030 01D1     		bne	.L85
 1490              		.loc 1 1311 5 is_stmt 0 discriminator 1
 1491 0032 0223     		movs	r3, #2
 1492 0034 7BE0     		b	.L84
 1493              	.L85:
 1494              		.loc 1 1311 5 discriminator 2
 1495 0036 FB68     		ldr	r3, [r7, #12]
 1496 0038 0122     		movs	r2, #1
 1497 003a 83F87020 		strb	r2, [r3, #112]
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
ARM GAS  /tmp/ccFXX6mG.s 			page 50


 1498              		.loc 1 1313 24 is_stmt 1 discriminator 2
 1499 003e FB68     		ldr	r3, [r7, #12]
 1500 0040 BA68     		ldr	r2, [r7, #8]
 1501 0042 5A65     		str	r2, [r3, #84]
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 1502              		.loc 1 1314 24 discriminator 2
 1503 0044 FB68     		ldr	r3, [r7, #12]
 1504 0046 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1505 0048 A3F85820 		strh	r2, [r3, #88]	@ movhi
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1506              		.loc 1 1315 24 discriminator 2
 1507 004c FB68     		ldr	r3, [r7, #12]
 1508 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1509 0050 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR       = NULL;
 1510              		.loc 1 1316 24 discriminator 2
 1511 0054 FB68     		ldr	r3, [r7, #12]
 1512 0056 0022     		movs	r2, #0
 1513 0058 1A66     		str	r2, [r3, #96]
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1514              		.loc 1 1319 5 discriminator 2
 1515 005a FB68     		ldr	r3, [r7, #12]
 1516 005c 9B68     		ldr	r3, [r3, #8]
 1517 005e B3F5805F 		cmp	r3, #4096
 1518 0062 0ED1     		bne	.L86
 1519              		.loc 1 1319 5 is_stmt 0 discriminator 1
 1520 0064 FB68     		ldr	r3, [r7, #12]
 1521 0066 1B69     		ldr	r3, [r3, #16]
 1522 0068 002B     		cmp	r3, #0
 1523 006a 05D1     		bne	.L87
 1524              		.loc 1 1319 5 discriminator 3
 1525 006c FB68     		ldr	r3, [r7, #12]
 1526 006e 40F2FF12 		movw	r2, #511
 1527 0072 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1528 0076 2DE0     		b	.L89
 1529              	.L87:
 1530              		.loc 1 1319 5 discriminator 4
 1531 0078 FB68     		ldr	r3, [r7, #12]
 1532 007a FF22     		movs	r2, #255
 1533 007c A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1534 0080 28E0     		b	.L89
 1535              	.L86:
 1536              		.loc 1 1319 5 discriminator 2
 1537 0082 FB68     		ldr	r3, [r7, #12]
 1538 0084 9B68     		ldr	r3, [r3, #8]
 1539 0086 002B     		cmp	r3, #0
 1540 0088 0DD1     		bne	.L90
 1541              		.loc 1 1319 5 discriminator 5
 1542 008a FB68     		ldr	r3, [r7, #12]
 1543 008c 1B69     		ldr	r3, [r3, #16]
 1544 008e 002B     		cmp	r3, #0
 1545 0090 04D1     		bne	.L91
 1546              		.loc 1 1319 5 discriminator 7
 1547 0092 FB68     		ldr	r3, [r7, #12]
 1548 0094 FF22     		movs	r2, #255
ARM GAS  /tmp/ccFXX6mG.s 			page 51


 1549 0096 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1550 009a 1BE0     		b	.L89
 1551              	.L91:
 1552              		.loc 1 1319 5 discriminator 8
 1553 009c FB68     		ldr	r3, [r7, #12]
 1554 009e 7F22     		movs	r2, #127
 1555 00a0 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1556 00a4 16E0     		b	.L89
 1557              	.L90:
 1558              		.loc 1 1319 5 discriminator 6
 1559 00a6 FB68     		ldr	r3, [r7, #12]
 1560 00a8 9B68     		ldr	r3, [r3, #8]
 1561 00aa B3F1805F 		cmp	r3, #268435456
 1562 00ae 0DD1     		bne	.L93
 1563              		.loc 1 1319 5 discriminator 9
 1564 00b0 FB68     		ldr	r3, [r7, #12]
 1565 00b2 1B69     		ldr	r3, [r3, #16]
 1566 00b4 002B     		cmp	r3, #0
 1567 00b6 04D1     		bne	.L94
 1568              		.loc 1 1319 5 discriminator 11
 1569 00b8 FB68     		ldr	r3, [r7, #12]
 1570 00ba 7F22     		movs	r2, #127
 1571 00bc A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1572 00c0 08E0     		b	.L89
 1573              	.L94:
 1574              		.loc 1 1319 5 discriminator 12
 1575 00c2 FB68     		ldr	r3, [r7, #12]
 1576 00c4 3F22     		movs	r2, #63
 1577 00c6 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1578 00ca 03E0     		b	.L89
 1579              	.L93:
 1580              		.loc 1 1319 5 discriminator 10
 1581 00cc FB68     		ldr	r3, [r7, #12]
 1582 00ce 0022     		movs	r2, #0
 1583 00d0 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1584              	.L89:
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1585              		.loc 1 1321 22 is_stmt 1
 1586 00d4 FB68     		ldr	r3, [r7, #12]
 1587 00d6 0022     		movs	r2, #0
 1588 00d8 DA67     		str	r2, [r3, #124]
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1589              		.loc 1 1322 20
 1590 00da FB68     		ldr	r3, [r7, #12]
 1591 00dc 2222     		movs	r2, #34
 1592 00de 9A67     		str	r2, [r3, #120]
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1593              		.loc 1 1325 5
 1594 00e0 FB68     		ldr	r3, [r7, #12]
 1595 00e2 1B68     		ldr	r3, [r3]
 1596 00e4 9A68     		ldr	r2, [r3, #8]
 1597 00e6 FB68     		ldr	r3, [r7, #12]
 1598 00e8 1B68     		ldr	r3, [r3]
 1599 00ea 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/ccFXX6mG.s 			page 52


 1600 00ee 9A60     		str	r2, [r3, #8]
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Configure Rx interrupt processing*/
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT_FIFOEN;
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT_FIFOEN;
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT;
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT;
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1601              		.loc 1 1366 21
 1602 00f0 FB68     		ldr	r3, [r7, #12]
 1603 00f2 9B68     		ldr	r3, [r3, #8]
 1604              		.loc 1 1366 8
 1605 00f4 B3F5805F 		cmp	r3, #4096
 1606 00f8 07D1     		bne	.L96
 1607              		.loc 1 1366 71 discriminator 1
 1608 00fa FB68     		ldr	r3, [r7, #12]
 1609 00fc 1B69     		ldr	r3, [r3, #16]
 1610              		.loc 1 1366 56 discriminator 1
 1611 00fe 002B     		cmp	r3, #0
 1612 0100 03D1     		bne	.L96
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
 1613              		.loc 1 1368 20
ARM GAS  /tmp/ccFXX6mG.s 			page 53


 1614 0102 FB68     		ldr	r3, [r7, #12]
 1615 0104 0D4A     		ldr	r2, .L98
 1616 0106 1A66     		str	r2, [r3, #96]
 1617 0108 02E0     		b	.L97
 1618              	.L96:
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
 1619              		.loc 1 1372 20
 1620 010a FB68     		ldr	r3, [r7, #12]
 1621 010c 0C4A     		ldr	r2, .L98+4
 1622 010e 1A66     		str	r2, [r3, #96]
 1623              	.L97:
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1624              		.loc 1 1375 5
 1625 0110 FB68     		ldr	r3, [r7, #12]
 1626 0112 0022     		movs	r2, #0
 1627 0114 83F87020 		strb	r2, [r3, #112]
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 1628              		.loc 1 1378 5
 1629 0118 FB68     		ldr	r3, [r7, #12]
 1630 011a 1B68     		ldr	r3, [r3]
 1631 011c 1A68     		ldr	r2, [r3]
 1632 011e FB68     		ldr	r3, [r7, #12]
 1633 0120 1B68     		ldr	r3, [r3]
 1634 0122 42F49072 		orr	r2, r2, #288
 1635 0126 1A60     		str	r2, [r3]
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1636              		.loc 1 1381 12
 1637 0128 0023     		movs	r3, #0
 1638 012a 00E0     		b	.L84
 1639              	.L81:
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1640              		.loc 1 1385 12
 1641 012c 0223     		movs	r3, #2
 1642              	.L84:
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1643              		.loc 1 1387 1
 1644 012e 1846     		mov	r0, r3
 1645 0130 1437     		adds	r7, r7, #20
 1646              	.LCFI56:
 1647              		.cfi_def_cfa_offset 4
 1648 0132 BD46     		mov	sp, r7
 1649              	.LCFI57:
 1650              		.cfi_def_cfa_register 13
 1651              		@ sp needed
ARM GAS  /tmp/ccFXX6mG.s 			page 54


 1652 0134 5DF8047B 		ldr	r7, [sp], #4
 1653              	.LCFI58:
 1654              		.cfi_restore 7
 1655              		.cfi_def_cfa_offset 0
 1656 0138 7047     		bx	lr
 1657              	.L99:
 1658 013a 00BF     		.align	2
 1659              	.L98:
 1660 013c 00000000 		.word	UART_RxISR_16BIT
 1661 0140 00000000 		.word	UART_RxISR_8BIT
 1662              		.cfi_endproc
 1663              	.LFE140:
 1665              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1666              		.align	1
 1667              		.global	HAL_UART_Transmit_DMA
 1668              		.syntax unified
 1669              		.thumb
 1670              		.thumb_func
 1671              		.fpu fpv4-sp-d16
 1673              	HAL_UART_Transmit_DMA:
 1674              	.LFB141:
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be sent.
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1675              		.loc 1 1397 1
 1676              		.cfi_startproc
 1677              		@ args = 0, pretend = 0, frame = 16
 1678              		@ frame_needed = 1, uses_anonymous_args = 0
 1679 0000 80B5     		push	{r7, lr}
 1680              	.LCFI59:
 1681              		.cfi_def_cfa_offset 8
 1682              		.cfi_offset 7, -8
 1683              		.cfi_offset 14, -4
 1684 0002 84B0     		sub	sp, sp, #16
 1685              	.LCFI60:
 1686              		.cfi_def_cfa_offset 24
 1687 0004 00AF     		add	r7, sp, #0
 1688              	.LCFI61:
 1689              		.cfi_def_cfa_register 7
 1690 0006 F860     		str	r0, [r7, #12]
 1691 0008 B960     		str	r1, [r7, #8]
 1692 000a 1346     		mov	r3, r2
 1693 000c FB80     		strh	r3, [r7, #6]	@ movhi
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1694              		.loc 1 1399 12
 1695 000e FB68     		ldr	r3, [r7, #12]
 1696 0010 5B6F     		ldr	r3, [r3, #116]
 1697              		.loc 1 1399 6
 1698 0012 202B     		cmp	r3, #32
ARM GAS  /tmp/ccFXX6mG.s 			page 55


 1699 0014 64D1     		bne	.L101
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1700              		.loc 1 1401 8
 1701 0016 BB68     		ldr	r3, [r7, #8]
 1702 0018 002B     		cmp	r3, #0
 1703 001a 02D0     		beq	.L102
 1704              		.loc 1 1401 25 discriminator 1
 1705 001c FB88     		ldrh	r3, [r7, #6]
 1706 001e 002B     		cmp	r3, #0
 1707 0020 01D1     		bne	.L103
 1708              	.L102:
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1709              		.loc 1 1403 14
 1710 0022 0123     		movs	r3, #1
 1711 0024 5DE0     		b	.L104
 1712              	.L103:
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1713              		.loc 1 1406 5
 1714 0026 FB68     		ldr	r3, [r7, #12]
 1715 0028 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1716 002c 012B     		cmp	r3, #1
 1717 002e 01D1     		bne	.L105
 1718              		.loc 1 1406 5 is_stmt 0 discriminator 1
 1719 0030 0223     		movs	r3, #2
 1720 0032 56E0     		b	.L104
 1721              	.L105:
 1722              		.loc 1 1406 5 discriminator 2
 1723 0034 FB68     		ldr	r3, [r7, #12]
 1724 0036 0122     		movs	r2, #1
 1725 0038 83F87020 		strb	r2, [r3, #112]
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1726              		.loc 1 1408 24 is_stmt 1 discriminator 2
 1727 003c FB68     		ldr	r3, [r7, #12]
 1728 003e BA68     		ldr	r2, [r7, #8]
 1729 0040 DA64     		str	r2, [r3, #76]
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1730              		.loc 1 1409 24 discriminator 2
 1731 0042 FB68     		ldr	r3, [r7, #12]
 1732 0044 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1733 0046 A3F85020 		strh	r2, [r3, #80]	@ movhi
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1734              		.loc 1 1410 24 discriminator 2
 1735 004a FB68     		ldr	r3, [r7, #12]
 1736 004c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1737 004e A3F85220 		strh	r2, [r3, #82]	@ movhi
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1738              		.loc 1 1412 22 discriminator 2
 1739 0052 FB68     		ldr	r3, [r7, #12]
 1740 0054 0022     		movs	r2, #0
 1741 0056 DA67     		str	r2, [r3, #124]
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
ARM GAS  /tmp/ccFXX6mG.s 			page 56


 1742              		.loc 1 1413 19 discriminator 2
 1743 0058 FB68     		ldr	r3, [r7, #12]
 1744 005a 2122     		movs	r2, #33
 1745 005c 5A67     		str	r2, [r3, #116]
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 1746              		.loc 1 1415 14 discriminator 2
 1747 005e FB68     		ldr	r3, [r7, #12]
 1748 0060 9B6E     		ldr	r3, [r3, #104]
 1749              		.loc 1 1415 8 discriminator 2
 1750 0062 002B     		cmp	r3, #0
 1751 0064 2AD0     		beq	.L106
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1752              		.loc 1 1418 12
 1753 0066 FB68     		ldr	r3, [r7, #12]
 1754 0068 9B6E     		ldr	r3, [r3, #104]
 1755              		.loc 1 1418 39
 1756 006a 204A     		ldr	r2, .L107
 1757 006c DA62     		str	r2, [r3, #44]
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1758              		.loc 1 1421 12
 1759 006e FB68     		ldr	r3, [r7, #12]
 1760 0070 9B6E     		ldr	r3, [r3, #104]
 1761              		.loc 1 1421 43
 1762 0072 1F4A     		ldr	r2, .L107+4
 1763 0074 1A63     		str	r2, [r3, #48]
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA error callback */
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
 1764              		.loc 1 1424 12
 1765 0076 FB68     		ldr	r3, [r7, #12]
 1766 0078 9B6E     		ldr	r3, [r3, #104]
 1767              		.loc 1 1424 40
 1768 007a 1E4A     		ldr	r2, .L107+8
 1769 007c 5A63     		str	r2, [r3, #52]
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA abort callback */
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 1770              		.loc 1 1427 12
 1771 007e FB68     		ldr	r3, [r7, #12]
 1772 0080 9B6E     		ldr	r3, [r3, #104]
 1773              		.loc 1 1427 40
 1774 0082 0022     		movs	r2, #0
 1775 0084 9A63     		str	r2, [r3, #56]
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
 1776              		.loc 1 1430 11
 1777 0086 FB68     		ldr	r3, [r7, #12]
 1778 0088 986E     		ldr	r0, [r3, #104]
 1779              		.loc 1 1430 58
 1780 008a FB68     		ldr	r3, [r7, #12]
 1781 008c DB6C     		ldr	r3, [r3, #76]
ARM GAS  /tmp/ccFXX6mG.s 			page 57


 1782              		.loc 1 1430 11
 1783 008e 1946     		mov	r1, r3
 1784              		.loc 1 1430 88
 1785 0090 FB68     		ldr	r3, [r7, #12]
 1786 0092 1B68     		ldr	r3, [r3]
 1787              		.loc 1 1430 82
 1788 0094 2833     		adds	r3, r3, #40
 1789              		.loc 1 1430 11
 1790 0096 1A46     		mov	r2, r3
 1791 0098 FB88     		ldrh	r3, [r7, #6]
 1792 009a FFF7FEFF 		bl	HAL_DMA_Start_IT
 1793 009e 0346     		mov	r3, r0
 1794              		.loc 1 1430 10
 1795 00a0 002B     		cmp	r3, #0
 1796 00a2 0BD0     		beq	.L106
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Set error code to DMA */
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 1797              		.loc 1 1433 26
 1798 00a4 FB68     		ldr	r3, [r7, #12]
 1799 00a6 1022     		movs	r2, #16
 1800 00a8 DA67     		str	r2, [r3, #124]
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 1801              		.loc 1 1435 9
 1802 00aa FB68     		ldr	r3, [r7, #12]
 1803 00ac 0022     		movs	r2, #0
 1804 00ae 83F87020 		strb	r2, [r3, #112]
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 1805              		.loc 1 1438 23
 1806 00b2 FB68     		ldr	r3, [r7, #12]
 1807 00b4 2022     		movs	r2, #32
 1808 00b6 5A67     		str	r2, [r3, #116]
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_ERROR;
 1809              		.loc 1 1440 16
 1810 00b8 0123     		movs	r3, #1
 1811 00ba 12E0     		b	.L104
 1812              	.L106:
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 1813              		.loc 1 1444 5
 1814 00bc FB68     		ldr	r3, [r7, #12]
 1815 00be 1B68     		ldr	r3, [r3]
 1816 00c0 4022     		movs	r2, #64
 1817 00c2 1A62     		str	r2, [r3, #32]
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1818              		.loc 1 1446 5
 1819 00c4 FB68     		ldr	r3, [r7, #12]
 1820 00c6 0022     		movs	r2, #0
 1821 00c8 83F87020 		strb	r2, [r3, #112]
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccFXX6mG.s 			page 58


1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1822              		.loc 1 1450 5
 1823 00cc FB68     		ldr	r3, [r7, #12]
 1824 00ce 1B68     		ldr	r3, [r3]
 1825 00d0 9A68     		ldr	r2, [r3, #8]
 1826 00d2 FB68     		ldr	r3, [r7, #12]
 1827 00d4 1B68     		ldr	r3, [r3]
 1828 00d6 42F08002 		orr	r2, r2, #128
 1829 00da 9A60     		str	r2, [r3, #8]
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1830              		.loc 1 1452 12
 1831 00dc 0023     		movs	r3, #0
 1832 00de 00E0     		b	.L104
 1833              	.L101:
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1834              		.loc 1 1456 12
 1835 00e0 0223     		movs	r3, #2
 1836              	.L104:
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1837              		.loc 1 1458 1
 1838 00e2 1846     		mov	r0, r3
 1839 00e4 1037     		adds	r7, r7, #16
 1840              	.LCFI62:
 1841              		.cfi_def_cfa_offset 8
 1842 00e6 BD46     		mov	sp, r7
 1843              	.LCFI63:
 1844              		.cfi_def_cfa_register 13
 1845              		@ sp needed
 1846 00e8 80BD     		pop	{r7, pc}
 1847              	.L108:
 1848 00ea 00BF     		.align	2
 1849              	.L107:
 1850 00ec 00000000 		.word	UART_DMATransmitCplt
 1851 00f0 00000000 		.word	UART_DMATxHalfCplt
 1852 00f4 00000000 		.word	UART_DMAError
 1853              		.cfi_endproc
 1854              	.LFE141:
 1856              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1857              		.align	1
 1858              		.global	HAL_UART_Receive_DMA
 1859              		.syntax unified
 1860              		.thumb
 1861              		.thumb_func
 1862              		.fpu fpv4-sp-d16
 1864              	HAL_UART_Receive_DMA:
 1865              	.LFB142:
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
ARM GAS  /tmp/ccFXX6mG.s 			page 59


1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the parity bit (MSB position).
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be received.
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1866              		.loc 1 1470 1
 1867              		.cfi_startproc
 1868              		@ args = 0, pretend = 0, frame = 16
 1869              		@ frame_needed = 1, uses_anonymous_args = 0
 1870 0000 80B5     		push	{r7, lr}
 1871              	.LCFI64:
 1872              		.cfi_def_cfa_offset 8
 1873              		.cfi_offset 7, -8
 1874              		.cfi_offset 14, -4
 1875 0002 84B0     		sub	sp, sp, #16
 1876              	.LCFI65:
 1877              		.cfi_def_cfa_offset 24
 1878 0004 00AF     		add	r7, sp, #0
 1879              	.LCFI66:
 1880              		.cfi_def_cfa_register 7
 1881 0006 F860     		str	r0, [r7, #12]
 1882 0008 B960     		str	r1, [r7, #8]
 1883 000a 1346     		mov	r3, r2
 1884 000c FB80     		strh	r3, [r7, #6]	@ movhi
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1885              		.loc 1 1472 12
 1886 000e FB68     		ldr	r3, [r7, #12]
 1887 0010 9B6F     		ldr	r3, [r3, #120]
 1888              		.loc 1 1472 6
 1889 0012 202B     		cmp	r3, #32
 1890 0014 6CD1     		bne	.L110
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1891              		.loc 1 1474 8
 1892 0016 BB68     		ldr	r3, [r7, #8]
 1893 0018 002B     		cmp	r3, #0
 1894 001a 02D0     		beq	.L111
 1895              		.loc 1 1474 25 discriminator 1
 1896 001c FB88     		ldrh	r3, [r7, #6]
 1897 001e 002B     		cmp	r3, #0
 1898 0020 01D1     		bne	.L112
 1899              	.L111:
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1900              		.loc 1 1476 14
 1901 0022 0123     		movs	r3, #1
 1902 0024 65E0     		b	.L113
 1903              	.L112:
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1904              		.loc 1 1479 5
 1905 0026 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccFXX6mG.s 			page 60


 1906 0028 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1907 002c 012B     		cmp	r3, #1
 1908 002e 01D1     		bne	.L114
 1909              		.loc 1 1479 5 is_stmt 0 discriminator 1
 1910 0030 0223     		movs	r3, #2
 1911 0032 5EE0     		b	.L113
 1912              	.L114:
 1913              		.loc 1 1479 5 discriminator 2
 1914 0034 FB68     		ldr	r3, [r7, #12]
 1915 0036 0122     		movs	r2, #1
 1916 0038 83F87020 		strb	r2, [r3, #112]
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1917              		.loc 1 1481 23 is_stmt 1 discriminator 2
 1918 003c FB68     		ldr	r3, [r7, #12]
 1919 003e BA68     		ldr	r2, [r7, #8]
 1920 0040 5A65     		str	r2, [r3, #84]
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1921              		.loc 1 1482 23 discriminator 2
 1922 0042 FB68     		ldr	r3, [r7, #12]
 1923 0044 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1924 0046 A3F85820 		strh	r2, [r3, #88]	@ movhi
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1925              		.loc 1 1484 22 discriminator 2
 1926 004a FB68     		ldr	r3, [r7, #12]
 1927 004c 0022     		movs	r2, #0
 1928 004e DA67     		str	r2, [r3, #124]
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1929              		.loc 1 1485 20 discriminator 2
 1930 0050 FB68     		ldr	r3, [r7, #12]
 1931 0052 2222     		movs	r2, #34
 1932 0054 9A67     		str	r2, [r3, #120]
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 1933              		.loc 1 1487 14 discriminator 2
 1934 0056 FB68     		ldr	r3, [r7, #12]
 1935 0058 DB6E     		ldr	r3, [r3, #108]
 1936              		.loc 1 1487 8 discriminator 2
 1937 005a 002B     		cmp	r3, #0
 1938 005c 2AD0     		beq	.L115
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1939              		.loc 1 1490 12
 1940 005e FB68     		ldr	r3, [r7, #12]
 1941 0060 DB6E     		ldr	r3, [r3, #108]
 1942              		.loc 1 1490 39
 1943 0062 264A     		ldr	r2, .L116
 1944 0064 DA62     		str	r2, [r3, #44]
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1945              		.loc 1 1493 12
 1946 0066 FB68     		ldr	r3, [r7, #12]
 1947 0068 DB6E     		ldr	r3, [r3, #108]
 1948              		.loc 1 1493 43
ARM GAS  /tmp/ccFXX6mG.s 			page 61


 1949 006a 254A     		ldr	r2, .L116+4
 1950 006c 1A63     		str	r2, [r3, #48]
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA error callback */
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferErrorCallback = UART_DMAError;
 1951              		.loc 1 1496 12
 1952 006e FB68     		ldr	r3, [r7, #12]
 1953 0070 DB6E     		ldr	r3, [r3, #108]
 1954              		.loc 1 1496 40
 1955 0072 244A     		ldr	r2, .L116+8
 1956 0074 5A63     		str	r2, [r3, #52]
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA abort callback */
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 1957              		.loc 1 1499 12
 1958 0076 FB68     		ldr	r3, [r7, #12]
 1959 0078 DB6E     		ldr	r3, [r3, #108]
 1960              		.loc 1 1499 40
 1961 007a 0022     		movs	r2, #0
 1962 007c 9A63     		str	r2, [r3, #56]
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the DMA channel */
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuff
 1963              		.loc 1 1502 11
 1964 007e FB68     		ldr	r3, [r7, #12]
 1965 0080 D86E     		ldr	r0, [r3, #108]
 1966              		.loc 1 1502 59
 1967 0082 FB68     		ldr	r3, [r7, #12]
 1968 0084 1B68     		ldr	r3, [r3]
 1969              		.loc 1 1502 53
 1970 0086 2433     		adds	r3, r3, #36
 1971              		.loc 1 1502 11
 1972 0088 1946     		mov	r1, r3
 1973              		.loc 1 1502 91
 1974 008a FB68     		ldr	r3, [r7, #12]
 1975 008c 5B6D     		ldr	r3, [r3, #84]
 1976              		.loc 1 1502 11
 1977 008e 1A46     		mov	r2, r3
 1978 0090 FB88     		ldrh	r3, [r7, #6]
 1979 0092 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1980 0096 0346     		mov	r3, r0
 1981              		.loc 1 1502 10
 1982 0098 002B     		cmp	r3, #0
 1983 009a 0BD0     		beq	.L115
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Set error code to DMA */
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 1984              		.loc 1 1505 26
 1985 009c FB68     		ldr	r3, [r7, #12]
 1986 009e 1022     		movs	r2, #16
 1987 00a0 DA67     		str	r2, [r3, #124]
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 1988              		.loc 1 1507 9
 1989 00a2 FB68     		ldr	r3, [r7, #12]
 1990 00a4 0022     		movs	r2, #0
 1991 00a6 83F87020 		strb	r2, [r3, #112]
ARM GAS  /tmp/ccFXX6mG.s 			page 62


1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 1992              		.loc 1 1510 23
 1993 00aa FB68     		ldr	r3, [r7, #12]
 1994 00ac 2022     		movs	r2, #32
 1995 00ae 5A67     		str	r2, [r3, #116]
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_ERROR;
 1996              		.loc 1 1512 16
 1997 00b0 0123     		movs	r3, #1
 1998 00b2 1EE0     		b	.L113
 1999              	.L115:
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 2000              		.loc 1 1515 5
 2001 00b4 FB68     		ldr	r3, [r7, #12]
 2002 00b6 0022     		movs	r2, #0
 2003 00b8 83F87020 		strb	r2, [r3, #112]
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2004              		.loc 1 1518 5
 2005 00bc FB68     		ldr	r3, [r7, #12]
 2006 00be 1B68     		ldr	r3, [r3]
 2007 00c0 1A68     		ldr	r2, [r3]
 2008 00c2 FB68     		ldr	r3, [r7, #12]
 2009 00c4 1B68     		ldr	r3, [r3]
 2010 00c6 42F48072 		orr	r2, r2, #256
 2011 00ca 1A60     		str	r2, [r3]
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2012              		.loc 1 1521 5
 2013 00cc FB68     		ldr	r3, [r7, #12]
 2014 00ce 1B68     		ldr	r3, [r3]
 2015 00d0 9A68     		ldr	r2, [r3, #8]
 2016 00d2 FB68     		ldr	r3, [r7, #12]
 2017 00d4 1B68     		ldr	r3, [r3]
 2018 00d6 42F00102 		orr	r2, r2, #1
 2019 00da 9A60     		str	r2, [r3, #8]
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2020              		.loc 1 1525 5
 2021 00dc FB68     		ldr	r3, [r7, #12]
 2022 00de 1B68     		ldr	r3, [r3]
 2023 00e0 9A68     		ldr	r2, [r3, #8]
 2024 00e2 FB68     		ldr	r3, [r7, #12]
 2025 00e4 1B68     		ldr	r3, [r3]
 2026 00e6 42F04002 		orr	r2, r2, #64
 2027 00ea 9A60     		str	r2, [r3, #8]
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 2028              		.loc 1 1527 12
ARM GAS  /tmp/ccFXX6mG.s 			page 63


 2029 00ec 0023     		movs	r3, #0
 2030 00ee 00E0     		b	.L113
 2031              	.L110:
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 2032              		.loc 1 1531 12
 2033 00f0 0223     		movs	r3, #2
 2034              	.L113:
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2035              		.loc 1 1533 1
 2036 00f2 1846     		mov	r0, r3
 2037 00f4 1037     		adds	r7, r7, #16
 2038              	.LCFI67:
 2039              		.cfi_def_cfa_offset 8
 2040 00f6 BD46     		mov	sp, r7
 2041              	.LCFI68:
 2042              		.cfi_def_cfa_register 13
 2043              		@ sp needed
 2044 00f8 80BD     		pop	{r7, pc}
 2045              	.L117:
 2046 00fa 00BF     		.align	2
 2047              	.L116:
 2048 00fc 00000000 		.word	UART_DMAReceiveCplt
 2049 0100 00000000 		.word	UART_DMARxHalfCplt
 2050 0104 00000000 		.word	UART_DMAError
 2051              		.cfi_endproc
 2052              	.LFE142:
 2054              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 2055              		.align	1
 2056              		.global	HAL_UART_DMAPause
 2057              		.syntax unified
 2058              		.thumb
 2059              		.thumb_func
 2060              		.fpu fpv4-sp-d16
 2062              	HAL_UART_DMAPause:
 2063              	.LFB143:
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2064              		.loc 1 1541 1
 2065              		.cfi_startproc
 2066              		@ args = 0, pretend = 0, frame = 16
 2067              		@ frame_needed = 1, uses_anonymous_args = 0
 2068              		@ link register save eliminated.
 2069 0000 80B4     		push	{r7}
 2070              	.LCFI69:
 2071              		.cfi_def_cfa_offset 4
 2072              		.cfi_offset 7, -4
 2073 0002 85B0     		sub	sp, sp, #20
ARM GAS  /tmp/ccFXX6mG.s 			page 64


 2074              	.LCFI70:
 2075              		.cfi_def_cfa_offset 24
 2076 0004 00AF     		add	r7, sp, #0
 2077              	.LCFI71:
 2078              		.cfi_def_cfa_register 7
 2079 0006 7860     		str	r0, [r7, #4]
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2080              		.loc 1 1542 31
 2081 0008 7B68     		ldr	r3, [r7, #4]
 2082 000a 5B6F     		ldr	r3, [r3, #116]
 2083 000c FB60     		str	r3, [r7, #12]
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2084              		.loc 1 1543 31
 2085 000e 7B68     		ldr	r3, [r7, #4]
 2086 0010 9B6F     		ldr	r3, [r3, #120]
 2087 0012 BB60     		str	r3, [r7, #8]
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2088              		.loc 1 1545 3
 2089 0014 7B68     		ldr	r3, [r7, #4]
 2090 0016 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 2091 001a 012B     		cmp	r3, #1
 2092 001c 01D1     		bne	.L119
 2093              		.loc 1 1545 3 is_stmt 0 discriminator 1
 2094 001e 0223     		movs	r3, #2
 2095 0020 3CE0     		b	.L120
 2096              	.L119:
 2097              		.loc 1 1545 3 discriminator 2
 2098 0022 7B68     		ldr	r3, [r7, #4]
 2099 0024 0122     		movs	r2, #1
 2100 0026 83F87020 		strb	r2, [r3, #112]
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2101              		.loc 1 1547 8 is_stmt 1 discriminator 2
 2102 002a 7B68     		ldr	r3, [r7, #4]
 2103 002c 1B68     		ldr	r3, [r3]
 2104 002e 9B68     		ldr	r3, [r3, #8]
 2105 0030 03F08003 		and	r3, r3, #128
 2106              		.loc 1 1547 6 discriminator 2
 2107 0034 802B     		cmp	r3, #128
 2108 0036 0AD1     		bne	.L121
 2109              		.loc 1 1547 62 discriminator 1
 2110 0038 FB68     		ldr	r3, [r7, #12]
 2111 003a 212B     		cmp	r3, #33
 2112 003c 07D1     		bne	.L121
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2113              		.loc 1 1551 5
 2114 003e 7B68     		ldr	r3, [r7, #4]
 2115 0040 1B68     		ldr	r3, [r3]
 2116 0042 9A68     		ldr	r2, [r3, #8]
 2117 0044 7B68     		ldr	r3, [r7, #4]
 2118 0046 1B68     		ldr	r3, [r3]
 2119 0048 22F08002 		bic	r2, r2, #128
 2120 004c 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccFXX6mG.s 			page 65


 2121              	.L121:
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2122              		.loc 1 1553 8
 2123 004e 7B68     		ldr	r3, [r7, #4]
 2124 0050 1B68     		ldr	r3, [r3]
 2125 0052 9B68     		ldr	r3, [r3, #8]
 2126 0054 03F04003 		and	r3, r3, #64
 2127              		.loc 1 1553 6
 2128 0058 402B     		cmp	r3, #64
 2129 005a 1AD1     		bne	.L122
 2130              		.loc 1 1553 62 discriminator 1
 2131 005c BB68     		ldr	r3, [r7, #8]
 2132 005e 222B     		cmp	r3, #34
 2133 0060 17D1     		bne	.L122
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2134              		.loc 1 1557 5
 2135 0062 7B68     		ldr	r3, [r7, #4]
 2136 0064 1B68     		ldr	r3, [r3]
 2137 0066 1A68     		ldr	r2, [r3]
 2138 0068 7B68     		ldr	r3, [r7, #4]
 2139 006a 1B68     		ldr	r3, [r3]
 2140 006c 22F48072 		bic	r2, r2, #256
 2141 0070 1A60     		str	r2, [r3]
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2142              		.loc 1 1558 5
 2143 0072 7B68     		ldr	r3, [r7, #4]
 2144 0074 1B68     		ldr	r3, [r3]
 2145 0076 9A68     		ldr	r2, [r3, #8]
 2146 0078 7B68     		ldr	r3, [r7, #4]
 2147 007a 1B68     		ldr	r3, [r3]
 2148 007c 22F00102 		bic	r2, r2, #1
 2149 0080 9A60     		str	r2, [r3, #8]
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2150              		.loc 1 1561 5
 2151 0082 7B68     		ldr	r3, [r7, #4]
 2152 0084 1B68     		ldr	r3, [r3]
 2153 0086 9A68     		ldr	r2, [r3, #8]
 2154 0088 7B68     		ldr	r3, [r7, #4]
 2155 008a 1B68     		ldr	r3, [r3]
 2156 008c 22F04002 		bic	r2, r2, #64
 2157 0090 9A60     		str	r2, [r3, #8]
 2158              	.L122:
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2159              		.loc 1 1564 3
 2160 0092 7B68     		ldr	r3, [r7, #4]
 2161 0094 0022     		movs	r2, #0
 2162 0096 83F87020 		strb	r2, [r3, #112]
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  /tmp/ccFXX6mG.s 			page 66


 2163              		.loc 1 1566 10
 2164 009a 0023     		movs	r3, #0
 2165              	.L120:
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2166              		.loc 1 1567 1
 2167 009c 1846     		mov	r0, r3
 2168 009e 1437     		adds	r7, r7, #20
 2169              	.LCFI72:
 2170              		.cfi_def_cfa_offset 4
 2171 00a0 BD46     		mov	sp, r7
 2172              	.LCFI73:
 2173              		.cfi_def_cfa_register 13
 2174              		@ sp needed
 2175 00a2 5DF8047B 		ldr	r7, [sp], #4
 2176              	.LCFI74:
 2177              		.cfi_restore 7
 2178              		.cfi_def_cfa_offset 0
 2179 00a6 7047     		bx	lr
 2180              		.cfi_endproc
 2181              	.LFE143:
 2183              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2184              		.align	1
 2185              		.global	HAL_UART_DMAResume
 2186              		.syntax unified
 2187              		.thumb
 2188              		.thumb_func
 2189              		.fpu fpv4-sp-d16
 2191              	HAL_UART_DMAResume:
 2192              	.LFB144:
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2193              		.loc 1 1575 1
 2194              		.cfi_startproc
 2195              		@ args = 0, pretend = 0, frame = 8
 2196              		@ frame_needed = 1, uses_anonymous_args = 0
 2197              		@ link register save eliminated.
 2198 0000 80B4     		push	{r7}
 2199              	.LCFI75:
 2200              		.cfi_def_cfa_offset 4
 2201              		.cfi_offset 7, -4
 2202 0002 83B0     		sub	sp, sp, #12
 2203              	.LCFI76:
 2204              		.cfi_def_cfa_offset 16
 2205 0004 00AF     		add	r7, sp, #0
 2206              	.LCFI77:
 2207              		.cfi_def_cfa_register 7
 2208 0006 7860     		str	r0, [r7, #4]
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2209              		.loc 1 1576 3
 2210 0008 7B68     		ldr	r3, [r7, #4]
 2211 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
ARM GAS  /tmp/ccFXX6mG.s 			page 67


 2212 000e 012B     		cmp	r3, #1
 2213 0010 01D1     		bne	.L124
 2214              		.loc 1 1576 3 is_stmt 0 discriminator 1
 2215 0012 0223     		movs	r3, #2
 2216 0014 34E0     		b	.L125
 2217              	.L124:
 2218              		.loc 1 1576 3 discriminator 2
 2219 0016 7B68     		ldr	r3, [r7, #4]
 2220 0018 0122     		movs	r2, #1
 2221 001a 83F87020 		strb	r2, [r3, #112]
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 2222              		.loc 1 1578 12 is_stmt 1 discriminator 2
 2223 001e 7B68     		ldr	r3, [r7, #4]
 2224 0020 5B6F     		ldr	r3, [r3, #116]
 2225              		.loc 1 1578 6 discriminator 2
 2226 0022 212B     		cmp	r3, #33
 2227 0024 07D1     		bne	.L126
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2228              		.loc 1 1581 5
 2229 0026 7B68     		ldr	r3, [r7, #4]
 2230 0028 1B68     		ldr	r3, [r3]
 2231 002a 9A68     		ldr	r2, [r3, #8]
 2232 002c 7B68     		ldr	r3, [r7, #4]
 2233 002e 1B68     		ldr	r3, [r3]
 2234 0030 42F08002 		orr	r2, r2, #128
 2235 0034 9A60     		str	r2, [r3, #8]
 2236              	.L126:
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2237              		.loc 1 1583 12
 2238 0036 7B68     		ldr	r3, [r7, #4]
 2239 0038 9B6F     		ldr	r3, [r3, #120]
 2240              		.loc 1 1583 6
 2241 003a 222B     		cmp	r3, #34
 2242 003c 1BD1     		bne	.L127
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 2243              		.loc 1 1586 5
 2244 003e 7B68     		ldr	r3, [r7, #4]
 2245 0040 1B68     		ldr	r3, [r3]
 2246 0042 0822     		movs	r2, #8
 2247 0044 1A62     		str	r2, [r3, #32]
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2248              		.loc 1 1589 5
 2249 0046 7B68     		ldr	r3, [r7, #4]
 2250 0048 1B68     		ldr	r3, [r3]
 2251 004a 1A68     		ldr	r2, [r3]
 2252 004c 7B68     		ldr	r3, [r7, #4]
 2253 004e 1B68     		ldr	r3, [r3]
 2254 0050 42F48072 		orr	r2, r2, #256
 2255 0054 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccFXX6mG.s 			page 68


1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2256              		.loc 1 1590 5
 2257 0056 7B68     		ldr	r3, [r7, #4]
 2258 0058 1B68     		ldr	r3, [r3]
 2259 005a 9A68     		ldr	r2, [r3, #8]
 2260 005c 7B68     		ldr	r3, [r7, #4]
 2261 005e 1B68     		ldr	r3, [r3]
 2262 0060 42F00102 		orr	r2, r2, #1
 2263 0064 9A60     		str	r2, [r3, #8]
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2264              		.loc 1 1593 5
 2265 0066 7B68     		ldr	r3, [r7, #4]
 2266 0068 1B68     		ldr	r3, [r3]
 2267 006a 9A68     		ldr	r2, [r3, #8]
 2268 006c 7B68     		ldr	r3, [r7, #4]
 2269 006e 1B68     		ldr	r3, [r3]
 2270 0070 42F04002 		orr	r2, r2, #64
 2271 0074 9A60     		str	r2, [r3, #8]
 2272              	.L127:
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2273              		.loc 1 1596 3
 2274 0076 7B68     		ldr	r3, [r7, #4]
 2275 0078 0022     		movs	r2, #0
 2276 007a 83F87020 		strb	r2, [r3, #112]
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2277              		.loc 1 1598 10
 2278 007e 0023     		movs	r3, #0
 2279              	.L125:
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2280              		.loc 1 1599 1
 2281 0080 1846     		mov	r0, r3
 2282 0082 0C37     		adds	r7, r7, #12
 2283              	.LCFI78:
 2284              		.cfi_def_cfa_offset 4
 2285 0084 BD46     		mov	sp, r7
 2286              	.LCFI79:
 2287              		.cfi_def_cfa_register 13
 2288              		@ sp needed
 2289 0086 5DF8047B 		ldr	r7, [sp], #4
 2290              	.LCFI80:
 2291              		.cfi_restore 7
 2292              		.cfi_def_cfa_offset 0
 2293 008a 7047     		bx	lr
 2294              		.cfi_endproc
 2295              	.LFE144:
 2297              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2298              		.align	1
 2299              		.global	HAL_UART_DMAStop
 2300              		.syntax unified
 2301              		.thumb
 2302              		.thumb_func
 2303              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccFXX6mG.s 			page 69


 2305              	HAL_UART_DMAStop:
 2306              	.LFB145:
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2307              		.loc 1 1607 1
 2308              		.cfi_startproc
 2309              		@ args = 0, pretend = 0, frame = 16
 2310              		@ frame_needed = 1, uses_anonymous_args = 0
 2311 0000 80B5     		push	{r7, lr}
 2312              	.LCFI81:
 2313              		.cfi_def_cfa_offset 8
 2314              		.cfi_offset 7, -8
 2315              		.cfi_offset 14, -4
 2316 0002 84B0     		sub	sp, sp, #16
 2317              	.LCFI82:
 2318              		.cfi_def_cfa_offset 24
 2319 0004 00AF     		add	r7, sp, #0
 2320              	.LCFI83:
 2321              		.cfi_def_cfa_register 7
 2322 0006 7860     		str	r0, [r7, #4]
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2323              		.loc 1 1615 31
 2324 0008 7B68     		ldr	r3, [r7, #4]
 2325 000a 5B6F     		ldr	r3, [r3, #116]
 2326 000c FB60     		str	r3, [r7, #12]
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2327              		.loc 1 1616 31
 2328 000e 7B68     		ldr	r3, [r7, #4]
 2329 0010 9B6F     		ldr	r3, [r3, #120]
 2330 0012 BB60     		str	r3, [r7, #8]
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2331              		.loc 1 1619 8
 2332 0014 7B68     		ldr	r3, [r7, #4]
 2333 0016 1B68     		ldr	r3, [r3]
 2334 0018 9B68     		ldr	r3, [r3, #8]
 2335 001a 03F08003 		and	r3, r3, #128
 2336              		.loc 1 1619 6
 2337 001e 802B     		cmp	r3, #128
 2338 0020 26D1     		bne	.L129
 2339              		.loc 1 1619 62 discriminator 1
 2340 0022 FB68     		ldr	r3, [r7, #12]
 2341 0024 212B     		cmp	r3, #33
ARM GAS  /tmp/ccFXX6mG.s 			page 70


 2342 0026 23D1     		bne	.L129
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2343              		.loc 1 1622 5
 2344 0028 7B68     		ldr	r3, [r7, #4]
 2345 002a 1B68     		ldr	r3, [r3]
 2346 002c 9A68     		ldr	r2, [r3, #8]
 2347 002e 7B68     		ldr	r3, [r7, #4]
 2348 0030 1B68     		ldr	r3, [r3]
 2349 0032 22F08002 		bic	r2, r2, #128
 2350 0036 9A60     		str	r2, [r3, #8]
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2351              		.loc 1 1625 14
 2352 0038 7B68     		ldr	r3, [r7, #4]
 2353 003a 9B6E     		ldr	r3, [r3, #104]
 2354              		.loc 1 1625 8
 2355 003c 002B     		cmp	r3, #0
 2356 003e 14D0     		beq	.L130
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2357              		.loc 1 1627 11
 2358 0040 7B68     		ldr	r3, [r7, #4]
 2359 0042 9B6E     		ldr	r3, [r3, #104]
 2360 0044 1846     		mov	r0, r3
 2361 0046 FFF7FEFF 		bl	HAL_DMA_Abort
 2362 004a 0346     		mov	r3, r0
 2363              		.loc 1 1627 10
 2364 004c 002B     		cmp	r3, #0
 2365 004e 0CD0     		beq	.L130
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2366              		.loc 1 1629 13
 2367 0050 7B68     		ldr	r3, [r7, #4]
 2368 0052 9B6E     		ldr	r3, [r3, #104]
 2369 0054 1846     		mov	r0, r3
 2370 0056 FFF7FEFF 		bl	HAL_DMA_GetError
 2371 005a 0346     		mov	r3, r0
 2372              		.loc 1 1629 12
 2373 005c 202B     		cmp	r3, #32
 2374 005e 04D1     		bne	.L130
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2375              		.loc 1 1632 28
 2376 0060 7B68     		ldr	r3, [r7, #4]
 2377 0062 1022     		movs	r2, #16
 2378 0064 DA67     		str	r2, [r3, #124]
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2379              		.loc 1 1634 18
 2380 0066 0323     		movs	r3, #3
 2381 0068 31E0     		b	.L131
 2382              	.L130:
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
ARM GAS  /tmp/ccFXX6mG.s 			page 71


1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2383              		.loc 1 1639 5
 2384 006a 7868     		ldr	r0, [r7, #4]
 2385 006c FFF7FEFF 		bl	UART_EndTxTransfer
 2386              	.L129:
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2387              		.loc 1 1643 8
 2388 0070 7B68     		ldr	r3, [r7, #4]
 2389 0072 1B68     		ldr	r3, [r3]
 2390 0074 9B68     		ldr	r3, [r3, #8]
 2391 0076 03F04003 		and	r3, r3, #64
 2392              		.loc 1 1643 6
 2393 007a 402B     		cmp	r3, #64
 2394 007c 26D1     		bne	.L132
 2395              		.loc 1 1643 62 discriminator 1
 2396 007e BB68     		ldr	r3, [r7, #8]
 2397 0080 222B     		cmp	r3, #34
 2398 0082 23D1     		bne	.L132
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2399              		.loc 1 1646 5
 2400 0084 7B68     		ldr	r3, [r7, #4]
 2401 0086 1B68     		ldr	r3, [r3]
 2402 0088 9A68     		ldr	r2, [r3, #8]
 2403 008a 7B68     		ldr	r3, [r7, #4]
 2404 008c 1B68     		ldr	r3, [r3]
 2405 008e 22F04002 		bic	r2, r2, #64
 2406 0092 9A60     		str	r2, [r3, #8]
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2407              		.loc 1 1649 14
 2408 0094 7B68     		ldr	r3, [r7, #4]
 2409 0096 DB6E     		ldr	r3, [r3, #108]
 2410              		.loc 1 1649 8
 2411 0098 002B     		cmp	r3, #0
 2412 009a 14D0     		beq	.L133
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2413              		.loc 1 1651 11
 2414 009c 7B68     		ldr	r3, [r7, #4]
 2415 009e DB6E     		ldr	r3, [r3, #108]
 2416 00a0 1846     		mov	r0, r3
 2417 00a2 FFF7FEFF 		bl	HAL_DMA_Abort
 2418 00a6 0346     		mov	r3, r0
 2419              		.loc 1 1651 10
 2420 00a8 002B     		cmp	r3, #0
 2421 00aa 0CD0     		beq	.L133
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
ARM GAS  /tmp/ccFXX6mG.s 			page 72


 2422              		.loc 1 1653 13
 2423 00ac 7B68     		ldr	r3, [r7, #4]
 2424 00ae DB6E     		ldr	r3, [r3, #108]
 2425 00b0 1846     		mov	r0, r3
 2426 00b2 FFF7FEFF 		bl	HAL_DMA_GetError
 2427 00b6 0346     		mov	r3, r0
 2428              		.loc 1 1653 12
 2429 00b8 202B     		cmp	r3, #32
 2430 00ba 04D1     		bne	.L133
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2431              		.loc 1 1656 28
 2432 00bc 7B68     		ldr	r3, [r7, #4]
 2433 00be 1022     		movs	r2, #16
 2434 00c0 DA67     		str	r2, [r3, #124]
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2435              		.loc 1 1658 18
 2436 00c2 0323     		movs	r3, #3
 2437 00c4 03E0     		b	.L131
 2438              	.L133:
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2439              		.loc 1 1663 5
 2440 00c6 7868     		ldr	r0, [r7, #4]
 2441 00c8 FFF7FEFF 		bl	UART_EndRxTransfer
 2442              	.L132:
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2443              		.loc 1 1666 10
 2444 00cc 0023     		movs	r3, #0
 2445              	.L131:
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2446              		.loc 1 1667 1
 2447 00ce 1846     		mov	r0, r3
 2448 00d0 1037     		adds	r7, r7, #16
 2449              	.LCFI84:
 2450              		.cfi_def_cfa_offset 8
 2451 00d2 BD46     		mov	sp, r7
 2452              	.LCFI85:
 2453              		.cfi_def_cfa_register 13
 2454              		@ sp needed
 2455 00d4 80BD     		pop	{r7, pc}
 2456              		.cfi_endproc
 2457              	.LFE145:
 2459              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2460              		.align	1
 2461              		.global	HAL_UART_Abort
 2462              		.syntax unified
 2463              		.thumb
 2464              		.thumb_func
 2465              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccFXX6mG.s 			page 73


 2467              	HAL_UART_Abort:
 2468              	.LFB146:
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2469              		.loc 1 1682 1
 2470              		.cfi_startproc
 2471              		@ args = 0, pretend = 0, frame = 8
 2472              		@ frame_needed = 1, uses_anonymous_args = 0
 2473 0000 80B5     		push	{r7, lr}
 2474              	.LCFI86:
 2475              		.cfi_def_cfa_offset 8
 2476              		.cfi_offset 7, -8
 2477              		.cfi_offset 14, -4
 2478 0002 82B0     		sub	sp, sp, #8
 2479              	.LCFI87:
 2480              		.cfi_def_cfa_offset 16
 2481 0004 00AF     		add	r7, sp, #0
 2482              	.LCFI88:
 2483              		.cfi_def_cfa_register 7
 2484 0006 7860     		str	r0, [r7, #4]
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFN
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2485              		.loc 1 1689 3
 2486 0008 7B68     		ldr	r3, [r7, #4]
 2487 000a 1B68     		ldr	r3, [r3]
 2488 000c 1A68     		ldr	r2, [r3]
 2489 000e 7B68     		ldr	r3, [r7, #4]
 2490 0010 1B68     		ldr	r3, [r3]
 2491 0012 22F4F072 		bic	r2, r2, #480
 2492 0016 1A60     		str	r2, [r3]
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2493              		.loc 1 1690 3
 2494 0018 7B68     		ldr	r3, [r7, #4]
 2495 001a 1B68     		ldr	r3, [r3]
 2496 001c 9A68     		ldr	r2, [r3, #8]
 2497 001e 7B68     		ldr	r3, [r7, #4]
 2498 0020 1B68     		ldr	r3, [r3]
 2499 0022 22F00102 		bic	r2, r2, #1
 2500 0026 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccFXX6mG.s 			page 74


1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2501              		.loc 1 1694 7
 2502 0028 7B68     		ldr	r3, [r7, #4]
 2503 002a 1B68     		ldr	r3, [r3]
 2504 002c 9B68     		ldr	r3, [r3, #8]
 2505 002e 03F08003 		and	r3, r3, #128
 2506              		.loc 1 1694 6
 2507 0032 802B     		cmp	r3, #128
 2508 0034 24D1     		bne	.L135
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2509              		.loc 1 1696 5
 2510 0036 7B68     		ldr	r3, [r7, #4]
 2511 0038 1B68     		ldr	r3, [r3]
 2512 003a 9A68     		ldr	r2, [r3, #8]
 2513 003c 7B68     		ldr	r3, [r7, #4]
 2514 003e 1B68     		ldr	r3, [r3]
 2515 0040 22F08002 		bic	r2, r2, #128
 2516 0044 9A60     		str	r2, [r3, #8]
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2517              		.loc 1 1699 14
 2518 0046 7B68     		ldr	r3, [r7, #4]
 2519 0048 9B6E     		ldr	r3, [r3, #104]
 2520              		.loc 1 1699 8
 2521 004a 002B     		cmp	r3, #0
 2522 004c 18D0     		beq	.L135
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2523              		.loc 1 1703 12
 2524 004e 7B68     		ldr	r3, [r7, #4]
 2525 0050 9B6E     		ldr	r3, [r3, #104]
 2526              		.loc 1 1703 40
 2527 0052 0022     		movs	r2, #0
 2528 0054 9A63     		str	r2, [r3, #56]
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2529              		.loc 1 1705 11
 2530 0056 7B68     		ldr	r3, [r7, #4]
 2531 0058 9B6E     		ldr	r3, [r3, #104]
 2532 005a 1846     		mov	r0, r3
 2533 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2534 0060 0346     		mov	r3, r0
 2535              		.loc 1 1705 10
 2536 0062 002B     		cmp	r3, #0
 2537 0064 0CD0     		beq	.L135
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2538              		.loc 1 1707 13
 2539 0066 7B68     		ldr	r3, [r7, #4]
 2540 0068 9B6E     		ldr	r3, [r3, #104]
ARM GAS  /tmp/ccFXX6mG.s 			page 75


 2541 006a 1846     		mov	r0, r3
 2542 006c FFF7FEFF 		bl	HAL_DMA_GetError
 2543 0070 0346     		mov	r3, r0
 2544              		.loc 1 1707 12
 2545 0072 202B     		cmp	r3, #32
 2546 0074 04D1     		bne	.L135
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2547              		.loc 1 1710 28
 2548 0076 7B68     		ldr	r3, [r7, #4]
 2549 0078 1022     		movs	r2, #16
 2550 007a DA67     		str	r2, [r3, #124]
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2551              		.loc 1 1712 18
 2552 007c 0323     		movs	r3, #3
 2553 007e 4BE0     		b	.L136
 2554              	.L135:
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2555              		.loc 1 1719 7
 2556 0080 7B68     		ldr	r3, [r7, #4]
 2557 0082 1B68     		ldr	r3, [r3]
 2558 0084 9B68     		ldr	r3, [r3, #8]
 2559 0086 03F04003 		and	r3, r3, #64
 2560              		.loc 1 1719 6
 2561 008a 402B     		cmp	r3, #64
 2562 008c 24D1     		bne	.L137
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2563              		.loc 1 1721 5
 2564 008e 7B68     		ldr	r3, [r7, #4]
 2565 0090 1B68     		ldr	r3, [r3]
 2566 0092 9A68     		ldr	r2, [r3, #8]
 2567 0094 7B68     		ldr	r3, [r7, #4]
 2568 0096 1B68     		ldr	r3, [r3]
 2569 0098 22F04002 		bic	r2, r2, #64
 2570 009c 9A60     		str	r2, [r3, #8]
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2571              		.loc 1 1724 14
 2572 009e 7B68     		ldr	r3, [r7, #4]
 2573 00a0 DB6E     		ldr	r3, [r3, #108]
 2574              		.loc 1 1724 8
 2575 00a2 002B     		cmp	r3, #0
 2576 00a4 18D0     		beq	.L137
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
ARM GAS  /tmp/ccFXX6mG.s 			page 76


 2577              		.loc 1 1728 12
 2578 00a6 7B68     		ldr	r3, [r7, #4]
 2579 00a8 DB6E     		ldr	r3, [r3, #108]
 2580              		.loc 1 1728 40
 2581 00aa 0022     		movs	r2, #0
 2582 00ac 9A63     		str	r2, [r3, #56]
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2583              		.loc 1 1730 11
 2584 00ae 7B68     		ldr	r3, [r7, #4]
 2585 00b0 DB6E     		ldr	r3, [r3, #108]
 2586 00b2 1846     		mov	r0, r3
 2587 00b4 FFF7FEFF 		bl	HAL_DMA_Abort
 2588 00b8 0346     		mov	r3, r0
 2589              		.loc 1 1730 10
 2590 00ba 002B     		cmp	r3, #0
 2591 00bc 0CD0     		beq	.L137
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2592              		.loc 1 1732 13
 2593 00be 7B68     		ldr	r3, [r7, #4]
 2594 00c0 DB6E     		ldr	r3, [r3, #108]
 2595 00c2 1846     		mov	r0, r3
 2596 00c4 FFF7FEFF 		bl	HAL_DMA_GetError
 2597 00c8 0346     		mov	r3, r0
 2598              		.loc 1 1732 12
 2599 00ca 202B     		cmp	r3, #32
 2600 00cc 04D1     		bne	.L137
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2601              		.loc 1 1735 28
 2602 00ce 7B68     		ldr	r3, [r7, #4]
 2603 00d0 1022     		movs	r2, #16
 2604 00d2 DA67     		str	r2, [r3, #124]
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2605              		.loc 1 1737 18
 2606 00d4 0323     		movs	r3, #3
 2607 00d6 1FE0     		b	.L136
 2608              	.L137:
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2609              		.loc 1 1744 22
 2610 00d8 7B68     		ldr	r3, [r7, #4]
 2611 00da 0022     		movs	r2, #0
 2612 00dc A3F85220 		strh	r2, [r3, #82]	@ movhi
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2613              		.loc 1 1745 22
 2614 00e0 7B68     		ldr	r3, [r7, #4]
 2615 00e2 0022     		movs	r2, #0
 2616 00e4 A3F85A20 		strh	r2, [r3, #90]	@ movhi
ARM GAS  /tmp/ccFXX6mG.s 			page 77


1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2617              		.loc 1 1748 3
 2618 00e8 7B68     		ldr	r3, [r7, #4]
 2619 00ea 1B68     		ldr	r3, [r3]
 2620 00ec 0F22     		movs	r2, #15
 2621 00ee 1A62     		str	r2, [r3, #32]
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2622              		.loc 1 1759 3
 2623 00f0 7B68     		ldr	r3, [r7, #4]
 2624 00f2 1B68     		ldr	r3, [r3]
 2625 00f4 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2626 00f6 9AB2     		uxth	r2, r3
 2627 00f8 7B68     		ldr	r3, [r7, #4]
 2628 00fa 1B68     		ldr	r3, [r3]
 2629 00fc 42F00802 		orr	r2, r2, #8
 2630 0100 92B2     		uxth	r2, r2
 2631 0102 1A83     		strh	r2, [r3, #24]	@ movhi
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 2632              		.loc 1 1762 18
 2633 0104 7B68     		ldr	r3, [r7, #4]
 2634 0106 2022     		movs	r2, #32
 2635 0108 5A67     		str	r2, [r3, #116]
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2636              		.loc 1 1763 18
 2637 010a 7B68     		ldr	r3, [r7, #4]
 2638 010c 2022     		movs	r2, #32
 2639 010e 9A67     		str	r2, [r3, #120]
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2640              		.loc 1 1765 20
 2641 0110 7B68     		ldr	r3, [r7, #4]
 2642 0112 0022     		movs	r2, #0
 2643 0114 DA67     		str	r2, [r3, #124]
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2644              		.loc 1 1767 10
 2645 0116 0023     		movs	r3, #0
 2646              	.L136:
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2647              		.loc 1 1768 1
 2648 0118 1846     		mov	r0, r3
 2649 011a 0837     		adds	r7, r7, #8
 2650              	.LCFI89:
ARM GAS  /tmp/ccFXX6mG.s 			page 78


 2651              		.cfi_def_cfa_offset 8
 2652 011c BD46     		mov	sp, r7
 2653              	.LCFI90:
 2654              		.cfi_def_cfa_register 13
 2655              		@ sp needed
 2656 011e 80BD     		pop	{r7, pc}
 2657              		.cfi_endproc
 2658              	.LFE146:
 2660              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2661              		.align	1
 2662              		.global	HAL_UART_AbortTransmit
 2663              		.syntax unified
 2664              		.thumb
 2665              		.thumb_func
 2666              		.fpu fpv4-sp-d16
 2668              	HAL_UART_AbortTransmit:
 2669              	.LFB147:
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2670              		.loc 1 1783 1
 2671              		.cfi_startproc
 2672              		@ args = 0, pretend = 0, frame = 8
 2673              		@ frame_needed = 1, uses_anonymous_args = 0
 2674 0000 80B5     		push	{r7, lr}
 2675              	.LCFI91:
 2676              		.cfi_def_cfa_offset 8
 2677              		.cfi_offset 7, -8
 2678              		.cfi_offset 14, -4
 2679 0002 82B0     		sub	sp, sp, #8
 2680              	.LCFI92:
 2681              		.cfi_def_cfa_offset 16
 2682 0004 00AF     		add	r7, sp, #0
 2683              	.LCFI93:
 2684              		.cfi_def_cfa_register 7
 2685 0006 7860     		str	r0, [r7, #4]
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2686              		.loc 1 1790 3
 2687 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFXX6mG.s 			page 79


 2688 000a 1B68     		ldr	r3, [r3]
 2689 000c 1A68     		ldr	r2, [r3]
 2690 000e 7B68     		ldr	r3, [r7, #4]
 2691 0010 1B68     		ldr	r3, [r3]
 2692 0012 22F0C002 		bic	r2, r2, #192
 2693 0016 1A60     		str	r2, [r3]
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2694              		.loc 1 1794 7
 2695 0018 7B68     		ldr	r3, [r7, #4]
 2696 001a 1B68     		ldr	r3, [r3]
 2697 001c 9B68     		ldr	r3, [r3, #8]
 2698 001e 03F08003 		and	r3, r3, #128
 2699              		.loc 1 1794 6
 2700 0022 802B     		cmp	r3, #128
 2701 0024 24D1     		bne	.L139
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2702              		.loc 1 1796 5
 2703 0026 7B68     		ldr	r3, [r7, #4]
 2704 0028 1B68     		ldr	r3, [r3]
 2705 002a 9A68     		ldr	r2, [r3, #8]
 2706 002c 7B68     		ldr	r3, [r7, #4]
 2707 002e 1B68     		ldr	r3, [r3]
 2708 0030 22F08002 		bic	r2, r2, #128
 2709 0034 9A60     		str	r2, [r3, #8]
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2710              		.loc 1 1799 14
 2711 0036 7B68     		ldr	r3, [r7, #4]
 2712 0038 9B6E     		ldr	r3, [r3, #104]
 2713              		.loc 1 1799 8
 2714 003a 002B     		cmp	r3, #0
 2715 003c 18D0     		beq	.L139
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2716              		.loc 1 1803 12
 2717 003e 7B68     		ldr	r3, [r7, #4]
 2718 0040 9B6E     		ldr	r3, [r3, #104]
 2719              		.loc 1 1803 40
 2720 0042 0022     		movs	r2, #0
 2721 0044 9A63     		str	r2, [r3, #56]
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2722              		.loc 1 1805 11
 2723 0046 7B68     		ldr	r3, [r7, #4]
 2724 0048 9B6E     		ldr	r3, [r3, #104]
 2725 004a 1846     		mov	r0, r3
 2726 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2727 0050 0346     		mov	r3, r0
 2728              		.loc 1 1805 10
 2729 0052 002B     		cmp	r3, #0
ARM GAS  /tmp/ccFXX6mG.s 			page 80


 2730 0054 0CD0     		beq	.L139
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2731              		.loc 1 1807 13
 2732 0056 7B68     		ldr	r3, [r7, #4]
 2733 0058 9B6E     		ldr	r3, [r3, #104]
 2734 005a 1846     		mov	r0, r3
 2735 005c FFF7FEFF 		bl	HAL_DMA_GetError
 2736 0060 0346     		mov	r3, r0
 2737              		.loc 1 1807 12
 2738 0062 202B     		cmp	r3, #32
 2739 0064 04D1     		bne	.L139
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2740              		.loc 1 1810 28
 2741 0066 7B68     		ldr	r3, [r7, #4]
 2742 0068 1022     		movs	r2, #16
 2743 006a DA67     		str	r2, [r3, #124]
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2744              		.loc 1 1812 18
 2745 006c 0323     		movs	r3, #3
 2746 006e 07E0     		b	.L140
 2747              	.L139:
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2748              		.loc 1 1819 22
 2749 0070 7B68     		ldr	r3, [r7, #4]
 2750 0072 0022     		movs	r2, #0
 2751 0074 A3F85220 		strh	r2, [r3, #82]	@ movhi
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2752              		.loc 1 1830 17
 2753 0078 7B68     		ldr	r3, [r7, #4]
 2754 007a 2022     		movs	r2, #32
 2755 007c 5A67     		str	r2, [r3, #116]
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2756              		.loc 1 1832 10
 2757 007e 0023     		movs	r3, #0
 2758              	.L140:
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
ARM GAS  /tmp/ccFXX6mG.s 			page 81


 2759              		.loc 1 1833 1
 2760 0080 1846     		mov	r0, r3
 2761 0082 0837     		adds	r7, r7, #8
 2762              	.LCFI94:
 2763              		.cfi_def_cfa_offset 8
 2764 0084 BD46     		mov	sp, r7
 2765              	.LCFI95:
 2766              		.cfi_def_cfa_register 13
 2767              		@ sp needed
 2768 0086 80BD     		pop	{r7, pc}
 2769              		.cfi_endproc
 2770              	.LFE147:
 2772              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2773              		.align	1
 2774              		.global	HAL_UART_AbortReceive
 2775              		.syntax unified
 2776              		.thumb
 2777              		.thumb_func
 2778              		.fpu fpv4-sp-d16
 2780              	HAL_UART_AbortReceive:
 2781              	.LFB148:
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2782              		.loc 1 1848 1
 2783              		.cfi_startproc
 2784              		@ args = 0, pretend = 0, frame = 8
 2785              		@ frame_needed = 1, uses_anonymous_args = 0
 2786 0000 80B5     		push	{r7, lr}
 2787              	.LCFI96:
 2788              		.cfi_def_cfa_offset 8
 2789              		.cfi_offset 7, -8
 2790              		.cfi_offset 14, -4
 2791 0002 82B0     		sub	sp, sp, #8
 2792              	.LCFI97:
 2793              		.cfi_def_cfa_offset 16
 2794 0004 00AF     		add	r7, sp, #0
 2795              	.LCFI98:
 2796              		.cfi_def_cfa_register 7
 2797 0006 7860     		str	r0, [r7, #4]
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
ARM GAS  /tmp/ccFXX6mG.s 			page 82


1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2798              		.loc 1 1855 3
 2799 0008 7B68     		ldr	r3, [r7, #4]
 2800 000a 1B68     		ldr	r3, [r3]
 2801 000c 1A68     		ldr	r2, [r3]
 2802 000e 7B68     		ldr	r3, [r7, #4]
 2803 0010 1B68     		ldr	r3, [r3]
 2804 0012 22F49072 		bic	r2, r2, #288
 2805 0016 1A60     		str	r2, [r3]
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2806              		.loc 1 1856 3
 2807 0018 7B68     		ldr	r3, [r7, #4]
 2808 001a 1B68     		ldr	r3, [r3]
 2809 001c 9A68     		ldr	r2, [r3, #8]
 2810 001e 7B68     		ldr	r3, [r7, #4]
 2811 0020 1B68     		ldr	r3, [r3]
 2812 0022 22F00102 		bic	r2, r2, #1
 2813 0026 9A60     		str	r2, [r3, #8]
1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2814              		.loc 1 1860 7
 2815 0028 7B68     		ldr	r3, [r7, #4]
 2816 002a 1B68     		ldr	r3, [r3]
 2817 002c 9B68     		ldr	r3, [r3, #8]
 2818 002e 03F04003 		and	r3, r3, #64
 2819              		.loc 1 1860 6
 2820 0032 402B     		cmp	r3, #64
 2821 0034 24D1     		bne	.L142
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2822              		.loc 1 1862 5
 2823 0036 7B68     		ldr	r3, [r7, #4]
 2824 0038 1B68     		ldr	r3, [r3]
 2825 003a 9A68     		ldr	r2, [r3, #8]
 2826 003c 7B68     		ldr	r3, [r7, #4]
 2827 003e 1B68     		ldr	r3, [r3]
 2828 0040 22F04002 		bic	r2, r2, #64
 2829 0044 9A60     		str	r2, [r3, #8]
1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2830              		.loc 1 1865 14
 2831 0046 7B68     		ldr	r3, [r7, #4]
 2832 0048 DB6E     		ldr	r3, [r3, #108]
 2833              		.loc 1 1865 8
 2834 004a 002B     		cmp	r3, #0
 2835 004c 18D0     		beq	.L142
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2836              		.loc 1 1869 12
 2837 004e 7B68     		ldr	r3, [r7, #4]
 2838 0050 DB6E     		ldr	r3, [r3, #108]
ARM GAS  /tmp/ccFXX6mG.s 			page 83


 2839              		.loc 1 1869 40
 2840 0052 0022     		movs	r2, #0
 2841 0054 9A63     		str	r2, [r3, #56]
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2842              		.loc 1 1871 11
 2843 0056 7B68     		ldr	r3, [r7, #4]
 2844 0058 DB6E     		ldr	r3, [r3, #108]
 2845 005a 1846     		mov	r0, r3
 2846 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2847 0060 0346     		mov	r3, r0
 2848              		.loc 1 1871 10
 2849 0062 002B     		cmp	r3, #0
 2850 0064 0CD0     		beq	.L142
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2851              		.loc 1 1873 13
 2852 0066 7B68     		ldr	r3, [r7, #4]
 2853 0068 DB6E     		ldr	r3, [r3, #108]
 2854 006a 1846     		mov	r0, r3
 2855 006c FFF7FEFF 		bl	HAL_DMA_GetError
 2856 0070 0346     		mov	r3, r0
 2857              		.loc 1 1873 12
 2858 0072 202B     		cmp	r3, #32
 2859 0074 04D1     		bne	.L142
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2860              		.loc 1 1876 28
 2861 0076 7B68     		ldr	r3, [r7, #4]
 2862 0078 1022     		movs	r2, #16
 2863 007a DA67     		str	r2, [r3, #124]
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2864              		.loc 1 1878 18
 2865 007c 0323     		movs	r3, #3
 2866 007e 15E0     		b	.L143
 2867              	.L142:
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2868              		.loc 1 1885 22
 2869 0080 7B68     		ldr	r3, [r7, #4]
 2870 0082 0022     		movs	r2, #0
 2871 0084 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2872              		.loc 1 1888 3
 2873 0088 7B68     		ldr	r3, [r7, #4]
 2874 008a 1B68     		ldr	r3, [r3]
 2875 008c 0F22     		movs	r2, #15
 2876 008e 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/ccFXX6mG.s 			page 84


1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2877              		.loc 1 1891 3
 2878 0090 7B68     		ldr	r3, [r7, #4]
 2879 0092 1B68     		ldr	r3, [r3]
 2880 0094 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2881 0096 9AB2     		uxth	r2, r3
 2882 0098 7B68     		ldr	r3, [r7, #4]
 2883 009a 1B68     		ldr	r3, [r3]
 2884 009c 42F00802 		orr	r2, r2, #8
 2885 00a0 92B2     		uxth	r2, r2
 2886 00a2 1A83     		strh	r2, [r3, #24]	@ movhi
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2887              		.loc 1 1894 18
 2888 00a4 7B68     		ldr	r3, [r7, #4]
 2889 00a6 2022     		movs	r2, #32
 2890 00a8 9A67     		str	r2, [r3, #120]
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2891              		.loc 1 1896 10
 2892 00aa 0023     		movs	r3, #0
 2893              	.L143:
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2894              		.loc 1 1897 1
 2895 00ac 1846     		mov	r0, r3
 2896 00ae 0837     		adds	r7, r7, #8
 2897              	.LCFI99:
 2898              		.cfi_def_cfa_offset 8
 2899 00b0 BD46     		mov	sp, r7
 2900              	.LCFI100:
 2901              		.cfi_def_cfa_register 13
 2902              		@ sp needed
 2903 00b2 80BD     		pop	{r7, pc}
 2904              		.cfi_endproc
 2905              	.LFE148:
 2907              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2908              		.align	1
 2909              		.global	HAL_UART_Abort_IT
 2910              		.syntax unified
 2911              		.thumb
 2912              		.thumb_func
 2913              		.fpu fpv4-sp-d16
 2915              	HAL_UART_Abort_IT:
 2916              	.LFB149:
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
ARM GAS  /tmp/ccFXX6mG.s 			page 85


1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2917              		.loc 1 1914 1
 2918              		.cfi_startproc
 2919              		@ args = 0, pretend = 0, frame = 16
 2920              		@ frame_needed = 1, uses_anonymous_args = 0
 2921 0000 80B5     		push	{r7, lr}
 2922              	.LCFI101:
 2923              		.cfi_def_cfa_offset 8
 2924              		.cfi_offset 7, -8
 2925              		.cfi_offset 14, -4
 2926 0002 84B0     		sub	sp, sp, #16
 2927              	.LCFI102:
 2928              		.cfi_def_cfa_offset 24
 2929 0004 00AF     		add	r7, sp, #0
 2930              	.LCFI103:
 2931              		.cfi_def_cfa_register 7
 2932 0006 7860     		str	r0, [r7, #4]
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2933              		.loc 1 1915 12
 2934 0008 0123     		movs	r3, #1
 2935 000a FB60     		str	r3, [r7, #12]
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE | USA
1920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2936              		.loc 1 1922 3
 2937 000c 7B68     		ldr	r3, [r7, #4]
 2938 000e 1B68     		ldr	r3, [r3]
 2939 0010 1A68     		ldr	r2, [r3]
 2940 0012 7B68     		ldr	r3, [r7, #4]
 2941 0014 1B68     		ldr	r3, [r3]
 2942 0016 22F4F072 		bic	r2, r2, #480
 2943 001a 1A60     		str	r2, [r3]
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2944              		.loc 1 1923 3
 2945 001c 7B68     		ldr	r3, [r7, #4]
 2946 001e 1B68     		ldr	r3, [r3]
 2947 0020 9A68     		ldr	r2, [r3, #8]
 2948 0022 7B68     		ldr	r3, [r7, #4]
 2949 0024 1B68     		ldr	r3, [r3]
 2950 0026 22F00102 		bic	r2, r2, #1
 2951 002a 9A60     		str	r2, [r3, #8]
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      before any call to DMA Abort functions */
1928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
ARM GAS  /tmp/ccFXX6mG.s 			page 86


 2952              		.loc 1 1929 12
 2953 002c 7B68     		ldr	r3, [r7, #4]
 2954 002e 9B6E     		ldr	r3, [r3, #104]
 2955              		.loc 1 1929 6
 2956 0030 002B     		cmp	r3, #0
 2957 0032 0FD0     		beq	.L145
1930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2958              		.loc 1 1933 9
 2959 0034 7B68     		ldr	r3, [r7, #4]
 2960 0036 1B68     		ldr	r3, [r3]
 2961 0038 9B68     		ldr	r3, [r3, #8]
 2962 003a 03F08003 		and	r3, r3, #128
 2963              		.loc 1 1933 8
 2964 003e 802B     		cmp	r3, #128
 2965 0040 04D1     		bne	.L146
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 2966              		.loc 1 1935 12
 2967 0042 7B68     		ldr	r3, [r7, #4]
 2968 0044 9B6E     		ldr	r3, [r3, #104]
 2969              		.loc 1 1935 40
 2970 0046 484A     		ldr	r2, .L155
 2971 0048 9A63     		str	r2, [r3, #56]
 2972 004a 03E0     		b	.L145
 2973              	.L146:
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2974              		.loc 1 1939 12
 2975 004c 7B68     		ldr	r3, [r7, #4]
 2976 004e 9B6E     		ldr	r3, [r3, #104]
 2977              		.loc 1 1939 40
 2978 0050 0022     		movs	r2, #0
 2979 0052 9A63     		str	r2, [r3, #56]
 2980              	.L145:
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 2981              		.loc 1 1943 12
 2982 0054 7B68     		ldr	r3, [r7, #4]
 2983 0056 DB6E     		ldr	r3, [r3, #108]
 2984              		.loc 1 1943 6
 2985 0058 002B     		cmp	r3, #0
 2986 005a 0FD0     		beq	.L147
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2987              		.loc 1 1947 9
 2988 005c 7B68     		ldr	r3, [r7, #4]
 2989 005e 1B68     		ldr	r3, [r3]
 2990 0060 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccFXX6mG.s 			page 87


 2991 0062 03F04003 		and	r3, r3, #64
 2992              		.loc 1 1947 8
 2993 0066 402B     		cmp	r3, #64
 2994 0068 04D1     		bne	.L148
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 2995              		.loc 1 1949 12
 2996 006a 7B68     		ldr	r3, [r7, #4]
 2997 006c DB6E     		ldr	r3, [r3, #108]
 2998              		.loc 1 1949 40
 2999 006e 3F4A     		ldr	r2, .L155+4
 3000 0070 9A63     		str	r2, [r3, #56]
 3001 0072 03E0     		b	.L147
 3002              	.L148:
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3003              		.loc 1 1953 12
 3004 0074 7B68     		ldr	r3, [r7, #4]
 3005 0076 DB6E     		ldr	r3, [r3, #108]
 3006              		.loc 1 1953 40
 3007 0078 0022     		movs	r2, #0
 3008 007a 9A63     		str	r2, [r3, #56]
 3009              	.L147:
1954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3010              		.loc 1 1958 7
 3011 007c 7B68     		ldr	r3, [r7, #4]
 3012 007e 1B68     		ldr	r3, [r3]
 3013 0080 9B68     		ldr	r3, [r3, #8]
 3014 0082 03F08003 		and	r3, r3, #128
 3015              		.loc 1 1958 6
 3016 0086 802B     		cmp	r3, #128
 3017 0088 1AD1     		bne	.L149
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3018              		.loc 1 1961 5
 3019 008a 7B68     		ldr	r3, [r7, #4]
 3020 008c 1B68     		ldr	r3, [r3]
 3021 008e 9A68     		ldr	r2, [r3, #8]
 3022 0090 7B68     		ldr	r3, [r7, #4]
 3023 0092 1B68     		ldr	r3, [r3]
 3024 0094 22F08002 		bic	r2, r2, #128
 3025 0098 9A60     		str	r2, [r3, #8]
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3026              		.loc 1 1964 14
 3027 009a 7B68     		ldr	r3, [r7, #4]
 3028 009c 9B6E     		ldr	r3, [r3, #104]
 3029              		.loc 1 1964 8
 3030 009e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccFXX6mG.s 			page 88


 3031 00a0 0ED0     		beq	.L149
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3032              		.loc 1 1970 11
 3033 00a2 7B68     		ldr	r3, [r7, #4]
 3034 00a4 9B6E     		ldr	r3, [r3, #104]
 3035 00a6 1846     		mov	r0, r3
 3036 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3037 00ac 0346     		mov	r3, r0
 3038              		.loc 1 1970 10
 3039 00ae 002B     		cmp	r3, #0
 3040 00b0 04D0     		beq	.L150
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 3041              		.loc 1 1972 14
 3042 00b2 7B68     		ldr	r3, [r7, #4]
 3043 00b4 9B6E     		ldr	r3, [r3, #104]
 3044              		.loc 1 1972 42
 3045 00b6 0022     		movs	r2, #0
 3046 00b8 9A63     		str	r2, [r3, #56]
 3047 00ba 01E0     		b	.L149
 3048              	.L150:
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
 3049              		.loc 1 1976 19
 3050 00bc 0023     		movs	r3, #0
 3051 00be FB60     		str	r3, [r7, #12]
 3052              	.L149:
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3053              		.loc 1 1982 7
 3054 00c0 7B68     		ldr	r3, [r7, #4]
 3055 00c2 1B68     		ldr	r3, [r3]
 3056 00c4 9B68     		ldr	r3, [r3, #8]
 3057 00c6 03F04003 		and	r3, r3, #64
 3058              		.loc 1 1982 6
 3059 00ca 402B     		cmp	r3, #64
 3060 00cc 1CD1     		bne	.L151
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3061              		.loc 1 1984 5
 3062 00ce 7B68     		ldr	r3, [r7, #4]
 3063 00d0 1B68     		ldr	r3, [r3]
 3064 00d2 9A68     		ldr	r2, [r3, #8]
 3065 00d4 7B68     		ldr	r3, [r7, #4]
 3066 00d6 1B68     		ldr	r3, [r3]
 3067 00d8 22F04002 		bic	r2, r2, #64
ARM GAS  /tmp/ccFXX6mG.s 			page 89


 3068 00dc 9A60     		str	r2, [r3, #8]
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3069              		.loc 1 1987 14
 3070 00de 7B68     		ldr	r3, [r7, #4]
 3071 00e0 DB6E     		ldr	r3, [r3, #108]
 3072              		.loc 1 1987 8
 3073 00e2 002B     		cmp	r3, #0
 3074 00e4 10D0     		beq	.L151
1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
1993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3075              		.loc 1 1993 11
 3076 00e6 7B68     		ldr	r3, [r7, #4]
 3077 00e8 DB6E     		ldr	r3, [r3, #108]
 3078 00ea 1846     		mov	r0, r3
 3079 00ec FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3080 00f0 0346     		mov	r3, r0
 3081              		.loc 1 1993 10
 3082 00f2 002B     		cmp	r3, #0
 3083 00f4 06D0     		beq	.L152
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 3084              		.loc 1 1995 14
 3085 00f6 7B68     		ldr	r3, [r7, #4]
 3086 00f8 DB6E     		ldr	r3, [r3, #108]
 3087              		.loc 1 1995 42
 3088 00fa 0022     		movs	r2, #0
 3089 00fc 9A63     		str	r2, [r3, #56]
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
 3090              		.loc 1 1996 19
 3091 00fe 0123     		movs	r3, #1
 3092 0100 FB60     		str	r3, [r7, #12]
 3093 0102 01E0     		b	.L151
 3094              	.L152:
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
 3095              		.loc 1 2000 19
 3096 0104 0023     		movs	r3, #0
 3097 0106 FB60     		str	r3, [r7, #12]
 3098              	.L151:
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (abortcplt == 1U)
 3099              		.loc 1 2006 6
 3100 0108 FB68     		ldr	r3, [r7, #12]
 3101 010a 012B     		cmp	r3, #1
 3102 010c 27D1     		bne	.L153
ARM GAS  /tmp/ccFXX6mG.s 			page 90


2007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 3103              		.loc 1 2009 24
 3104 010e 7B68     		ldr	r3, [r7, #4]
 3105 0110 0022     		movs	r2, #0
 3106 0112 A3F85220 		strh	r2, [r3, #82]	@ movhi
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3107              		.loc 1 2010 24
 3108 0116 7B68     		ldr	r3, [r7, #4]
 3109 0118 0022     		movs	r2, #0
 3110 011a A3F85A20 		strh	r2, [r3, #90]	@ movhi
2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear ISR function pointers */
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR = NULL;
 3111              		.loc 1 2013 18
 3112 011e 7B68     		ldr	r3, [r7, #4]
 3113 0120 0022     		movs	r2, #0
 3114 0122 1A66     		str	r2, [r3, #96]
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
 3115              		.loc 1 2014 18
 3116 0124 7B68     		ldr	r3, [r7, #4]
 3117 0126 0022     		movs	r2, #0
 3118 0128 5A66     		str	r2, [r3, #100]
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset errorCode */
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 3119              		.loc 1 2017 22
 3120 012a 7B68     		ldr	r3, [r7, #4]
 3121 012c 0022     		movs	r2, #0
 3122 012e DA67     		str	r2, [r3, #124]
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 3123              		.loc 1 2020 5
 3124 0130 7B68     		ldr	r3, [r7, #4]
 3125 0132 1B68     		ldr	r3, [r3]
 3126 0134 0F22     		movs	r2, #15
 3127 0136 1A62     		str	r2, [r3, #32]
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Discard the received data */
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3128              		.loc 1 2031 5
 3129 0138 7B68     		ldr	r3, [r7, #4]
 3130 013a 1B68     		ldr	r3, [r3]
 3131 013c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3132 013e 9AB2     		uxth	r2, r3
 3133 0140 7B68     		ldr	r3, [r7, #4]
 3134 0142 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccFXX6mG.s 			page 91


 3135 0144 42F00802 		orr	r2, r2, #8
 3136 0148 92B2     		uxth	r2, r2
 3137 014a 1A83     		strh	r2, [r3, #24]	@ movhi
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 3138              		.loc 1 2034 20
 3139 014c 7B68     		ldr	r3, [r7, #4]
 3140 014e 2022     		movs	r2, #32
 3141 0150 5A67     		str	r2, [r3, #116]
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3142              		.loc 1 2035 20
 3143 0152 7B68     		ldr	r3, [r7, #4]
 3144 0154 2022     		movs	r2, #32
 3145 0156 9A67     		str	r2, [r3, #120]
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort complete callback */
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 3146              		.loc 1 2043 5
 3147 0158 7868     		ldr	r0, [r7, #4]
 3148 015a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3149              	.L153:
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 3150              		.loc 1 2047 10
 3151 015e 0023     		movs	r3, #0
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3152              		.loc 1 2048 1
 3153 0160 1846     		mov	r0, r3
 3154 0162 1037     		adds	r7, r7, #16
 3155              	.LCFI104:
 3156              		.cfi_def_cfa_offset 8
 3157 0164 BD46     		mov	sp, r7
 3158              	.LCFI105:
 3159              		.cfi_def_cfa_register 13
 3160              		@ sp needed
 3161 0166 80BD     		pop	{r7, pc}
 3162              	.L156:
 3163              		.align	2
 3164              	.L155:
 3165 0168 00000000 		.word	UART_DMATxAbortCallback
 3166 016c 00000000 		.word	UART_DMARxAbortCallback
 3167              		.cfi_endproc
 3168              	.LFE149:
 3170              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3171              		.align	1
 3172              		.global	HAL_UART_AbortTransmit_IT
 3173              		.syntax unified
 3174              		.thumb
 3175              		.thumb_func
ARM GAS  /tmp/ccFXX6mG.s 			page 92


 3176              		.fpu fpv4-sp-d16
 3178              	HAL_UART_AbortTransmit_IT:
 3179              	.LFB150:
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3180              		.loc 1 2065 1
 3181              		.cfi_startproc
 3182              		@ args = 0, pretend = 0, frame = 8
 3183              		@ frame_needed = 1, uses_anonymous_args = 0
 3184 0000 80B5     		push	{r7, lr}
 3185              	.LCFI106:
 3186              		.cfi_def_cfa_offset 8
 3187              		.cfi_offset 7, -8
 3188              		.cfi_offset 14, -4
 3189 0002 82B0     		sub	sp, sp, #8
 3190              	.LCFI107:
 3191              		.cfi_def_cfa_offset 16
 3192 0004 00AF     		add	r7, sp, #0
 3193              	.LCFI108:
 3194              		.cfi_def_cfa_register 7
 3195 0006 7860     		str	r0, [r7, #4]
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
2067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3196              		.loc 1 2071 3
 3197 0008 7B68     		ldr	r3, [r7, #4]
 3198 000a 1B68     		ldr	r3, [r3]
 3199 000c 1A68     		ldr	r2, [r3]
 3200 000e 7B68     		ldr	r3, [r7, #4]
 3201 0010 1B68     		ldr	r3, [r3]
 3202 0012 22F0C002 		bic	r2, r2, #192
 3203 0016 1A60     		str	r2, [r3]
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3204              		.loc 1 2075 7
 3205 0018 7B68     		ldr	r3, [r7, #4]
 3206 001a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccFXX6mG.s 			page 93


 3207 001c 9B68     		ldr	r3, [r3, #8]
 3208 001e 03F08003 		and	r3, r3, #128
 3209              		.loc 1 2075 6
 3210 0022 802B     		cmp	r3, #128
 3211 0024 2DD1     		bne	.L158
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3212              		.loc 1 2077 5
 3213 0026 7B68     		ldr	r3, [r7, #4]
 3214 0028 1B68     		ldr	r3, [r3]
 3215 002a 9A68     		ldr	r2, [r3, #8]
 3216 002c 7B68     		ldr	r3, [r7, #4]
 3217 002e 1B68     		ldr	r3, [r3]
 3218 0030 22F08002 		bic	r2, r2, #128
 3219 0034 9A60     		str	r2, [r3, #8]
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3220              		.loc 1 2080 14
 3221 0036 7B68     		ldr	r3, [r7, #4]
 3222 0038 9B6E     		ldr	r3, [r3, #104]
 3223              		.loc 1 2080 8
 3224 003a 002B     		cmp	r3, #0
 3225 003c 13D0     		beq	.L159
2081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 3226              		.loc 1 2084 12
 3227 003e 7B68     		ldr	r3, [r7, #4]
 3228 0040 9B6E     		ldr	r3, [r3, #104]
 3229              		.loc 1 2084 40
 3230 0042 194A     		ldr	r2, .L164
 3231 0044 9A63     		str	r2, [r3, #56]
2085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3232              		.loc 1 2087 11
 3233 0046 7B68     		ldr	r3, [r7, #4]
 3234 0048 9B6E     		ldr	r3, [r3, #104]
 3235 004a 1846     		mov	r0, r3
 3236 004c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3237 0050 0346     		mov	r3, r0
 3238              		.loc 1 2087 10
 3239 0052 002B     		cmp	r3, #0
 3240 0054 22D0     		beq	.L162
2088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 3241              		.loc 1 2090 14
 3242 0056 7B68     		ldr	r3, [r7, #4]
 3243 0058 9B6E     		ldr	r3, [r3, #104]
 3244              		.loc 1 2090 22
 3245 005a 9B6B     		ldr	r3, [r3, #56]
 3246              		.loc 1 2090 47
 3247 005c 7A68     		ldr	r2, [r7, #4]
 3248 005e 926E     		ldr	r2, [r2, #104]
ARM GAS  /tmp/ccFXX6mG.s 			page 94


 3249              		.loc 1 2090 9
 3250 0060 1046     		mov	r0, r2
 3251 0062 9847     		blx	r3
 3252              	.LVL0:
 3253 0064 1AE0     		b	.L162
 3254              	.L159:
2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount = 0U;
 3255              		.loc 1 2096 26
 3256 0066 7B68     		ldr	r3, [r7, #4]
 3257 0068 0022     		movs	r2, #0
 3258 006a A3F85220 		strh	r2, [r3, #82]	@ movhi
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear TxISR function pointers */
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = NULL;
 3259              		.loc 1 2099 20
 3260 006e 7B68     		ldr	r3, [r7, #4]
 3261 0070 0022     		movs	r2, #0
 3262 0072 5A66     		str	r2, [r3, #100]
2100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 3263              		.loc 1 2102 21
 3264 0074 7B68     		ldr	r3, [r7, #4]
 3265 0076 2022     		movs	r2, #32
 3266 0078 5A67     		str	r2, [r3, #116]
2103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 3267              		.loc 1 2110 7
 3268 007a 7868     		ldr	r0, [r7, #4]
 3269 007c FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3270 0080 0CE0     		b	.L162
 3271              	.L158:
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 3272              		.loc 1 2117 24
 3273 0082 7B68     		ldr	r3, [r7, #4]
 3274 0084 0022     		movs	r2, #0
 3275 0086 A3F85220 		strh	r2, [r3, #82]	@ movhi
2118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear TxISR function pointers */
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
ARM GAS  /tmp/ccFXX6mG.s 			page 95


 3276              		.loc 1 2120 18
 3277 008a 7B68     		ldr	r3, [r7, #4]
 3278 008c 0022     		movs	r2, #0
 3279 008e 5A66     		str	r2, [r3, #100]
2121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 3280              		.loc 1 2131 19
 3281 0090 7B68     		ldr	r3, [r7, #4]
 3282 0092 2022     		movs	r2, #32
 3283 0094 5A67     		str	r2, [r3, #116]
2132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 3284              		.loc 1 2139 5
 3285 0096 7868     		ldr	r0, [r7, #4]
 3286 0098 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3287              	.L162:
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 3288              		.loc 1 2143 10
 3289 009c 0023     		movs	r3, #0
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3290              		.loc 1 2144 1
 3291 009e 1846     		mov	r0, r3
 3292 00a0 0837     		adds	r7, r7, #8
 3293              	.LCFI109:
 3294              		.cfi_def_cfa_offset 8
 3295 00a2 BD46     		mov	sp, r7
 3296              	.LCFI110:
 3297              		.cfi_def_cfa_register 13
 3298              		@ sp needed
 3299 00a4 80BD     		pop	{r7, pc}
 3300              	.L165:
 3301 00a6 00BF     		.align	2
 3302              	.L164:
 3303 00a8 00000000 		.word	UART_DMATxOnlyAbortCallback
 3304              		.cfi_endproc
 3305              	.LFE150:
 3307              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3308              		.align	1
 3309              		.global	HAL_UART_AbortReceive_IT
ARM GAS  /tmp/ccFXX6mG.s 			page 96


 3310              		.syntax unified
 3311              		.thumb
 3312              		.thumb_func
 3313              		.fpu fpv4-sp-d16
 3315              	HAL_UART_AbortReceive_IT:
 3316              	.LFB151:
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3317              		.loc 1 2161 1
 3318              		.cfi_startproc
 3319              		@ args = 0, pretend = 0, frame = 8
 3320              		@ frame_needed = 1, uses_anonymous_args = 0
 3321 0000 80B5     		push	{r7, lr}
 3322              	.LCFI111:
 3323              		.cfi_def_cfa_offset 8
 3324              		.cfi_offset 7, -8
 3325              		.cfi_offset 14, -4
 3326 0002 82B0     		sub	sp, sp, #8
 3327              	.LCFI112:
 3328              		.cfi_def_cfa_offset 16
 3329 0004 00AF     		add	r7, sp, #0
 3330              	.LCFI113:
 3331              		.cfi_def_cfa_register 7
 3332 0006 7860     		str	r0, [r7, #4]
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
2165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3333              		.loc 1 2167 3
 3334 0008 7B68     		ldr	r3, [r7, #4]
 3335 000a 1B68     		ldr	r3, [r3]
 3336 000c 1A68     		ldr	r2, [r3]
 3337 000e 7B68     		ldr	r3, [r7, #4]
 3338 0010 1B68     		ldr	r3, [r3]
 3339 0012 22F49072 		bic	r2, r2, #288
 3340 0016 1A60     		str	r2, [r3]
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3341              		.loc 1 2168 3
 3342 0018 7B68     		ldr	r3, [r7, #4]
 3343 001a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccFXX6mG.s 			page 97


 3344 001c 9A68     		ldr	r2, [r3, #8]
 3345 001e 7B68     		ldr	r3, [r7, #4]
 3346 0020 1B68     		ldr	r3, [r3]
 3347 0022 22F00102 		bic	r2, r2, #1
 3348 0026 9A60     		str	r2, [r3, #8]
2169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3349              		.loc 1 2172 7
 3350 0028 7B68     		ldr	r3, [r7, #4]
 3351 002a 1B68     		ldr	r3, [r3]
 3352 002c 9B68     		ldr	r3, [r3, #8]
 3353 002e 03F04003 		and	r3, r3, #64
 3354              		.loc 1 2172 6
 3355 0032 402B     		cmp	r3, #64
 3356 0034 3BD1     		bne	.L167
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3357              		.loc 1 2174 5
 3358 0036 7B68     		ldr	r3, [r7, #4]
 3359 0038 1B68     		ldr	r3, [r3]
 3360 003a 9A68     		ldr	r2, [r3, #8]
 3361 003c 7B68     		ldr	r3, [r7, #4]
 3362 003e 1B68     		ldr	r3, [r3]
 3363 0040 22F04002 		bic	r2, r2, #64
 3364 0044 9A60     		str	r2, [r3, #8]
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3365              		.loc 1 2177 14
 3366 0046 7B68     		ldr	r3, [r7, #4]
 3367 0048 DB6E     		ldr	r3, [r3, #108]
 3368              		.loc 1 2177 8
 3369 004a 002B     		cmp	r3, #0
 3370 004c 13D0     		beq	.L168
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 3371              		.loc 1 2181 12
 3372 004e 7B68     		ldr	r3, [r7, #4]
 3373 0050 DB6E     		ldr	r3, [r3, #108]
 3374              		.loc 1 2181 40
 3375 0052 224A     		ldr	r2, .L173
 3376 0054 9A63     		str	r2, [r3, #56]
2182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3377              		.loc 1 2184 11
 3378 0056 7B68     		ldr	r3, [r7, #4]
 3379 0058 DB6E     		ldr	r3, [r3, #108]
 3380 005a 1846     		mov	r0, r3
 3381 005c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3382 0060 0346     		mov	r3, r0
 3383              		.loc 1 2184 10
 3384 0062 002B     		cmp	r3, #0
ARM GAS  /tmp/ccFXX6mG.s 			page 98


 3385 0064 34D0     		beq	.L171
2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3386              		.loc 1 2187 14
 3387 0066 7B68     		ldr	r3, [r7, #4]
 3388 0068 DB6E     		ldr	r3, [r3, #108]
 3389              		.loc 1 2187 22
 3390 006a 9B6B     		ldr	r3, [r3, #56]
 3391              		.loc 1 2187 47
 3392 006c 7A68     		ldr	r2, [r7, #4]
 3393 006e D26E     		ldr	r2, [r2, #108]
 3394              		.loc 1 2187 9
 3395 0070 1046     		mov	r0, r2
 3396 0072 9847     		blx	r3
 3397              	.LVL1:
 3398 0074 2CE0     		b	.L171
 3399              	.L168:
2188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount = 0U;
 3400              		.loc 1 2193 26
 3401 0076 7B68     		ldr	r3, [r7, #4]
 3402 0078 0022     		movs	r2, #0
 3403 007a A3F85A20 		strh	r2, [r3, #90]	@ movhi
2194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
2196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
 3404              		.loc 1 2196 25
 3405 007e 7B68     		ldr	r3, [r7, #4]
 3406 0080 0022     		movs	r2, #0
 3407 0082 5A65     		str	r2, [r3, #84]
2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
 3408              		.loc 1 2199 7
 3409 0084 7B68     		ldr	r3, [r7, #4]
 3410 0086 1B68     		ldr	r3, [r3]
 3411 0088 0F22     		movs	r2, #15
 3412 008a 1A62     		str	r2, [r3, #32]
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Discard the received data */
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3413              		.loc 1 2202 7
 3414 008c 7B68     		ldr	r3, [r7, #4]
 3415 008e 1B68     		ldr	r3, [r3]
 3416 0090 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3417 0092 9AB2     		uxth	r2, r3
 3418 0094 7B68     		ldr	r3, [r7, #4]
 3419 0096 1B68     		ldr	r3, [r3]
 3420 0098 42F00802 		orr	r2, r2, #8
 3421 009c 92B2     		uxth	r2, r2
 3422 009e 1A83     		strh	r2, [r3, #24]	@ movhi
2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccFXX6mG.s 			page 99


2204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 3423              		.loc 1 2205 22
 3424 00a0 7B68     		ldr	r3, [r7, #4]
 3425 00a2 2022     		movs	r2, #32
 3426 00a4 9A67     		str	r2, [r3, #120]
2206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 3427              		.loc 1 2213 7
 3428 00a6 7868     		ldr	r0, [r7, #4]
 3429 00a8 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3430 00ac 10E0     		b	.L171
 3431              	.L167:
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3432              		.loc 1 2220 24
 3433 00ae 7B68     		ldr	r3, [r7, #4]
 3434 00b0 0022     		movs	r2, #0
 3435 00b2 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RxISR function pointer */
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
 3436              		.loc 1 2223 23
 3437 00b6 7B68     		ldr	r3, [r7, #4]
 3438 00b8 0022     		movs	r2, #0
 3439 00ba 5A65     		str	r2, [r3, #84]
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 3440              		.loc 1 2226 5
 3441 00bc 7B68     		ldr	r3, [r7, #4]
 3442 00be 1B68     		ldr	r3, [r3]
 3443 00c0 0F22     		movs	r2, #15
 3444 00c2 1A62     		str	r2, [r3, #32]
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3445              		.loc 1 2229 20
 3446 00c4 7B68     		ldr	r3, [r7, #4]
 3447 00c6 2022     		movs	r2, #32
 3448 00c8 9A67     		str	r2, [r3, #120]
2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
ARM GAS  /tmp/ccFXX6mG.s 			page 100


2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 3449              		.loc 1 2237 5
 3450 00ca 7868     		ldr	r0, [r7, #4]
 3451 00cc FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3452              	.L171:
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 3453              		.loc 1 2241 10
 3454 00d0 0023     		movs	r3, #0
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3455              		.loc 1 2242 1
 3456 00d2 1846     		mov	r0, r3
 3457 00d4 0837     		adds	r7, r7, #8
 3458              	.LCFI114:
 3459              		.cfi_def_cfa_offset 8
 3460 00d6 BD46     		mov	sp, r7
 3461              	.LCFI115:
 3462              		.cfi_def_cfa_register 13
 3463              		@ sp needed
 3464 00d8 80BD     		pop	{r7, pc}
 3465              	.L174:
 3466 00da 00BF     		.align	2
 3467              	.L173:
 3468 00dc 00000000 		.word	UART_DMARxOnlyAbortCallback
 3469              		.cfi_endproc
 3470              	.LFE151:
 3472              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3473              		.align	1
 3474              		.global	HAL_UART_IRQHandler
 3475              		.syntax unified
 3476              		.thumb
 3477              		.thumb_func
 3478              		.fpu fpv4-sp-d16
 3480              	HAL_UART_IRQHandler:
 3481              	.LFB152:
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3482              		.loc 1 2250 1
 3483              		.cfi_startproc
 3484              		@ args = 0, pretend = 0, frame = 32
 3485              		@ frame_needed = 1, uses_anonymous_args = 0
 3486 0000 80B5     		push	{r7, lr}
 3487              	.LCFI116:
 3488              		.cfi_def_cfa_offset 8
 3489              		.cfi_offset 7, -8
 3490              		.cfi_offset 14, -4
 3491 0002 88B0     		sub	sp, sp, #32
ARM GAS  /tmp/ccFXX6mG.s 			page 101


 3492              	.LCFI117:
 3493              		.cfi_def_cfa_offset 40
 3494 0004 00AF     		add	r7, sp, #0
 3495              	.LCFI118:
 3496              		.cfi_def_cfa_register 7
 3497 0006 7860     		str	r0, [r7, #4]
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 3498              		.loc 1 2251 25
 3499 0008 7B68     		ldr	r3, [r7, #4]
 3500 000a 1B68     		ldr	r3, [r3]
 3501              		.loc 1 2251 12
 3502 000c DB69     		ldr	r3, [r3, #28]
 3503 000e FB61     		str	r3, [r7, #28]
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3504              		.loc 1 2252 25
 3505 0010 7B68     		ldr	r3, [r7, #4]
 3506 0012 1B68     		ldr	r3, [r3]
 3507              		.loc 1 2252 12
 3508 0014 1B68     		ldr	r3, [r3]
 3509 0016 BB61     		str	r3, [r7, #24]
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3510              		.loc 1 2253 25
 3511 0018 7B68     		ldr	r3, [r7, #4]
 3512 001a 1B68     		ldr	r3, [r3]
 3513              		.loc 1 2253 12
 3514 001c 9B68     		ldr	r3, [r3, #8]
 3515 001e 7B61     		str	r3, [r7, #20]
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorflags;
2256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorcode;
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If no error occurs */
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
 3516              		.loc 1 2259 14
 3517 0020 FB69     		ldr	r3, [r7, #28]
 3518 0022 03F00F03 		and	r3, r3, #15
 3519 0026 3B61     		str	r3, [r7, #16]
2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (errorflags == 0U)
 3520              		.loc 1 2260 6
 3521 0028 3B69     		ldr	r3, [r7, #16]
 3522 002a 002B     		cmp	r3, #0
 3523 002c 13D1     		bne	.L176
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != 0U)
 3524              		.loc 1 2268 20
 3525 002e FB69     		ldr	r3, [r7, #28]
 3526 0030 03F02003 		and	r3, r3, #32
 3527              		.loc 1 2268 8
 3528 0034 002B     		cmp	r3, #0
 3529 0036 0ED0     		beq	.L176
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
ARM GAS  /tmp/ccFXX6mG.s 			page 102


 3530              		.loc 1 2269 21
 3531 0038 BB69     		ldr	r3, [r7, #24]
 3532 003a 03F02003 		and	r3, r3, #32
 3533              		.loc 1 2269 9
 3534 003e 002B     		cmp	r3, #0
 3535 0040 09D0     		beq	.L176
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->RxISR != NULL)
 3536              		.loc 1 2272 16
 3537 0042 7B68     		ldr	r3, [r7, #4]
 3538 0044 1B6E     		ldr	r3, [r3, #96]
 3539              		.loc 1 2272 10
 3540 0046 002B     		cmp	r3, #0
 3541 0048 00F0FF80 		beq	.L198
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR(huart);
 3542              		.loc 1 2274 14
 3543 004c 7B68     		ldr	r3, [r7, #4]
 3544 004e 1B6E     		ldr	r3, [r3, #96]
 3545              		.loc 1 2274 9
 3546 0050 7868     		ldr	r0, [r7, #4]
 3547 0052 9847     		blx	r3
 3548              	.LVL2:
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
 3549              		.loc 1 2276 7
 3550 0054 F9E0     		b	.L198
 3551              	.L176:
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If some errors occur */
2281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != 0U)
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE)) != 0U))))
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != 0U)
 3552              		.loc 1 2286 6
 3553 0056 3B69     		ldr	r3, [r7, #16]
 3554 0058 002B     		cmp	r3, #0
 3555 005a 00F0C180 		beq	.L179
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
 3556              		.loc 1 2287 20
 3557 005e 7B69     		ldr	r3, [r7, #20]
 3558 0060 03F00103 		and	r3, r3, #1
 3559              		.loc 1 2287 7
 3560 0064 002B     		cmp	r3, #0
 3561 0066 05D1     		bne	.L180
2288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
 3562              		.loc 1 2288 23
 3563 0068 BB69     		ldr	r3, [r7, #24]
 3564 006a 03F49073 		and	r3, r3, #288
 3565              		.loc 1 2288 11
 3566 006e 002B     		cmp	r3, #0
 3567 0070 00F0B680 		beq	.L179
ARM GAS  /tmp/ccFXX6mG.s 			page 103


 3568              	.L180:
2289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 3569              		.loc 1 2292 20
 3570 0074 FB69     		ldr	r3, [r7, #28]
 3571 0076 03F00103 		and	r3, r3, #1
 3572              		.loc 1 2292 8
 3573 007a 002B     		cmp	r3, #0
 3574 007c 0ED0     		beq	.L181
 3575              		.loc 1 2292 55 discriminator 1
 3576 007e BB69     		ldr	r3, [r7, #24]
 3577 0080 03F48073 		and	r3, r3, #256
 3578              		.loc 1 2292 43 discriminator 1
 3579 0084 002B     		cmp	r3, #0
 3580 0086 09D0     		beq	.L181
2293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 3581              		.loc 1 2294 7
 3582 0088 7B68     		ldr	r3, [r7, #4]
 3583 008a 1B68     		ldr	r3, [r3]
 3584 008c 0122     		movs	r2, #1
 3585 008e 1A62     		str	r2, [r3, #32]
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 3586              		.loc 1 2296 24
 3587 0090 7B68     		ldr	r3, [r7, #4]
 3588 0092 DB6F     		ldr	r3, [r3, #124]
 3589 0094 43F00102 		orr	r2, r3, #1
 3590 0098 7B68     		ldr	r3, [r7, #4]
 3591 009a DA67     		str	r2, [r3, #124]
 3592              	.L181:
2297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 3593              		.loc 1 2300 20
 3594 009c FB69     		ldr	r3, [r7, #28]
 3595 009e 03F00203 		and	r3, r3, #2
 3596              		.loc 1 2300 8
 3597 00a2 002B     		cmp	r3, #0
 3598 00a4 0ED0     		beq	.L182
 3599              		.loc 1 2300 55 discriminator 1
 3600 00a6 7B69     		ldr	r3, [r7, #20]
 3601 00a8 03F00103 		and	r3, r3, #1
 3602              		.loc 1 2300 43 discriminator 1
 3603 00ac 002B     		cmp	r3, #0
 3604 00ae 09D0     		beq	.L182
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 3605              		.loc 1 2302 7
 3606 00b0 7B68     		ldr	r3, [r7, #4]
 3607 00b2 1B68     		ldr	r3, [r3]
 3608 00b4 0222     		movs	r2, #2
 3609 00b6 1A62     		str	r2, [r3, #32]
2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccFXX6mG.s 			page 104


2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 3610              		.loc 1 2304 24
 3611 00b8 7B68     		ldr	r3, [r7, #4]
 3612 00ba DB6F     		ldr	r3, [r3, #124]
 3613 00bc 43F00402 		orr	r2, r3, #4
 3614 00c0 7B68     		ldr	r3, [r7, #4]
 3615 00c2 DA67     		str	r2, [r3, #124]
 3616              	.L182:
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 3617              		.loc 1 2308 20
 3618 00c4 FB69     		ldr	r3, [r7, #28]
 3619 00c6 03F00403 		and	r3, r3, #4
 3620              		.loc 1 2308 8
 3621 00ca 002B     		cmp	r3, #0
 3622 00cc 0ED0     		beq	.L183
 3623              		.loc 1 2308 55 discriminator 1
 3624 00ce 7B69     		ldr	r3, [r7, #20]
 3625 00d0 03F00103 		and	r3, r3, #1
 3626              		.loc 1 2308 43 discriminator 1
 3627 00d4 002B     		cmp	r3, #0
 3628 00d6 09D0     		beq	.L183
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 3629              		.loc 1 2310 7
 3630 00d8 7B68     		ldr	r3, [r7, #4]
 3631 00da 1B68     		ldr	r3, [r3]
 3632 00dc 0422     		movs	r2, #4
 3633 00de 1A62     		str	r2, [r3, #32]
2311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 3634              		.loc 1 2312 24
 3635 00e0 7B68     		ldr	r3, [r7, #4]
 3636 00e2 DB6F     		ldr	r3, [r3, #124]
 3637 00e4 43F00202 		orr	r2, r3, #2
 3638 00e8 7B68     		ldr	r3, [r7, #4]
 3639 00ea DA67     		str	r2, [r3, #124]
 3640              	.L183:
2313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
2319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
 3641              		.loc 1 2321 20
 3642 00ec FB69     		ldr	r3, [r7, #28]
 3643 00ee 03F00803 		and	r3, r3, #8
 3644              		.loc 1 2321 8
 3645 00f2 002B     		cmp	r3, #0
 3646 00f4 13D0     		beq	.L184
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 3647              		.loc 1 2322 22
ARM GAS  /tmp/ccFXX6mG.s 			page 105


 3648 00f6 BB69     		ldr	r3, [r7, #24]
 3649 00f8 03F02003 		and	r3, r3, #32
 3650              		.loc 1 2322 9
 3651 00fc 002B     		cmp	r3, #0
 3652 00fe 04D1     		bne	.L185
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 3653              		.loc 1 2323 22 discriminator 1
 3654 0100 7B69     		ldr	r3, [r7, #20]
 3655 0102 03F00103 		and	r3, r3, #1
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 3656              		.loc 1 2322 49 discriminator 1
 3657 0106 002B     		cmp	r3, #0
 3658 0108 09D0     		beq	.L184
 3659              	.L185:
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 3660              		.loc 1 2326 7
 3661 010a 7B68     		ldr	r3, [r7, #4]
 3662 010c 1B68     		ldr	r3, [r3]
 3663 010e 0822     		movs	r2, #8
 3664 0110 1A62     		str	r2, [r3, #32]
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 3665              		.loc 1 2328 24
 3666 0112 7B68     		ldr	r3, [r7, #4]
 3667 0114 DB6F     		ldr	r3, [r3, #124]
 3668 0116 43F00802 		orr	r2, r3, #8
 3669 011a 7B68     		ldr	r3, [r7, #4]
 3670 011c DA67     		str	r2, [r3, #124]
 3671              	.L184:
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 3672              		.loc 1 2332 14
 3673 011e 7B68     		ldr	r3, [r7, #4]
 3674 0120 DB6F     		ldr	r3, [r3, #124]
 3675              		.loc 1 2332 8
 3676 0122 002B     		cmp	r3, #0
 3677 0124 00F09380 		beq	.L199
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != 0U)
 3678              		.loc 1 2340 22
 3679 0128 FB69     		ldr	r3, [r7, #28]
 3680 012a 03F02003 		and	r3, r3, #32
 3681              		.loc 1 2340 10
 3682 012e 002B     		cmp	r3, #0
 3683 0130 0CD0     		beq	.L187
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
 3684              		.loc 1 2341 23
ARM GAS  /tmp/ccFXX6mG.s 			page 106


 3685 0132 BB69     		ldr	r3, [r7, #24]
 3686 0134 03F02003 		and	r3, r3, #32
 3687              		.loc 1 2341 11
 3688 0138 002B     		cmp	r3, #0
 3689 013a 07D0     		beq	.L187
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (huart->RxISR != NULL)
 3690              		.loc 1 2344 18
 3691 013c 7B68     		ldr	r3, [r7, #4]
 3692 013e 1B6E     		ldr	r3, [r3, #96]
 3693              		.loc 1 2344 12
 3694 0140 002B     		cmp	r3, #0
 3695 0142 03D0     		beq	.L187
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->RxISR(huart);
 3696              		.loc 1 2346 16
 3697 0144 7B68     		ldr	r3, [r7, #4]
 3698 0146 1B6E     		ldr	r3, [r3, #96]
 3699              		.loc 1 2346 11
 3700 0148 7868     		ldr	r0, [r7, #4]
 3701 014a 9847     		blx	r3
 3702              	.LVL3:
 3703              	.L187:
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          consider error as blocking */
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       errorcode = huart->ErrorCode;
 3704              		.loc 1 2352 17
 3705 014c 7B68     		ldr	r3, [r7, #4]
 3706 014e DB6F     		ldr	r3, [r3, #124]
 3707 0150 FB60     		str	r3, [r7, #12]
2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 3708              		.loc 1 2353 12
 3709 0152 7B68     		ldr	r3, [r7, #4]
 3710 0154 1B68     		ldr	r3, [r3]
 3711 0156 9B68     		ldr	r3, [r3, #8]
 3712 0158 03F04003 		and	r3, r3, #64
 3713              		.loc 1 2353 10
 3714 015c 402B     		cmp	r3, #64
 3715 015e 04D0     		beq	.L188
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ((errorcode & HAL_UART_ERROR_ORE) != 0U))
 3716              		.loc 1 2354 23 discriminator 1
 3717 0160 FB68     		ldr	r3, [r7, #12]
 3718 0162 03F00803 		and	r3, r3, #8
2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 3719              		.loc 1 2353 66 discriminator 1
 3720 0166 002B     		cmp	r3, #0
 3721 0168 31D0     		beq	.L189
 3722              	.L188:
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
ARM GAS  /tmp/ccFXX6mG.s 			page 107


 3723              		.loc 1 2359 9
 3724 016a 7868     		ldr	r0, [r7, #4]
 3725 016c FFF7FEFF 		bl	UART_EndRxTransfer
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3726              		.loc 1 2362 13
 3727 0170 7B68     		ldr	r3, [r7, #4]
 3728 0172 1B68     		ldr	r3, [r3]
 3729 0174 9B68     		ldr	r3, [r3, #8]
 3730 0176 03F04003 		and	r3, r3, #64
 3731              		.loc 1 2362 12
 3732 017a 402B     		cmp	r3, #64
 3733 017c 23D1     		bne	.L190
2363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3734              		.loc 1 2364 11
 3735 017e 7B68     		ldr	r3, [r7, #4]
 3736 0180 1B68     		ldr	r3, [r3]
 3737 0182 9A68     		ldr	r2, [r3, #8]
 3738 0184 7B68     		ldr	r3, [r7, #4]
 3739 0186 1B68     		ldr	r3, [r3]
 3740 0188 22F04002 		bic	r2, r2, #64
 3741 018c 9A60     		str	r2, [r3, #8]
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 3742              		.loc 1 2367 20
 3743 018e 7B68     		ldr	r3, [r7, #4]
 3744 0190 DB6E     		ldr	r3, [r3, #108]
 3745              		.loc 1 2367 14
 3746 0192 002B     		cmp	r3, #0
 3747 0194 13D0     		beq	.L191
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
2369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 3748              		.loc 1 2371 18
 3749 0196 7B68     		ldr	r3, [r7, #4]
 3750 0198 DB6E     		ldr	r3, [r3, #108]
 3751              		.loc 1 2371 46
 3752 019a 304A     		ldr	r2, .L202
 3753 019c 9A63     		str	r2, [r3, #56]
2372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Abort DMA RX */
2374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3754              		.loc 1 2374 17
 3755 019e 7B68     		ldr	r3, [r7, #4]
 3756 01a0 DB6E     		ldr	r3, [r3, #108]
 3757 01a2 1846     		mov	r0, r3
 3758 01a4 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3759 01a8 0346     		mov	r3, r0
 3760              		.loc 1 2374 16
 3761 01aa 002B     		cmp	r3, #0
 3762 01ac 16D0     		beq	.L200
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             {
2376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
ARM GAS  /tmp/ccFXX6mG.s 			page 108


2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3763              		.loc 1 2377 20
 3764 01ae 7B68     		ldr	r3, [r7, #4]
 3765 01b0 DB6E     		ldr	r3, [r3, #108]
 3766              		.loc 1 2377 28
 3767 01b2 9B6B     		ldr	r3, [r3, #56]
 3768              		.loc 1 2377 53
 3769 01b4 7A68     		ldr	r2, [r7, #4]
 3770 01b6 D26E     		ldr	r2, [r2, #108]
 3771              		.loc 1 2377 15
 3772 01b8 1046     		mov	r0, r2
 3773 01ba 9847     		blx	r3
 3774              	.LVL4:
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3775              		.loc 1 2362 12
 3776 01bc 0EE0     		b	.L200
 3777              	.L191:
2378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             }
2379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
2380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           else
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
2382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Call user error callback */
2383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /*Call registered error callback*/
2385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 3778              		.loc 1 2388 13
 3779 01be 7868     		ldr	r0, [r7, #4]
 3780 01c0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3781              		.loc 1 2362 12
 3782 01c4 0AE0     		b	.L200
 3783              	.L190:
2389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
2392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Call user error callback */
2396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /*Call registered error callback*/
2398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 3784              		.loc 1 2401 11
 3785 01c6 7868     		ldr	r0, [r7, #4]
 3786 01c8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3787              		.loc 1 2362 12
 3788 01cc 06E0     		b	.L200
 3789              	.L189:
2402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
ARM GAS  /tmp/ccFXX6mG.s 			page 109


2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error is notified to user through user error callback */
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered error callback*/
2411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 3790              		.loc 1 2414 9
 3791 01ce 7868     		ldr	r0, [r7, #4]
 3792 01d0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3793              		.loc 1 2416 26
 3794 01d4 7B68     		ldr	r3, [r7, #4]
 3795 01d6 0022     		movs	r2, #0
 3796 01d8 DA67     		str	r2, [r3, #124]
2417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 3797              		.loc 1 2419 5
 3798 01da 38E0     		b	.L199
 3799              	.L200:
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3800              		.loc 1 2362 12
 3801 01dc 00BF     		nop
 3802              		.loc 1 2419 5
 3803 01de 36E0     		b	.L199
 3804              	.L179:
2420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   } /* End if some error occurs */
2422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
 3805              		.loc 1 2424 18
 3806 01e0 FB69     		ldr	r3, [r7, #28]
 3807 01e2 03F48013 		and	r3, r3, #1048576
 3808              		.loc 1 2424 6
 3809 01e6 002B     		cmp	r3, #0
 3810 01e8 0DD0     		beq	.L195
 3811              		.loc 1 2424 54 discriminator 1
 3812 01ea 7B69     		ldr	r3, [r7, #20]
 3813 01ec 03F48003 		and	r3, r3, #4194304
 3814              		.loc 1 2424 42 discriminator 1
 3815 01f0 002B     		cmp	r3, #0
 3816 01f2 08D0     		beq	.L195
2425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 3817              		.loc 1 2426 5
 3818 01f4 7B68     		ldr	r3, [r7, #4]
 3819 01f6 1B68     		ldr	r3, [r3]
 3820 01f8 4FF48012 		mov	r2, #1048576
 3821 01fc 1A62     		str	r2, [r3, #32]
2427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccFXX6mG.s 			page 110


2428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->WakeupCallback(huart);
2434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 3822              		.loc 1 2436 5
 3823 01fe 7868     		ldr	r0, [r7, #4]
 3824 0200 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 3825              		.loc 1 2438 5
 3826 0204 26E0     		b	.L175
 3827              	.L195:
2439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
2444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
2445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != 0U)
 3828              		.loc 1 2447 18
 3829 0206 FB69     		ldr	r3, [r7, #28]
 3830 0208 03F08003 		and	r3, r3, #128
 3831              		.loc 1 2447 6
 3832 020c 002B     		cmp	r3, #0
 3833 020e 0DD0     		beq	.L196
2448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
 3834              		.loc 1 2448 19
 3835 0210 BB69     		ldr	r3, [r7, #24]
 3836 0212 03F08003 		and	r3, r3, #128
 3837              		.loc 1 2448 7
 3838 0216 002B     		cmp	r3, #0
 3839 0218 08D0     		beq	.L196
2449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxISR != NULL)
 3840              		.loc 1 2451 14
 3841 021a 7B68     		ldr	r3, [r7, #4]
 3842 021c 5B6E     		ldr	r3, [r3, #100]
 3843              		.loc 1 2451 8
 3844 021e 002B     		cmp	r3, #0
 3845 0220 17D0     		beq	.L201
2452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR(huart);
 3846              		.loc 1 2453 12
 3847 0222 7B68     		ldr	r3, [r7, #4]
 3848 0224 5B6E     		ldr	r3, [r3, #100]
 3849              		.loc 1 2453 7
 3850 0226 7868     		ldr	r0, [r7, #4]
 3851 0228 9847     		blx	r3
 3852              	.LVL5:
ARM GAS  /tmp/ccFXX6mG.s 			page 111


2454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 3853              		.loc 1 2455 5
 3854 022a 12E0     		b	.L201
 3855              	.L196:
2456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 3856              		.loc 1 2459 18
 3857 022c FB69     		ldr	r3, [r7, #28]
 3858 022e 03F04003 		and	r3, r3, #64
 3859              		.loc 1 2459 6
 3860 0232 002B     		cmp	r3, #0
 3861 0234 0ED0     		beq	.L175
 3862              		.loc 1 2459 53 discriminator 1
 3863 0236 BB69     		ldr	r3, [r7, #24]
 3864 0238 03F04003 		and	r3, r3, #64
 3865              		.loc 1 2459 41 discriminator 1
 3866 023c 002B     		cmp	r3, #0
 3867 023e 09D0     		beq	.L175
2460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 3868              		.loc 1 2461 5
 3869 0240 7868     		ldr	r0, [r7, #4]
 3870 0242 FFF7FEFF 		bl	UART_EndTransmit_IT
2462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 3871              		.loc 1 2462 5
 3872 0246 00BF     		nop
 3873 0248 04E0     		b	.L175
 3874              	.L198:
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3875              		.loc 1 2276 7
 3876 024a 00BF     		nop
 3877 024c 02E0     		b	.L175
 3878              	.L199:
2419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3879              		.loc 1 2419 5
 3880 024e 00BF     		nop
 3881 0250 00E0     		b	.L175
 3882              	.L201:
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3883              		.loc 1 2455 5
 3884 0252 00BF     		nop
 3885              	.L175:
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
2468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
ARM GAS  /tmp/ccFXX6mG.s 			page 112


2475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
2481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
2488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3886              		.loc 1 2492 1
 3887 0254 2037     		adds	r7, r7, #32
 3888              	.LCFI119:
 3889              		.cfi_def_cfa_offset 8
 3890 0256 BD46     		mov	sp, r7
 3891              	.LCFI120:
 3892              		.cfi_def_cfa_register 13
 3893              		@ sp needed
 3894 0258 80BD     		pop	{r7, pc}
 3895              	.L203:
 3896 025a 00BF     		.align	2
 3897              	.L202:
 3898 025c 00000000 		.word	UART_DMAAbortOnError
 3899              		.cfi_endproc
 3900              	.LFE152:
 3902              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3903              		.align	1
 3904              		.weak	HAL_UART_TxCpltCallback
 3905              		.syntax unified
 3906              		.thumb
 3907              		.thumb_func
 3908              		.fpu fpv4-sp-d16
 3910              	HAL_UART_TxCpltCallback:
 3911              	.LFB153:
2493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3912              		.loc 1 2500 1
 3913              		.cfi_startproc
 3914              		@ args = 0, pretend = 0, frame = 8
 3915              		@ frame_needed = 1, uses_anonymous_args = 0
 3916              		@ link register save eliminated.
 3917 0000 80B4     		push	{r7}
 3918              	.LCFI121:
ARM GAS  /tmp/ccFXX6mG.s 			page 113


 3919              		.cfi_def_cfa_offset 4
 3920              		.cfi_offset 7, -4
 3921 0002 83B0     		sub	sp, sp, #12
 3922              	.LCFI122:
 3923              		.cfi_def_cfa_offset 16
 3924 0004 00AF     		add	r7, sp, #0
 3925              	.LCFI123:
 3926              		.cfi_def_cfa_register 7
 3927 0006 7860     		str	r0, [r7, #4]
2501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3928              		.loc 1 2507 1
 3929 0008 00BF     		nop
 3930 000a 0C37     		adds	r7, r7, #12
 3931              	.LCFI124:
 3932              		.cfi_def_cfa_offset 4
 3933 000c BD46     		mov	sp, r7
 3934              	.LCFI125:
 3935              		.cfi_def_cfa_register 13
 3936              		@ sp needed
 3937 000e 5DF8047B 		ldr	r7, [sp], #4
 3938              	.LCFI126:
 3939              		.cfi_restore 7
 3940              		.cfi_def_cfa_offset 0
 3941 0012 7047     		bx	lr
 3942              		.cfi_endproc
 3943              	.LFE153:
 3945              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3946              		.align	1
 3947              		.weak	HAL_UART_TxHalfCpltCallback
 3948              		.syntax unified
 3949              		.thumb
 3950              		.thumb_func
 3951              		.fpu fpv4-sp-d16
 3953              	HAL_UART_TxHalfCpltCallback:
 3954              	.LFB154:
2508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3955              		.loc 1 2515 1
 3956              		.cfi_startproc
 3957              		@ args = 0, pretend = 0, frame = 8
 3958              		@ frame_needed = 1, uses_anonymous_args = 0
 3959              		@ link register save eliminated.
 3960 0000 80B4     		push	{r7}
 3961              	.LCFI127:
 3962              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccFXX6mG.s 			page 114


 3963              		.cfi_offset 7, -4
 3964 0002 83B0     		sub	sp, sp, #12
 3965              	.LCFI128:
 3966              		.cfi_def_cfa_offset 16
 3967 0004 00AF     		add	r7, sp, #0
 3968              	.LCFI129:
 3969              		.cfi_def_cfa_register 7
 3970 0006 7860     		str	r0, [r7, #4]
2516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3971              		.loc 1 2522 1
 3972 0008 00BF     		nop
 3973 000a 0C37     		adds	r7, r7, #12
 3974              	.LCFI130:
 3975              		.cfi_def_cfa_offset 4
 3976 000c BD46     		mov	sp, r7
 3977              	.LCFI131:
 3978              		.cfi_def_cfa_register 13
 3979              		@ sp needed
 3980 000e 5DF8047B 		ldr	r7, [sp], #4
 3981              	.LCFI132:
 3982              		.cfi_restore 7
 3983              		.cfi_def_cfa_offset 0
 3984 0012 7047     		bx	lr
 3985              		.cfi_endproc
 3986              	.LFE154:
 3988              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3989              		.align	1
 3990              		.weak	HAL_UART_RxCpltCallback
 3991              		.syntax unified
 3992              		.thumb
 3993              		.thumb_func
 3994              		.fpu fpv4-sp-d16
 3996              	HAL_UART_RxCpltCallback:
 3997              	.LFB155:
2523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3998              		.loc 1 2530 1
 3999              		.cfi_startproc
 4000              		@ args = 0, pretend = 0, frame = 8
 4001              		@ frame_needed = 1, uses_anonymous_args = 0
 4002              		@ link register save eliminated.
 4003 0000 80B4     		push	{r7}
 4004              	.LCFI133:
 4005              		.cfi_def_cfa_offset 4
 4006              		.cfi_offset 7, -4
ARM GAS  /tmp/ccFXX6mG.s 			page 115


 4007 0002 83B0     		sub	sp, sp, #12
 4008              	.LCFI134:
 4009              		.cfi_def_cfa_offset 16
 4010 0004 00AF     		add	r7, sp, #0
 4011              	.LCFI135:
 4012              		.cfi_def_cfa_register 7
 4013 0006 7860     		str	r0, [r7, #4]
2531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4014              		.loc 1 2537 1
 4015 0008 00BF     		nop
 4016 000a 0C37     		adds	r7, r7, #12
 4017              	.LCFI136:
 4018              		.cfi_def_cfa_offset 4
 4019 000c BD46     		mov	sp, r7
 4020              	.LCFI137:
 4021              		.cfi_def_cfa_register 13
 4022              		@ sp needed
 4023 000e 5DF8047B 		ldr	r7, [sp], #4
 4024              	.LCFI138:
 4025              		.cfi_restore 7
 4026              		.cfi_def_cfa_offset 0
 4027 0012 7047     		bx	lr
 4028              		.cfi_endproc
 4029              	.LFE155:
 4031              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 4032              		.align	1
 4033              		.weak	HAL_UART_RxHalfCpltCallback
 4034              		.syntax unified
 4035              		.thumb
 4036              		.thumb_func
 4037              		.fpu fpv4-sp-d16
 4039              	HAL_UART_RxHalfCpltCallback:
 4040              	.LFB156:
2538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4041              		.loc 1 2545 1
 4042              		.cfi_startproc
 4043              		@ args = 0, pretend = 0, frame = 8
 4044              		@ frame_needed = 1, uses_anonymous_args = 0
 4045              		@ link register save eliminated.
 4046 0000 80B4     		push	{r7}
 4047              	.LCFI139:
 4048              		.cfi_def_cfa_offset 4
 4049              		.cfi_offset 7, -4
 4050 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccFXX6mG.s 			page 116


 4051              	.LCFI140:
 4052              		.cfi_def_cfa_offset 16
 4053 0004 00AF     		add	r7, sp, #0
 4054              	.LCFI141:
 4055              		.cfi_def_cfa_register 7
 4056 0006 7860     		str	r0, [r7, #4]
2546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4057              		.loc 1 2552 1
 4058 0008 00BF     		nop
 4059 000a 0C37     		adds	r7, r7, #12
 4060              	.LCFI142:
 4061              		.cfi_def_cfa_offset 4
 4062 000c BD46     		mov	sp, r7
 4063              	.LCFI143:
 4064              		.cfi_def_cfa_register 13
 4065              		@ sp needed
 4066 000e 5DF8047B 		ldr	r7, [sp], #4
 4067              	.LCFI144:
 4068              		.cfi_restore 7
 4069              		.cfi_def_cfa_offset 0
 4070 0012 7047     		bx	lr
 4071              		.cfi_endproc
 4072              	.LFE156:
 4074              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 4075              		.align	1
 4076              		.weak	HAL_UART_ErrorCallback
 4077              		.syntax unified
 4078              		.thumb
 4079              		.thumb_func
 4080              		.fpu fpv4-sp-d16
 4082              	HAL_UART_ErrorCallback:
 4083              	.LFB157:
2553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART error callback.
2556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4084              		.loc 1 2560 1
 4085              		.cfi_startproc
 4086              		@ args = 0, pretend = 0, frame = 8
 4087              		@ frame_needed = 1, uses_anonymous_args = 0
 4088              		@ link register save eliminated.
 4089 0000 80B4     		push	{r7}
 4090              	.LCFI145:
 4091              		.cfi_def_cfa_offset 4
 4092              		.cfi_offset 7, -4
 4093 0002 83B0     		sub	sp, sp, #12
 4094              	.LCFI146:
ARM GAS  /tmp/ccFXX6mG.s 			page 117


 4095              		.cfi_def_cfa_offset 16
 4096 0004 00AF     		add	r7, sp, #0
 4097              	.LCFI147:
 4098              		.cfi_def_cfa_register 7
 4099 0006 7860     		str	r0, [r7, #4]
2561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4100              		.loc 1 2567 1
 4101 0008 00BF     		nop
 4102 000a 0C37     		adds	r7, r7, #12
 4103              	.LCFI148:
 4104              		.cfi_def_cfa_offset 4
 4105 000c BD46     		mov	sp, r7
 4106              	.LCFI149:
 4107              		.cfi_def_cfa_register 13
 4108              		@ sp needed
 4109 000e 5DF8047B 		ldr	r7, [sp], #4
 4110              	.LCFI150:
 4111              		.cfi_restore 7
 4112              		.cfi_def_cfa_offset 0
 4113 0012 7047     		bx	lr
 4114              		.cfi_endproc
 4115              	.LFE157:
 4117              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 4118              		.align	1
 4119              		.weak	HAL_UART_AbortCpltCallback
 4120              		.syntax unified
 4121              		.thumb
 4122              		.thumb_func
 4123              		.fpu fpv4-sp-d16
 4125              	HAL_UART_AbortCpltCallback:
 4126              	.LFB158:
2568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4127              		.loc 1 2575 1
 4128              		.cfi_startproc
 4129              		@ args = 0, pretend = 0, frame = 8
 4130              		@ frame_needed = 1, uses_anonymous_args = 0
 4131              		@ link register save eliminated.
 4132 0000 80B4     		push	{r7}
 4133              	.LCFI151:
 4134              		.cfi_def_cfa_offset 4
 4135              		.cfi_offset 7, -4
 4136 0002 83B0     		sub	sp, sp, #12
 4137              	.LCFI152:
 4138              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccFXX6mG.s 			page 118


 4139 0004 00AF     		add	r7, sp, #0
 4140              	.LCFI153:
 4141              		.cfi_def_cfa_register 7
 4142 0006 7860     		str	r0, [r7, #4]
2576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4143              		.loc 1 2582 1
 4144 0008 00BF     		nop
 4145 000a 0C37     		adds	r7, r7, #12
 4146              	.LCFI154:
 4147              		.cfi_def_cfa_offset 4
 4148 000c BD46     		mov	sp, r7
 4149              	.LCFI155:
 4150              		.cfi_def_cfa_register 13
 4151              		@ sp needed
 4152 000e 5DF8047B 		ldr	r7, [sp], #4
 4153              	.LCFI156:
 4154              		.cfi_restore 7
 4155              		.cfi_def_cfa_offset 0
 4156 0012 7047     		bx	lr
 4157              		.cfi_endproc
 4158              	.LFE158:
 4160              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 4161              		.align	1
 4162              		.weak	HAL_UART_AbortTransmitCpltCallback
 4163              		.syntax unified
 4164              		.thumb
 4165              		.thumb_func
 4166              		.fpu fpv4-sp-d16
 4168              	HAL_UART_AbortTransmitCpltCallback:
 4169              	.LFB159:
2583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4170              		.loc 1 2590 1
 4171              		.cfi_startproc
 4172              		@ args = 0, pretend = 0, frame = 8
 4173              		@ frame_needed = 1, uses_anonymous_args = 0
 4174              		@ link register save eliminated.
 4175 0000 80B4     		push	{r7}
 4176              	.LCFI157:
 4177              		.cfi_def_cfa_offset 4
 4178              		.cfi_offset 7, -4
 4179 0002 83B0     		sub	sp, sp, #12
 4180              	.LCFI158:
 4181              		.cfi_def_cfa_offset 16
 4182 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccFXX6mG.s 			page 119


 4183              	.LCFI159:
 4184              		.cfi_def_cfa_register 7
 4185 0006 7860     		str	r0, [r7, #4]
2591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4186              		.loc 1 2597 1
 4187 0008 00BF     		nop
 4188 000a 0C37     		adds	r7, r7, #12
 4189              	.LCFI160:
 4190              		.cfi_def_cfa_offset 4
 4191 000c BD46     		mov	sp, r7
 4192              	.LCFI161:
 4193              		.cfi_def_cfa_register 13
 4194              		@ sp needed
 4195 000e 5DF8047B 		ldr	r7, [sp], #4
 4196              	.LCFI162:
 4197              		.cfi_restore 7
 4198              		.cfi_def_cfa_offset 0
 4199 0012 7047     		bx	lr
 4200              		.cfi_endproc
 4201              	.LFE159:
 4203              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 4204              		.align	1
 4205              		.weak	HAL_UART_AbortReceiveCpltCallback
 4206              		.syntax unified
 4207              		.thumb
 4208              		.thumb_func
 4209              		.fpu fpv4-sp-d16
 4211              	HAL_UART_AbortReceiveCpltCallback:
 4212              	.LFB160:
2598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4213              		.loc 1 2605 1
 4214              		.cfi_startproc
 4215              		@ args = 0, pretend = 0, frame = 8
 4216              		@ frame_needed = 1, uses_anonymous_args = 0
 4217              		@ link register save eliminated.
 4218 0000 80B4     		push	{r7}
 4219              	.LCFI163:
 4220              		.cfi_def_cfa_offset 4
 4221              		.cfi_offset 7, -4
 4222 0002 83B0     		sub	sp, sp, #12
 4223              	.LCFI164:
 4224              		.cfi_def_cfa_offset 16
 4225 0004 00AF     		add	r7, sp, #0
 4226              	.LCFI165:
ARM GAS  /tmp/ccFXX6mG.s 			page 120


 4227              		.cfi_def_cfa_register 7
 4228 0006 7860     		str	r0, [r7, #4]
2606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4229              		.loc 1 2612 1
 4230 0008 00BF     		nop
 4231 000a 0C37     		adds	r7, r7, #12
 4232              	.LCFI166:
 4233              		.cfi_def_cfa_offset 4
 4234 000c BD46     		mov	sp, r7
 4235              	.LCFI167:
 4236              		.cfi_def_cfa_register 13
 4237              		@ sp needed
 4238 000e 5DF8047B 		ldr	r7, [sp], #4
 4239              	.LCFI168:
 4240              		.cfi_restore 7
 4241              		.cfi_def_cfa_offset 0
 4242 0012 7047     		bx	lr
 4243              		.cfi_endproc
 4244              	.LFE160:
 4246              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 4247              		.align	1
 4248              		.global	HAL_MultiProcessor_EnableMuteMode
 4249              		.syntax unified
 4250              		.thumb
 4251              		.thumb_func
 4252              		.fpu fpv4-sp-d16
 4254              	HAL_MultiProcessor_EnableMuteMode:
 4255              	.LFB161:
2613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief   UART control functions
2620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
2621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
2622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
2626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
ARM GAS  /tmp/ccFXX6mG.s 			page 121


2636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
2637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4256              		.loc 1 2647 1
 4257              		.cfi_startproc
 4258              		@ args = 0, pretend = 0, frame = 8
 4259              		@ frame_needed = 1, uses_anonymous_args = 0
 4260 0000 80B5     		push	{r7, lr}
 4261              	.LCFI169:
 4262              		.cfi_def_cfa_offset 8
 4263              		.cfi_offset 7, -8
 4264              		.cfi_offset 14, -4
 4265 0002 82B0     		sub	sp, sp, #8
 4266              	.LCFI170:
 4267              		.cfi_def_cfa_offset 16
 4268 0004 00AF     		add	r7, sp, #0
 4269              	.LCFI171:
 4270              		.cfi_def_cfa_register 7
 4271 0006 7860     		str	r0, [r7, #4]
2648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4272              		.loc 1 2648 3
 4273 0008 7B68     		ldr	r3, [r7, #4]
 4274 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4275 000e 012B     		cmp	r3, #1
 4276 0010 01D1     		bne	.L213
 4277              		.loc 1 2648 3 is_stmt 0 discriminator 1
 4278 0012 0223     		movs	r3, #2
 4279 0014 15E0     		b	.L214
 4280              	.L213:
 4281              		.loc 1 2648 3 discriminator 2
 4282 0016 7B68     		ldr	r3, [r7, #4]
 4283 0018 0122     		movs	r2, #1
 4284 001a 83F87020 		strb	r2, [r3, #112]
2649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4285              		.loc 1 2650 17 is_stmt 1 discriminator 2
 4286 001e 7B68     		ldr	r3, [r7, #4]
 4287 0020 2422     		movs	r2, #36
 4288 0022 5A67     		str	r2, [r3, #116]
2651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 4289              		.loc 1 2653 3 discriminator 2
 4290 0024 7B68     		ldr	r3, [r7, #4]
 4291 0026 1B68     		ldr	r3, [r3]
 4292 0028 1A68     		ldr	r2, [r3]
 4293 002a 7B68     		ldr	r3, [r7, #4]
 4294 002c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccFXX6mG.s 			page 122


 4295 002e 42F40052 		orr	r2, r2, #8192
 4296 0032 1A60     		str	r2, [r3]
2654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4297              		.loc 1 2655 17 discriminator 2
 4298 0034 7B68     		ldr	r3, [r7, #4]
 4299 0036 2022     		movs	r2, #32
 4300 0038 5A67     		str	r2, [r3, #116]
2656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 4301              		.loc 1 2657 11 discriminator 2
 4302 003a 7868     		ldr	r0, [r7, #4]
 4303 003c FFF7FEFF 		bl	UART_CheckIdleState
 4304 0040 0346     		mov	r3, r0
 4305              	.L214:
2658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4306              		.loc 1 2658 1
 4307 0042 1846     		mov	r0, r3
 4308 0044 0837     		adds	r7, r7, #8
 4309              	.LCFI172:
 4310              		.cfi_def_cfa_offset 8
 4311 0046 BD46     		mov	sp, r7
 4312              	.LCFI173:
 4313              		.cfi_def_cfa_register 13
 4314              		@ sp needed
 4315 0048 80BD     		pop	{r7, pc}
 4316              		.cfi_endproc
 4317              	.LFE161:
 4319              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 4320              		.align	1
 4321              		.global	HAL_MultiProcessor_DisableMuteMode
 4322              		.syntax unified
 4323              		.thumb
 4324              		.thumb_func
 4325              		.fpu fpv4-sp-d16
 4327              	HAL_MultiProcessor_DisableMuteMode:
 4328              	.LFB162:
2659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4329              		.loc 1 2667 1
 4330              		.cfi_startproc
 4331              		@ args = 0, pretend = 0, frame = 8
 4332              		@ frame_needed = 1, uses_anonymous_args = 0
 4333 0000 80B5     		push	{r7, lr}
 4334              	.LCFI174:
 4335              		.cfi_def_cfa_offset 8
 4336              		.cfi_offset 7, -8
 4337              		.cfi_offset 14, -4
 4338 0002 82B0     		sub	sp, sp, #8
 4339              	.LCFI175:
ARM GAS  /tmp/ccFXX6mG.s 			page 123


 4340              		.cfi_def_cfa_offset 16
 4341 0004 00AF     		add	r7, sp, #0
 4342              	.LCFI176:
 4343              		.cfi_def_cfa_register 7
 4344 0006 7860     		str	r0, [r7, #4]
2668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4345              		.loc 1 2668 3
 4346 0008 7B68     		ldr	r3, [r7, #4]
 4347 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4348 000e 012B     		cmp	r3, #1
 4349 0010 01D1     		bne	.L216
 4350              		.loc 1 2668 3 is_stmt 0 discriminator 1
 4351 0012 0223     		movs	r3, #2
 4352 0014 15E0     		b	.L217
 4353              	.L216:
 4354              		.loc 1 2668 3 discriminator 2
 4355 0016 7B68     		ldr	r3, [r7, #4]
 4356 0018 0122     		movs	r2, #1
 4357 001a 83F87020 		strb	r2, [r3, #112]
2669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4358              		.loc 1 2670 17 is_stmt 1 discriminator 2
 4359 001e 7B68     		ldr	r3, [r7, #4]
 4360 0020 2422     		movs	r2, #36
 4361 0022 5A67     		str	r2, [r3, #116]
2671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 4362              		.loc 1 2673 3 discriminator 2
 4363 0024 7B68     		ldr	r3, [r7, #4]
 4364 0026 1B68     		ldr	r3, [r3]
 4365 0028 1A68     		ldr	r2, [r3]
 4366 002a 7B68     		ldr	r3, [r7, #4]
 4367 002c 1B68     		ldr	r3, [r3]
 4368 002e 22F40052 		bic	r2, r2, #8192
 4369 0032 1A60     		str	r2, [r3]
2674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4370              		.loc 1 2675 17 discriminator 2
 4371 0034 7B68     		ldr	r3, [r7, #4]
 4372 0036 2022     		movs	r2, #32
 4373 0038 5A67     		str	r2, [r3, #116]
2676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 4374              		.loc 1 2677 11 discriminator 2
 4375 003a 7868     		ldr	r0, [r7, #4]
 4376 003c FFF7FEFF 		bl	UART_CheckIdleState
 4377 0040 0346     		mov	r3, r0
 4378              	.L217:
2678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4379              		.loc 1 2678 1
 4380 0042 1846     		mov	r0, r3
 4381 0044 0837     		adds	r7, r7, #8
 4382              	.LCFI177:
 4383              		.cfi_def_cfa_offset 8
 4384 0046 BD46     		mov	sp, r7
 4385              	.LCFI178:
ARM GAS  /tmp/ccFXX6mG.s 			page 124


 4386              		.cfi_def_cfa_register 13
 4387              		@ sp needed
 4388 0048 80BD     		pop	{r7, pc}
 4389              		.cfi_endproc
 4390              	.LFE162:
 4392              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 4393              		.align	1
 4394              		.global	HAL_MultiProcessor_EnterMuteMode
 4395              		.syntax unified
 4396              		.thumb
 4397              		.thumb_func
 4398              		.fpu fpv4-sp-d16
 4400              	HAL_MultiProcessor_EnterMuteMode:
 4401              	.LFB163:
2679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4402              		.loc 1 2687 1
 4403              		.cfi_startproc
 4404              		@ args = 0, pretend = 0, frame = 8
 4405              		@ frame_needed = 1, uses_anonymous_args = 0
 4406              		@ link register save eliminated.
 4407 0000 80B4     		push	{r7}
 4408              	.LCFI179:
 4409              		.cfi_def_cfa_offset 4
 4410              		.cfi_offset 7, -4
 4411 0002 83B0     		sub	sp, sp, #12
 4412              	.LCFI180:
 4413              		.cfi_def_cfa_offset 16
 4414 0004 00AF     		add	r7, sp, #0
 4415              	.LCFI181:
 4416              		.cfi_def_cfa_register 7
 4417 0006 7860     		str	r0, [r7, #4]
2688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 4418              		.loc 1 2688 3
 4419 0008 7B68     		ldr	r3, [r7, #4]
 4420 000a 1B68     		ldr	r3, [r3]
 4421 000c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 4422 000e 9AB2     		uxth	r2, r3
 4423 0010 7B68     		ldr	r3, [r7, #4]
 4424 0012 1B68     		ldr	r3, [r3]
 4425 0014 42F00402 		orr	r2, r2, #4
 4426 0018 92B2     		uxth	r2, r2
 4427 001a 1A83     		strh	r2, [r3, #24]	@ movhi
2689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4428              		.loc 1 2689 1
 4429 001c 00BF     		nop
 4430 001e 0C37     		adds	r7, r7, #12
 4431              	.LCFI182:
 4432              		.cfi_def_cfa_offset 4
 4433 0020 BD46     		mov	sp, r7
ARM GAS  /tmp/ccFXX6mG.s 			page 125


 4434              	.LCFI183:
 4435              		.cfi_def_cfa_register 13
 4436              		@ sp needed
 4437 0022 5DF8047B 		ldr	r7, [sp], #4
 4438              	.LCFI184:
 4439              		.cfi_restore 7
 4440              		.cfi_def_cfa_offset 0
 4441 0026 7047     		bx	lr
 4442              		.cfi_endproc
 4443              	.LFE163:
 4445              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 4446              		.align	1
 4447              		.global	HAL_HalfDuplex_EnableTransmitter
 4448              		.syntax unified
 4449              		.thumb
 4450              		.thumb_func
 4451              		.fpu fpv4-sp-d16
 4453              	HAL_HalfDuplex_EnableTransmitter:
 4454              	.LFB164:
2690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4455              		.loc 1 2697 1
 4456              		.cfi_startproc
 4457              		@ args = 0, pretend = 0, frame = 8
 4458              		@ frame_needed = 1, uses_anonymous_args = 0
 4459              		@ link register save eliminated.
 4460 0000 80B4     		push	{r7}
 4461              	.LCFI185:
 4462              		.cfi_def_cfa_offset 4
 4463              		.cfi_offset 7, -4
 4464 0002 83B0     		sub	sp, sp, #12
 4465              	.LCFI186:
 4466              		.cfi_def_cfa_offset 16
 4467 0004 00AF     		add	r7, sp, #0
 4468              	.LCFI187:
 4469              		.cfi_def_cfa_register 7
 4470 0006 7860     		str	r0, [r7, #4]
2698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4471              		.loc 1 2698 3
 4472 0008 7B68     		ldr	r3, [r7, #4]
 4473 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4474 000e 012B     		cmp	r3, #1
 4475 0010 01D1     		bne	.L220
 4476              		.loc 1 2698 3 is_stmt 0 discriminator 1
 4477 0012 0223     		movs	r3, #2
 4478 0014 1EE0     		b	.L221
 4479              	.L220:
 4480              		.loc 1 2698 3 discriminator 2
 4481 0016 7B68     		ldr	r3, [r7, #4]
 4482 0018 0122     		movs	r2, #1
 4483 001a 83F87020 		strb	r2, [r3, #112]
ARM GAS  /tmp/ccFXX6mG.s 			page 126


2699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4484              		.loc 1 2699 17 is_stmt 1 discriminator 2
 4485 001e 7B68     		ldr	r3, [r7, #4]
 4486 0020 2422     		movs	r2, #36
 4487 0022 5A67     		str	r2, [r3, #116]
2700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 4488              		.loc 1 2702 3 discriminator 2
 4489 0024 7B68     		ldr	r3, [r7, #4]
 4490 0026 1B68     		ldr	r3, [r3]
 4491 0028 1A68     		ldr	r2, [r3]
 4492 002a 7B68     		ldr	r3, [r7, #4]
 4493 002c 1B68     		ldr	r3, [r3]
 4494 002e 22F00C02 		bic	r2, r2, #12
 4495 0032 1A60     		str	r2, [r3]
2703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 4496              		.loc 1 2705 3 discriminator 2
 4497 0034 7B68     		ldr	r3, [r7, #4]
 4498 0036 1B68     		ldr	r3, [r3]
 4499 0038 1A68     		ldr	r2, [r3]
 4500 003a 7B68     		ldr	r3, [r7, #4]
 4501 003c 1B68     		ldr	r3, [r3]
 4502 003e 42F00802 		orr	r2, r2, #8
 4503 0042 1A60     		str	r2, [r3]
2706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4504              		.loc 1 2707 17 discriminator 2
 4505 0044 7B68     		ldr	r3, [r7, #4]
 4506 0046 2022     		movs	r2, #32
 4507 0048 5A67     		str	r2, [r3, #116]
2708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4508              		.loc 1 2709 3 discriminator 2
 4509 004a 7B68     		ldr	r3, [r7, #4]
 4510 004c 0022     		movs	r2, #0
 4511 004e 83F87020 		strb	r2, [r3, #112]
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 4512              		.loc 1 2711 10 discriminator 2
 4513 0052 0023     		movs	r3, #0
 4514              	.L221:
2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4515              		.loc 1 2712 1
 4516 0054 1846     		mov	r0, r3
 4517 0056 0C37     		adds	r7, r7, #12
 4518              	.LCFI188:
 4519              		.cfi_def_cfa_offset 4
 4520 0058 BD46     		mov	sp, r7
 4521              	.LCFI189:
 4522              		.cfi_def_cfa_register 13
 4523              		@ sp needed
 4524 005a 5DF8047B 		ldr	r7, [sp], #4
 4525              	.LCFI190:
 4526              		.cfi_restore 7
ARM GAS  /tmp/ccFXX6mG.s 			page 127


 4527              		.cfi_def_cfa_offset 0
 4528 005e 7047     		bx	lr
 4529              		.cfi_endproc
 4530              	.LFE164:
 4532              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4533              		.align	1
 4534              		.global	HAL_HalfDuplex_EnableReceiver
 4535              		.syntax unified
 4536              		.thumb
 4537              		.thumb_func
 4538              		.fpu fpv4-sp-d16
 4540              	HAL_HalfDuplex_EnableReceiver:
 4541              	.LFB165:
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status.
2718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4542              		.loc 1 2720 1
 4543              		.cfi_startproc
 4544              		@ args = 0, pretend = 0, frame = 8
 4545              		@ frame_needed = 1, uses_anonymous_args = 0
 4546              		@ link register save eliminated.
 4547 0000 80B4     		push	{r7}
 4548              	.LCFI191:
 4549              		.cfi_def_cfa_offset 4
 4550              		.cfi_offset 7, -4
 4551 0002 83B0     		sub	sp, sp, #12
 4552              	.LCFI192:
 4553              		.cfi_def_cfa_offset 16
 4554 0004 00AF     		add	r7, sp, #0
 4555              	.LCFI193:
 4556              		.cfi_def_cfa_register 7
 4557 0006 7860     		str	r0, [r7, #4]
2721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4558              		.loc 1 2721 3
 4559 0008 7B68     		ldr	r3, [r7, #4]
 4560 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4561 000e 012B     		cmp	r3, #1
 4562 0010 01D1     		bne	.L223
 4563              		.loc 1 2721 3 is_stmt 0 discriminator 1
 4564 0012 0223     		movs	r3, #2
 4565 0014 1EE0     		b	.L224
 4566              	.L223:
 4567              		.loc 1 2721 3 discriminator 2
 4568 0016 7B68     		ldr	r3, [r7, #4]
 4569 0018 0122     		movs	r2, #1
 4570 001a 83F87020 		strb	r2, [r3, #112]
2722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4571              		.loc 1 2722 17 is_stmt 1 discriminator 2
 4572 001e 7B68     		ldr	r3, [r7, #4]
 4573 0020 2422     		movs	r2, #36
 4574 0022 5A67     		str	r2, [r3, #116]
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccFXX6mG.s 			page 128


2724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 4575              		.loc 1 2725 3 discriminator 2
 4576 0024 7B68     		ldr	r3, [r7, #4]
 4577 0026 1B68     		ldr	r3, [r3]
 4578 0028 1A68     		ldr	r2, [r3]
 4579 002a 7B68     		ldr	r3, [r7, #4]
 4580 002c 1B68     		ldr	r3, [r3]
 4581 002e 22F00C02 		bic	r2, r2, #12
 4582 0032 1A60     		str	r2, [r3]
2726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 4583              		.loc 1 2728 3 discriminator 2
 4584 0034 7B68     		ldr	r3, [r7, #4]
 4585 0036 1B68     		ldr	r3, [r3]
 4586 0038 1A68     		ldr	r2, [r3]
 4587 003a 7B68     		ldr	r3, [r7, #4]
 4588 003c 1B68     		ldr	r3, [r3]
 4589 003e 42F00402 		orr	r2, r2, #4
 4590 0042 1A60     		str	r2, [r3]
2729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4591              		.loc 1 2730 17 discriminator 2
 4592 0044 7B68     		ldr	r3, [r7, #4]
 4593 0046 2022     		movs	r2, #32
 4594 0048 5A67     		str	r2, [r3, #116]
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4595              		.loc 1 2732 3 discriminator 2
 4596 004a 7B68     		ldr	r3, [r7, #4]
 4597 004c 0022     		movs	r2, #0
 4598 004e 83F87020 		strb	r2, [r3, #112]
2733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 4599              		.loc 1 2734 10 discriminator 2
 4600 0052 0023     		movs	r3, #0
 4601              	.L224:
2735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4602              		.loc 1 2735 1
 4603 0054 1846     		mov	r0, r3
 4604 0056 0C37     		adds	r7, r7, #12
 4605              	.LCFI194:
 4606              		.cfi_def_cfa_offset 4
 4607 0058 BD46     		mov	sp, r7
 4608              	.LCFI195:
 4609              		.cfi_def_cfa_register 13
 4610              		@ sp needed
 4611 005a 5DF8047B 		ldr	r7, [sp], #4
 4612              	.LCFI196:
 4613              		.cfi_restore 7
 4614              		.cfi_def_cfa_offset 0
 4615 005e 7047     		bx	lr
 4616              		.cfi_endproc
 4617              	.LFE165:
 4619              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 4620              		.align	1
ARM GAS  /tmp/ccFXX6mG.s 			page 129


 4621              		.global	HAL_LIN_SendBreak
 4622              		.syntax unified
 4623              		.thumb
 4624              		.thumb_func
 4625              		.fpu fpv4-sp-d16
 4627              	HAL_LIN_SendBreak:
 4628              	.LFB166:
2736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Transmit break characters.
2740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4629              		.loc 1 2744 1
 4630              		.cfi_startproc
 4631              		@ args = 0, pretend = 0, frame = 8
 4632              		@ frame_needed = 1, uses_anonymous_args = 0
 4633              		@ link register save eliminated.
 4634 0000 80B4     		push	{r7}
 4635              	.LCFI197:
 4636              		.cfi_def_cfa_offset 4
 4637              		.cfi_offset 7, -4
 4638 0002 83B0     		sub	sp, sp, #12
 4639              	.LCFI198:
 4640              		.cfi_def_cfa_offset 16
 4641 0004 00AF     		add	r7, sp, #0
 4642              	.LCFI199:
 4643              		.cfi_def_cfa_register 7
 4644 0006 7860     		str	r0, [r7, #4]
2745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
2746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4645              		.loc 1 2748 3
 4646 0008 7B68     		ldr	r3, [r7, #4]
 4647 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4648 000e 012B     		cmp	r3, #1
 4649 0010 01D1     		bne	.L226
 4650              		.loc 1 2748 3 is_stmt 0 discriminator 1
 4651 0012 0223     		movs	r3, #2
 4652 0014 18E0     		b	.L227
 4653              	.L226:
 4654              		.loc 1 2748 3 discriminator 2
 4655 0016 7B68     		ldr	r3, [r7, #4]
 4656 0018 0122     		movs	r2, #1
 4657 001a 83F87020 		strb	r2, [r3, #112]
2749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4658              		.loc 1 2750 17 is_stmt 1 discriminator 2
 4659 001e 7B68     		ldr	r3, [r7, #4]
 4660 0020 2422     		movs	r2, #36
 4661 0022 5A67     		str	r2, [r3, #116]
2751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Send break characters */
ARM GAS  /tmp/ccFXX6mG.s 			page 130


2753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
 4662              		.loc 1 2753 3 discriminator 2
 4663 0024 7B68     		ldr	r3, [r7, #4]
 4664 0026 1B68     		ldr	r3, [r3]
 4665 0028 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 4666 002a 9AB2     		uxth	r2, r3
 4667 002c 7B68     		ldr	r3, [r7, #4]
 4668 002e 1B68     		ldr	r3, [r3]
 4669 0030 42F00202 		orr	r2, r2, #2
 4670 0034 92B2     		uxth	r2, r2
 4671 0036 1A83     		strh	r2, [r3, #24]	@ movhi
2754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4672              		.loc 1 2755 17 discriminator 2
 4673 0038 7B68     		ldr	r3, [r7, #4]
 4674 003a 2022     		movs	r2, #32
 4675 003c 5A67     		str	r2, [r3, #116]
2756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4676              		.loc 1 2757 3 discriminator 2
 4677 003e 7B68     		ldr	r3, [r7, #4]
 4678 0040 0022     		movs	r2, #0
 4679 0042 83F87020 		strb	r2, [r3, #112]
2758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 4680              		.loc 1 2759 10 discriminator 2
 4681 0046 0023     		movs	r3, #0
 4682              	.L227:
2760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4683              		.loc 1 2760 1
 4684 0048 1846     		mov	r0, r3
 4685 004a 0C37     		adds	r7, r7, #12
 4686              	.LCFI200:
 4687              		.cfi_def_cfa_offset 4
 4688 004c BD46     		mov	sp, r7
 4689              	.LCFI201:
 4690              		.cfi_def_cfa_register 13
 4691              		@ sp needed
 4692 004e 5DF8047B 		ldr	r7, [sp], #4
 4693              	.LCFI202:
 4694              		.cfi_restore 7
 4695              		.cfi_def_cfa_offset 0
 4696 0052 7047     		bx	lr
 4697              		.cfi_endproc
 4698              	.LFE166:
 4700              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4701              		.align	1
 4702              		.global	HAL_UART_GetState
 4703              		.syntax unified
 4704              		.thumb
 4705              		.thumb_func
 4706              		.fpu fpv4-sp-d16
 4708              	HAL_UART_GetState:
 4709              	.LFB167:
2761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
ARM GAS  /tmp/ccFXX6mG.s 			page 131


2764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
2769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
2770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
2771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
2773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
2774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides functions allowing to :
2775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle state.
2776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle error code
2777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
2779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Return the UART handle state.
2784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL state
2787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4710              		.loc 1 2789 1
 4711              		.cfi_startproc
 4712              		@ args = 0, pretend = 0, frame = 16
 4713              		@ frame_needed = 1, uses_anonymous_args = 0
 4714              		@ link register save eliminated.
 4715 0000 80B4     		push	{r7}
 4716              	.LCFI203:
 4717              		.cfi_def_cfa_offset 4
 4718              		.cfi_offset 7, -4
 4719 0002 85B0     		sub	sp, sp, #20
 4720              	.LCFI204:
 4721              		.cfi_def_cfa_offset 24
 4722 0004 00AF     		add	r7, sp, #0
 4723              	.LCFI205:
 4724              		.cfi_def_cfa_register 7
 4725 0006 7860     		str	r0, [r7, #4]
2790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp1;
2791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp2;
2792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp1 = huart->gState;
 4726              		.loc 1 2792 9
 4727 0008 7B68     		ldr	r3, [r7, #4]
 4728 000a 5B6F     		ldr	r3, [r3, #116]
 4729 000c FB60     		str	r3, [r7, #12]
2793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
 4730              		.loc 1 2793 9
 4731 000e 7B68     		ldr	r3, [r7, #4]
 4732 0010 9B6F     		ldr	r3, [r3, #120]
 4733 0012 BB60     		str	r3, [r7, #8]
2794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 4734              		.loc 1 2795 10
ARM GAS  /tmp/ccFXX6mG.s 			page 132


 4735 0014 FA68     		ldr	r2, [r7, #12]
 4736 0016 BB68     		ldr	r3, [r7, #8]
 4737 0018 1343     		orrs	r3, r3, r2
2796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4738              		.loc 1 2796 1
 4739 001a 1846     		mov	r0, r3
 4740 001c 1437     		adds	r7, r7, #20
 4741              	.LCFI206:
 4742              		.cfi_def_cfa_offset 4
 4743 001e BD46     		mov	sp, r7
 4744              	.LCFI207:
 4745              		.cfi_def_cfa_register 13
 4746              		@ sp needed
 4747 0020 5DF8047B 		ldr	r7, [sp], #4
 4748              	.LCFI208:
 4749              		.cfi_restore 7
 4750              		.cfi_def_cfa_offset 0
 4751 0024 7047     		bx	lr
 4752              		.cfi_endproc
 4753              	.LFE167:
 4755              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4756              		.align	1
 4757              		.global	HAL_UART_GetError
 4758              		.syntax unified
 4759              		.thumb
 4760              		.thumb_func
 4761              		.fpu fpv4-sp-d16
 4763              	HAL_UART_GetError:
 4764              	.LFB168:
2797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval UART Error Code
2803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4765              		.loc 1 2805 1
 4766              		.cfi_startproc
 4767              		@ args = 0, pretend = 0, frame = 8
 4768              		@ frame_needed = 1, uses_anonymous_args = 0
 4769              		@ link register save eliminated.
 4770 0000 80B4     		push	{r7}
 4771              	.LCFI209:
 4772              		.cfi_def_cfa_offset 4
 4773              		.cfi_offset 7, -4
 4774 0002 83B0     		sub	sp, sp, #12
 4775              	.LCFI210:
 4776              		.cfi_def_cfa_offset 16
 4777 0004 00AF     		add	r7, sp, #0
 4778              	.LCFI211:
 4779              		.cfi_def_cfa_register 7
 4780 0006 7860     		str	r0, [r7, #4]
2806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
 4781              		.loc 1 2806 15
 4782 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFXX6mG.s 			page 133


 4783 000a DB6F     		ldr	r3, [r3, #124]
2807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4784              		.loc 1 2807 1
 4785 000c 1846     		mov	r0, r3
 4786 000e 0C37     		adds	r7, r7, #12
 4787              	.LCFI212:
 4788              		.cfi_def_cfa_offset 4
 4789 0010 BD46     		mov	sp, r7
 4790              	.LCFI213:
 4791              		.cfi_def_cfa_register 13
 4792              		@ sp needed
 4793 0012 5DF8047B 		ldr	r7, [sp], #4
 4794              	.LCFI214:
 4795              		.cfi_restore 7
 4796              		.cfi_def_cfa_offset 0
 4797 0016 7047     		bx	lr
 4798              		.cfi_endproc
 4799              	.LFE168:
 4801              		.global	__aeabi_uldivmod
 4802              		.section	.text.UART_SetConfig,"ax",%progbits
 4803              		.align	1
 4804              		.global	UART_SetConfig
 4805              		.syntax unified
 4806              		.thumb
 4807              		.thumb_func
 4808              		.fpu fpv4-sp-d16
 4810              	UART_SetConfig:
 4811              	.LFB169:
2808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval none
2824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init the UART Callback settings */
2829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
ARM GAS  /tmp/ccFXX6mG.s 			page 134


2837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
2840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
2841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4812              		.loc 1 2852 1
 4813              		.cfi_startproc
 4814              		@ args = 0, pretend = 0, frame = 40
 4815              		@ frame_needed = 1, uses_anonymous_args = 0
 4816 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4817              	.LCFI215:
 4818              		.cfi_def_cfa_offset 36
 4819              		.cfi_offset 4, -36
 4820              		.cfi_offset 5, -32
 4821              		.cfi_offset 6, -28
 4822              		.cfi_offset 7, -24
 4823              		.cfi_offset 8, -20
 4824              		.cfi_offset 9, -16
 4825              		.cfi_offset 10, -12
 4826              		.cfi_offset 11, -8
 4827              		.cfi_offset 14, -4
 4828 0004 8BB0     		sub	sp, sp, #44
 4829              	.LCFI216:
 4830              		.cfi_def_cfa_offset 80
 4831 0006 00AF     		add	r7, sp, #0
 4832              	.LCFI217:
 4833              		.cfi_def_cfa_register 7
 4834 0008 F860     		str	r0, [r7, #12]
2853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg;
2854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t brrtemp;
2855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
2856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
 4835              		.loc 1 2856 12
 4836 000a 0023     		movs	r3, #0
 4837 000c FB61     		str	r3, [r7, #28]
2857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4838              		.loc 1 2857 21
 4839 000e 0023     		movs	r3, #0
 4840 0010 FB76     		strb	r3, [r7, #27]
2858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4841              		.loc 1 2858 12
 4842 0012 0023     		movs	r3, #0
 4843 0014 7B61     		str	r3, [r7, #20]
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
2861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
ARM GAS  /tmp/ccFXX6mG.s 			page 135


2862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
2879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 4844              		.loc 1 2888 33
 4845 0016 FB68     		ldr	r3, [r7, #12]
 4846 0018 9A68     		ldr	r2, [r3, #8]
 4847              		.loc 1 2888 58
 4848 001a FB68     		ldr	r3, [r7, #12]
 4849 001c 1B69     		ldr	r3, [r3, #16]
 4850              		.loc 1 2888 45
 4851 001e 1A43     		orrs	r2, r2, r3
 4852              		.loc 1 2888 79
 4853 0020 FB68     		ldr	r3, [r7, #12]
 4854 0022 5B69     		ldr	r3, [r3, #20]
 4855              		.loc 1 2888 66
 4856 0024 1A43     		orrs	r2, r2, r3
 4857              		.loc 1 2888 98
 4858 0026 FB68     		ldr	r3, [r7, #12]
 4859 0028 DB69     		ldr	r3, [r3, #28]
 4860              		.loc 1 2888 10
 4861 002a 1343     		orrs	r3, r3, r2
 4862 002c 7B62     		str	r3, [r7, #36]
2889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
2891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 4863              		.loc 1 2892 3
 4864 002e FB68     		ldr	r3, [r7, #12]
 4865 0030 1B68     		ldr	r3, [r3]
 4866 0032 1A68     		ldr	r2, [r3]
 4867 0034 B84B     		ldr	r3, .L324
 4868 0036 1340     		ands	r3, r3, r2
 4869 0038 FA68     		ldr	r2, [r7, #12]
ARM GAS  /tmp/ccFXX6mG.s 			page 136


 4870 003a 1268     		ldr	r2, [r2]
 4871 003c 796A     		ldr	r1, [r7, #36]
 4872 003e 0B43     		orrs	r3, r3, r1
 4873 0040 1360     		str	r3, [r2]
2893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * to huart->Init.StopBits value */
2897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 4874              		.loc 1 2897 3
 4875 0042 FB68     		ldr	r3, [r7, #12]
 4876 0044 1B68     		ldr	r3, [r3]
 4877 0046 5B68     		ldr	r3, [r3, #4]
 4878 0048 23F44051 		bic	r1, r3, #12288
 4879 004c FB68     		ldr	r3, [r7, #12]
 4880 004e DA68     		ldr	r2, [r3, #12]
 4881 0050 FB68     		ldr	r3, [r7, #12]
 4882 0052 1B68     		ldr	r3, [r3]
 4883 0054 0A43     		orrs	r2, r2, r1
 4884 0056 5A60     		str	r2, [r3, #4]
2898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
2901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 4885              		.loc 1 2905 10
 4886 0058 FB68     		ldr	r3, [r7, #12]
 4887 005a 9B69     		ldr	r3, [r3, #24]
 4888 005c 7B62     		str	r3, [r7, #36]
2906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
 4889              		.loc 1 2907 9
 4890 005e FB68     		ldr	r3, [r7, #12]
 4891 0060 1B68     		ldr	r3, [r3]
 4892              		.loc 1 2907 6
 4893 0062 AE4A     		ldr	r2, .L324+4
 4894 0064 9342     		cmp	r3, r2
 4895 0066 04D0     		beq	.L233
2908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
 4896              		.loc 1 2909 26
 4897 0068 FB68     		ldr	r3, [r7, #12]
 4898 006a 1B6A     		ldr	r3, [r3, #32]
 4899              		.loc 1 2909 12
 4900 006c 7A6A     		ldr	r2, [r7, #36]
 4901 006e 1343     		orrs	r3, r3, r2
 4902 0070 7B62     		str	r3, [r7, #36]
 4903              	.L233:
2910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 4904              		.loc 1 2911 3
 4905 0072 FB68     		ldr	r3, [r7, #12]
 4906 0074 1B68     		ldr	r3, [r3]
 4907 0076 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccFXX6mG.s 			page 137


 4908 0078 23F43061 		bic	r1, r3, #2816
 4909 007c FB68     		ldr	r3, [r7, #12]
 4910 007e 1B68     		ldr	r3, [r3]
 4911 0080 7A6A     		ldr	r2, [r7, #36]
 4912 0082 0A43     		orrs	r2, r2, r1
 4913 0084 9A60     		str	r2, [r3, #8]
2912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
2915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
2916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
2917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
2918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 4914              		.loc 1 2921 3
 4915 0086 FB68     		ldr	r3, [r7, #12]
 4916 0088 1B68     		ldr	r3, [r3]
 4917 008a A54A     		ldr	r2, .L324+8
 4918 008c 9342     		cmp	r3, r2
 4919 008e 26D1     		bne	.L234
 4920              		.loc 1 2921 3 is_stmt 0 discriminator 1
 4921 0090 A44B     		ldr	r3, .L324+12
 4922 0092 D3F88830 		ldr	r3, [r3, #136]
 4923 0096 03F00303 		and	r3, r3, #3
 4924 009a 032B     		cmp	r3, #3
 4925 009c 1AD8     		bhi	.L235
 4926 009e 01A2     		adr	r2, .L237
 4927 00a0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4928              		.p2align 2
 4929              	.L237:
 4930 00a4 B5000000 		.word	.L240+1
 4931 00a8 C5000000 		.word	.L239+1
 4932 00ac BD000000 		.word	.L238+1
 4933 00b0 CD000000 		.word	.L236+1
 4934              		.p2align 1
 4935              	.L240:
 4936              		.loc 1 2921 3 discriminator 4
 4937 00b4 0123     		movs	r3, #1
 4938 00b6 87F82330 		strb	r3, [r7, #35]
 4939 00ba 05E1     		b	.L242
 4940              	.L238:
 4941              		.loc 1 2921 3 discriminator 6
 4942 00bc 0223     		movs	r3, #2
 4943 00be 87F82330 		strb	r3, [r7, #35]
 4944 00c2 01E1     		b	.L242
 4945              	.L239:
 4946              		.loc 1 2921 3 discriminator 5
 4947 00c4 0423     		movs	r3, #4
 4948 00c6 87F82330 		strb	r3, [r7, #35]
 4949 00ca FDE0     		b	.L242
 4950              	.L236:
 4951              		.loc 1 2921 3 discriminator 7
 4952 00cc 0823     		movs	r3, #8
 4953 00ce 87F82330 		strb	r3, [r7, #35]
 4954 00d2 F9E0     		b	.L242
ARM GAS  /tmp/ccFXX6mG.s 			page 138


 4955              	.L235:
 4956              		.loc 1 2921 3 discriminator 3
 4957 00d4 1023     		movs	r3, #16
 4958 00d6 87F82330 		strb	r3, [r7, #35]
 4959 00da 00BF     		nop
 4960 00dc F4E0     		b	.L242
 4961              	.L234:
 4962              		.loc 1 2921 3 discriminator 2
 4963 00de FB68     		ldr	r3, [r7, #12]
 4964 00e0 1B68     		ldr	r3, [r3]
 4965 00e2 914A     		ldr	r2, .L324+16
 4966 00e4 9342     		cmp	r3, r2
 4967 00e6 38D1     		bne	.L243
 4968              		.loc 1 2921 3 discriminator 13
 4969 00e8 8E4B     		ldr	r3, .L324+12
 4970 00ea D3F88830 		ldr	r3, [r3, #136]
 4971 00ee 03F00C03 		and	r3, r3, #12
 4972 00f2 0C2B     		cmp	r3, #12
 4973 00f4 2CD8     		bhi	.L244
 4974 00f6 01A2     		adr	r2, .L246
 4975 00f8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4976              		.p2align 2
 4977              	.L246:
 4978 00fc 31010000 		.word	.L249+1
 4979 0100 51010000 		.word	.L244+1
 4980 0104 51010000 		.word	.L244+1
 4981 0108 51010000 		.word	.L244+1
 4982 010c 41010000 		.word	.L248+1
 4983 0110 51010000 		.word	.L244+1
 4984 0114 51010000 		.word	.L244+1
 4985 0118 51010000 		.word	.L244+1
 4986 011c 39010000 		.word	.L247+1
 4987 0120 51010000 		.word	.L244+1
 4988 0124 51010000 		.word	.L244+1
 4989 0128 51010000 		.word	.L244+1
 4990 012c 49010000 		.word	.L245+1
 4991              		.p2align 1
 4992              	.L249:
 4993              		.loc 1 2921 3 discriminator 16
 4994 0130 0023     		movs	r3, #0
 4995 0132 87F82330 		strb	r3, [r7, #35]
 4996 0136 C7E0     		b	.L242
 4997              	.L247:
 4998              		.loc 1 2921 3 discriminator 18
 4999 0138 0223     		movs	r3, #2
 5000 013a 87F82330 		strb	r3, [r7, #35]
 5001 013e C3E0     		b	.L242
 5002              	.L248:
 5003              		.loc 1 2921 3 discriminator 17
 5004 0140 0423     		movs	r3, #4
 5005 0142 87F82330 		strb	r3, [r7, #35]
 5006 0146 BFE0     		b	.L242
 5007              	.L245:
 5008              		.loc 1 2921 3 discriminator 19
 5009 0148 0823     		movs	r3, #8
 5010 014a 87F82330 		strb	r3, [r7, #35]
 5011 014e BBE0     		b	.L242
ARM GAS  /tmp/ccFXX6mG.s 			page 139


 5012              	.L244:
 5013              		.loc 1 2921 3 discriminator 15
 5014 0150 1023     		movs	r3, #16
 5015 0152 87F82330 		strb	r3, [r7, #35]
 5016 0156 00BF     		nop
 5017 0158 B6E0     		b	.L242
 5018              	.L243:
 5019              		.loc 1 2921 3 discriminator 14
 5020 015a FB68     		ldr	r3, [r7, #12]
 5021 015c 1B68     		ldr	r3, [r3]
 5022 015e 734A     		ldr	r2, .L324+20
 5023 0160 9342     		cmp	r3, r2
 5024 0162 25D1     		bne	.L251
 5025              		.loc 1 2921 3 discriminator 25
 5026 0164 6F4B     		ldr	r3, .L324+12
 5027 0166 D3F88830 		ldr	r3, [r3, #136]
 5028 016a 03F03003 		and	r3, r3, #48
 5029 016e 102B     		cmp	r3, #16
 5030 0170 11D0     		beq	.L252
 5031              		.loc 1 2921 3
 5032 0172 102B     		cmp	r3, #16
 5033 0174 02D8     		bhi	.L253
 5034 0176 002B     		cmp	r3, #0
 5035 0178 05D0     		beq	.L254
 5036 017a 14E0     		b	.L255
 5037              	.L253:
 5038 017c 202B     		cmp	r3, #32
 5039 017e 06D0     		beq	.L256
 5040 0180 302B     		cmp	r3, #48
 5041 0182 0CD0     		beq	.L257
 5042 0184 0FE0     		b	.L255
 5043              	.L254:
 5044              		.loc 1 2921 3 discriminator 28
 5045 0186 0023     		movs	r3, #0
 5046 0188 87F82330 		strb	r3, [r7, #35]
 5047 018c 9CE0     		b	.L242
 5048              	.L256:
 5049              		.loc 1 2921 3 discriminator 30
 5050 018e 0223     		movs	r3, #2
 5051 0190 87F82330 		strb	r3, [r7, #35]
 5052 0194 98E0     		b	.L242
 5053              	.L252:
 5054              		.loc 1 2921 3 discriminator 29
 5055 0196 0423     		movs	r3, #4
 5056 0198 87F82330 		strb	r3, [r7, #35]
 5057 019c 94E0     		b	.L242
 5058              	.L257:
 5059              		.loc 1 2921 3 discriminator 31
 5060 019e 0823     		movs	r3, #8
 5061 01a0 87F82330 		strb	r3, [r7, #35]
 5062 01a4 90E0     		b	.L242
 5063              	.L255:
 5064              		.loc 1 2921 3 discriminator 27
 5065 01a6 1023     		movs	r3, #16
 5066 01a8 87F82330 		strb	r3, [r7, #35]
 5067 01ac 00BF     		nop
 5068 01ae 8BE0     		b	.L242
ARM GAS  /tmp/ccFXX6mG.s 			page 140


 5069              	.L251:
 5070              		.loc 1 2921 3 discriminator 26
 5071 01b0 FB68     		ldr	r3, [r7, #12]
 5072 01b2 1B68     		ldr	r3, [r3]
 5073 01b4 5E4A     		ldr	r2, .L324+24
 5074 01b6 9342     		cmp	r3, r2
 5075 01b8 25D1     		bne	.L259
 5076              		.loc 1 2921 3 discriminator 37
 5077 01ba 5A4B     		ldr	r3, .L324+12
 5078 01bc D3F88830 		ldr	r3, [r3, #136]
 5079 01c0 03F0C003 		and	r3, r3, #192
 5080 01c4 402B     		cmp	r3, #64
 5081 01c6 11D0     		beq	.L260
 5082              		.loc 1 2921 3
 5083 01c8 402B     		cmp	r3, #64
 5084 01ca 02D8     		bhi	.L261
 5085 01cc 002B     		cmp	r3, #0
 5086 01ce 05D0     		beq	.L262
 5087 01d0 14E0     		b	.L263
 5088              	.L261:
 5089 01d2 802B     		cmp	r3, #128
 5090 01d4 06D0     		beq	.L264
 5091 01d6 C02B     		cmp	r3, #192
 5092 01d8 0CD0     		beq	.L265
 5093 01da 0FE0     		b	.L263
 5094              	.L262:
 5095              		.loc 1 2921 3 discriminator 40
 5096 01dc 0023     		movs	r3, #0
 5097 01de 87F82330 		strb	r3, [r7, #35]
 5098 01e2 71E0     		b	.L242
 5099              	.L264:
 5100              		.loc 1 2921 3 discriminator 42
 5101 01e4 0223     		movs	r3, #2
 5102 01e6 87F82330 		strb	r3, [r7, #35]
 5103 01ea 6DE0     		b	.L242
 5104              	.L260:
 5105              		.loc 1 2921 3 discriminator 41
 5106 01ec 0423     		movs	r3, #4
 5107 01ee 87F82330 		strb	r3, [r7, #35]
 5108 01f2 69E0     		b	.L242
 5109              	.L265:
 5110              		.loc 1 2921 3 discriminator 43
 5111 01f4 0823     		movs	r3, #8
 5112 01f6 87F82330 		strb	r3, [r7, #35]
 5113 01fa 65E0     		b	.L242
 5114              	.L263:
 5115              		.loc 1 2921 3 discriminator 39
 5116 01fc 1023     		movs	r3, #16
 5117 01fe 87F82330 		strb	r3, [r7, #35]
 5118 0202 00BF     		nop
 5119 0204 60E0     		b	.L242
 5120              	.L259:
 5121              		.loc 1 2921 3 discriminator 38
 5122 0206 FB68     		ldr	r3, [r7, #12]
 5123 0208 1B68     		ldr	r3, [r3]
 5124 020a 4A4A     		ldr	r2, .L324+28
 5125 020c 9342     		cmp	r3, r2
ARM GAS  /tmp/ccFXX6mG.s 			page 141


 5126 020e 29D1     		bne	.L267
 5127              		.loc 1 2921 3 discriminator 49
 5128 0210 444B     		ldr	r3, .L324+12
 5129 0212 D3F88830 		ldr	r3, [r3, #136]
 5130 0216 03F44073 		and	r3, r3, #768
 5131 021a B3F5807F 		cmp	r3, #256
 5132 021e 14D0     		beq	.L268
 5133              		.loc 1 2921 3
 5134 0220 B3F5807F 		cmp	r3, #256
 5135 0224 02D8     		bhi	.L269
 5136 0226 002B     		cmp	r3, #0
 5137 0228 07D0     		beq	.L270
 5138 022a 16E0     		b	.L271
 5139              	.L269:
 5140 022c B3F5007F 		cmp	r3, #512
 5141 0230 07D0     		beq	.L272
 5142 0232 B3F5407F 		cmp	r3, #768
 5143 0236 0CD0     		beq	.L273
 5144 0238 0FE0     		b	.L271
 5145              	.L270:
 5146              		.loc 1 2921 3 discriminator 52
 5147 023a 0023     		movs	r3, #0
 5148 023c 87F82330 		strb	r3, [r7, #35]
 5149 0240 42E0     		b	.L242
 5150              	.L272:
 5151              		.loc 1 2921 3 discriminator 54
 5152 0242 0223     		movs	r3, #2
 5153 0244 87F82330 		strb	r3, [r7, #35]
 5154 0248 3EE0     		b	.L242
 5155              	.L268:
 5156              		.loc 1 2921 3 discriminator 53
 5157 024a 0423     		movs	r3, #4
 5158 024c 87F82330 		strb	r3, [r7, #35]
 5159 0250 3AE0     		b	.L242
 5160              	.L273:
 5161              		.loc 1 2921 3 discriminator 55
 5162 0252 0823     		movs	r3, #8
 5163 0254 87F82330 		strb	r3, [r7, #35]
 5164 0258 36E0     		b	.L242
 5165              	.L271:
 5166              		.loc 1 2921 3 discriminator 51
 5167 025a 1023     		movs	r3, #16
 5168 025c 87F82330 		strb	r3, [r7, #35]
 5169 0260 00BF     		nop
 5170 0262 31E0     		b	.L242
 5171              	.L267:
 5172              		.loc 1 2921 3 discriminator 50
 5173 0264 FB68     		ldr	r3, [r7, #12]
 5174 0266 1B68     		ldr	r3, [r3]
 5175 0268 2C4A     		ldr	r2, .L324+4
 5176 026a 9342     		cmp	r3, r2
 5177 026c 29D1     		bne	.L275
 5178              		.loc 1 2921 3 discriminator 61
 5179 026e 2D4B     		ldr	r3, .L324+12
 5180 0270 D3F88830 		ldr	r3, [r3, #136]
 5181 0274 03F44063 		and	r3, r3, #3072
 5182 0278 B3F5806F 		cmp	r3, #1024
ARM GAS  /tmp/ccFXX6mG.s 			page 142


 5183 027c 14D0     		beq	.L276
 5184              		.loc 1 2921 3
 5185 027e B3F5806F 		cmp	r3, #1024
 5186 0282 02D8     		bhi	.L277
 5187 0284 002B     		cmp	r3, #0
 5188 0286 07D0     		beq	.L278
 5189 0288 16E0     		b	.L279
 5190              	.L277:
 5191 028a B3F5006F 		cmp	r3, #2048
 5192 028e 07D0     		beq	.L280
 5193 0290 B3F5406F 		cmp	r3, #3072
 5194 0294 0CD0     		beq	.L281
 5195 0296 0FE0     		b	.L279
 5196              	.L278:
 5197              		.loc 1 2921 3 discriminator 64
 5198 0298 0023     		movs	r3, #0
 5199 029a 87F82330 		strb	r3, [r7, #35]
 5200 029e 13E0     		b	.L242
 5201              	.L280:
 5202              		.loc 1 2921 3 discriminator 66
 5203 02a0 0223     		movs	r3, #2
 5204 02a2 87F82330 		strb	r3, [r7, #35]
 5205 02a6 0FE0     		b	.L242
 5206              	.L276:
 5207              		.loc 1 2921 3 discriminator 65
 5208 02a8 0423     		movs	r3, #4
 5209 02aa 87F82330 		strb	r3, [r7, #35]
 5210 02ae 0BE0     		b	.L242
 5211              	.L281:
 5212              		.loc 1 2921 3 discriminator 67
 5213 02b0 0823     		movs	r3, #8
 5214 02b2 87F82330 		strb	r3, [r7, #35]
 5215 02b6 07E0     		b	.L242
 5216              	.L279:
 5217              		.loc 1 2921 3 discriminator 63
 5218 02b8 1023     		movs	r3, #16
 5219 02ba 87F82330 		strb	r3, [r7, #35]
 5220 02be 00BF     		nop
 5221 02c0 02E0     		b	.L242
 5222              	.L275:
 5223              		.loc 1 2921 3 discriminator 62
 5224 02c2 1023     		movs	r3, #16
 5225 02c4 87F82330 		strb	r3, [r7, #35]
 5226              	.L242:
2922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check LPUART instance */
2924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 5227              		.loc 1 2924 7 is_stmt 1
 5228 02c8 FB68     		ldr	r3, [r7, #12]
 5229 02ca 1B68     		ldr	r3, [r3]
 5230              		.loc 1 2924 6
 5231 02cc 134A     		ldr	r2, .L324+4
 5232 02ce 9342     		cmp	r3, r2
 5233 02d0 40F0FF80 		bne	.L283
2925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Retrieve frequency clock */
2927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
ARM GAS  /tmp/ccFXX6mG.s 			page 143


 5234              		.loc 1 2927 5
 5235 02d4 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 5236 02d8 082B     		cmp	r3, #8
 5237 02da 37D8     		bhi	.L284
 5238 02dc 01A2     		adr	r2, .L286
 5239 02de 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5240 02e2 00BF     		.p2align 2
 5241              	.L286:
 5242 02e4 09030000 		.word	.L289+1
 5243 02e8 4D030000 		.word	.L284+1
 5244 02ec 11030000 		.word	.L288+1
 5245 02f0 4D030000 		.word	.L284+1
 5246 02f4 3D030000 		.word	.L287+1
 5247 02f8 4D030000 		.word	.L284+1
 5248 02fc 4D030000 		.word	.L284+1
 5249 0300 4D030000 		.word	.L284+1
 5250 0304 45030000 		.word	.L285+1
 5251              		.p2align 1
 5252              	.L289:
2928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (HAL_RCC_GetPCLK1Freq() / UART_GET_DIV_FACTOR(huart->Init.ClockPrescal
2932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = HAL_RCC_GetPCLK1Freq();
 5253              		.loc 1 2933 30
 5254 0308 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5255 030c 7861     		str	r0, [r7, #20]
2934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5256              		.loc 1 2935 9
 5257 030e 20E0     		b	.L290
 5258              	.L288:
2936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)HSI_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
2939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (uint32_t)HSI_VALUE;
 5259              		.loc 1 2940 28
 5260 0310 094B     		ldr	r3, .L324+32
 5261 0312 7B61     		str	r3, [r7, #20]
2941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5262              		.loc 1 2942 9
 5263 0314 1DE0     		b	.L290
 5264              	.L325:
 5265 0316 00BF     		.align	2
 5266              	.L324:
 5267 0318 F369FFEF 		.word	-268473869
 5268 031c 00800040 		.word	1073774592
 5269 0320 00380140 		.word	1073821696
 5270 0324 00100240 		.word	1073876992
 5271 0328 00440040 		.word	1073759232
 5272 032c 00480040 		.word	1073760256
 5273 0330 004C0040 		.word	1073761280
 5274 0334 00500040 		.word	1073762304
 5275 0338 0024F400 		.word	16000000
ARM GAS  /tmp/ccFXX6mG.s 			page 144


 5276              	.L287:
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (HAL_RCC_GetSysClockFreq() / UART_GET_DIV_FACTOR(huart->Init.ClockPres
2946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = HAL_RCC_GetSysClockFreq();
 5277              		.loc 1 2947 30
 5278 033c FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5279 0340 7861     		str	r0, [r7, #20]
2948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5280              		.loc 1 2949 9
 5281 0342 06E0     		b	.L290
 5282              	.L285:
2950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)LSE_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
2953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (uint32_t)LSE_VALUE;
 5283              		.loc 1 2954 28
 5284 0344 4FF40043 		mov	r3, #32768
 5285 0348 7B61     		str	r3, [r7, #20]
2955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5286              		.loc 1 2956 9
 5287 034a 02E0     		b	.L290
 5288              	.L284:
2957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 5289              		.loc 1 2959 13
 5290 034c 0123     		movs	r3, #1
 5291 034e FB76     		strb	r3, [r7, #27]
2960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5292              		.loc 1 2960 9
 5293 0350 00BF     		nop
 5294              	.L290:
2961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* if proper clock source reported */
2964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (lpuart_ker_ck_pres != 0U)
 5295              		.loc 1 2964 8
 5296 0352 7B69     		ldr	r3, [r7, #20]
 5297 0354 002B     		cmp	r3, #0
 5298 0356 00F0B081 		beq	.L302
2965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
2967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 5299              		.loc 1 2967 50
 5300 035a FB68     		ldr	r3, [r7, #12]
 5301 035c 5A68     		ldr	r2, [r3, #4]
 5302              		.loc 1 2967 37
 5303 035e 1346     		mov	r3, r2
 5304 0360 5B00     		lsls	r3, r3, #1
 5305 0362 1344     		add	r3, r3, r2
 5306              		.loc 1 2967 10
 5307 0364 7A69     		ldr	r2, [r7, #20]
ARM GAS  /tmp/ccFXX6mG.s 			page 145


 5308 0366 9A42     		cmp	r2, r3
 5309 0368 05D3     		bcc	.L292
2968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 5310              		.loc 1 2968 53 discriminator 1
 5311 036a FB68     		ldr	r3, [r7, #12]
 5312 036c 5B68     		ldr	r3, [r3, #4]
 5313              		.loc 1 2968 40 discriminator 1
 5314 036e 1B03     		lsls	r3, r3, #12
2967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 5315              		.loc 1 2967 62 discriminator 1
 5316 0370 7A69     		ldr	r2, [r7, #20]
 5317 0372 9A42     		cmp	r2, r3
 5318 0374 02D9     		bls	.L293
 5319              	.L292:
2969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 5320              		.loc 1 2970 13
 5321 0376 0123     		movs	r3, #1
 5322 0378 FB76     		strb	r3, [r7, #27]
 5323 037a 9EE1     		b	.L302
 5324              	.L293:
2971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         switch (clocksource)
 5325              		.loc 1 2974 9
 5326 037c 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 5327 0380 082B     		cmp	r3, #8
 5328 0382 00F29380 		bhi	.L294
 5329 0386 01A2     		adr	r2, .L296
 5330 0388 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5331              		.p2align 2
 5332              	.L296:
 5333 038c B1030000 		.word	.L299+1
 5334 0390 AD040000 		.word	.L294+1
 5335 0394 FF030000 		.word	.L298+1
 5336 0398 AD040000 		.word	.L294+1
 5337 039c 33040000 		.word	.L297+1
 5338 03a0 AD040000 		.word	.L294+1
 5339 03a4 AD040000 		.word	.L294+1
 5340 03a8 AD040000 		.word	.L294+1
 5341 03ac 7F040000 		.word	.L295+1
 5342              		.p2align 1
 5343              	.L299:
2975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_PCLK1:
2977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, hua
2979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 5344              		.loc 1 2980 35
 5345 03b0 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5346 03b4 0346     		mov	r3, r0
 5347 03b6 1946     		mov	r1, r3
 5348 03b8 4FF00002 		mov	r2, #0
 5349 03bc 4FF00003 		mov	r3, #0
 5350 03c0 4FF00004 		mov	r4, #0
ARM GAS  /tmp/ccFXX6mG.s 			page 146


 5351 03c4 1402     		lsls	r4, r2, #8
 5352 03c6 44EA1164 		orr	r4, r4, r1, lsr #24
 5353 03ca 0B02     		lsls	r3, r1, #8
 5354 03cc FA68     		ldr	r2, [r7, #12]
 5355 03ce 5268     		ldr	r2, [r2, #4]
 5356 03d0 5208     		lsrs	r2, r2, #1
 5357 03d2 1146     		mov	r1, r2
 5358 03d4 4FF00002 		mov	r2, #0
 5359 03d8 5818     		adds	r0, r3, r1
 5360 03da 3860     		str	r0, [r7]
 5361 03dc 44EB0203 		adc	r3, r4, r2
 5362 03e0 7B60     		str	r3, [r7, #4]
 5363 03e2 FB68     		ldr	r3, [r7, #12]
 5364 03e4 5B68     		ldr	r3, [r3, #4]
 5365 03e6 4FF00004 		mov	r4, #0
 5366 03ea 1A46     		mov	r2, r3
 5367 03ec 2346     		mov	r3, r4
 5368 03ee D7E90001 		ldrd	r0, [r7]
 5369 03f2 FFF7FEFF 		bl	__aeabi_uldivmod
 5370              	.LVL6:
 5371 03f6 0346     		mov	r3, r0
 5372 03f8 0C46     		mov	r4, r1
 5373              		.loc 1 2980 22
 5374 03fa FB61     		str	r3, [r7, #28]
2981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
 5375              		.loc 1 2982 13
 5376 03fc 59E0     		b	.L300
 5377              	.L298:
2983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_HSI:
2984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
2986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate));
 5378              		.loc 1 2987 35
 5379 03fe FB68     		ldr	r3, [r7, #12]
 5380 0400 5B68     		ldr	r3, [r3, #4]
 5381 0402 5B08     		lsrs	r3, r3, #1
 5382 0404 4FF00004 		mov	r4, #0
 5383 0408 B249     		ldr	r1, .L326
 5384 040a 4FF00002 		mov	r2, #0
 5385 040e 13EB010A 		adds	r10, r3, r1
 5386 0412 44EB020B 		adc	fp, r4, r2
 5387 0416 FB68     		ldr	r3, [r7, #12]
 5388 0418 5B68     		ldr	r3, [r3, #4]
 5389 041a 4FF00004 		mov	r4, #0
 5390 041e 1A46     		mov	r2, r3
 5391 0420 2346     		mov	r3, r4
 5392 0422 5046     		mov	r0, r10
 5393 0424 5946     		mov	r1, fp
 5394 0426 FFF7FEFF 		bl	__aeabi_uldivmod
 5395              	.LVL7:
 5396 042a 0346     		mov	r3, r0
 5397 042c 0C46     		mov	r4, r1
 5398              		.loc 1 2987 22
 5399 042e FB61     		str	r3, [r7, #28]
2988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
ARM GAS  /tmp/ccFXX6mG.s 			page 147


2989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
 5400              		.loc 1 2989 13
 5401 0430 3FE0     		b	.L300
 5402              	.L297:
2990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_SYSCLK:
2991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, 
2993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate))
 5403              		.loc 1 2994 35
 5404 0432 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5405 0436 0346     		mov	r3, r0
 5406 0438 1946     		mov	r1, r3
 5407 043a 4FF00002 		mov	r2, #0
 5408 043e 4FF00003 		mov	r3, #0
 5409 0442 4FF00004 		mov	r4, #0
 5410 0446 1402     		lsls	r4, r2, #8
 5411 0448 44EA1164 		orr	r4, r4, r1, lsr #24
 5412 044c 0B02     		lsls	r3, r1, #8
 5413 044e FA68     		ldr	r2, [r7, #12]
 5414 0450 5268     		ldr	r2, [r2, #4]
 5415 0452 5208     		lsrs	r2, r2, #1
 5416 0454 1146     		mov	r1, r2
 5417 0456 4FF00002 		mov	r2, #0
 5418 045a 13EB0108 		adds	r8, r3, r1
 5419 045e 44EB0209 		adc	r9, r4, r2
 5420 0462 FB68     		ldr	r3, [r7, #12]
 5421 0464 5B68     		ldr	r3, [r3, #4]
 5422 0466 4FF00004 		mov	r4, #0
 5423 046a 1A46     		mov	r2, r3
 5424 046c 2346     		mov	r3, r4
 5425 046e 4046     		mov	r0, r8
 5426 0470 4946     		mov	r1, r9
 5427 0472 FFF7FEFF 		bl	__aeabi_uldivmod
 5428              	.LVL8:
 5429 0476 0346     		mov	r3, r0
 5430 0478 0C46     		mov	r4, r1
 5431              		.loc 1 2994 22
 5432 047a FB61     		str	r3, [r7, #28]
2995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
 5433              		.loc 1 2996 13
 5434 047c 19E0     		b	.L300
 5435              	.L295:
2997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_LSE:
2998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate, huart->Init.Cloc
3000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate));
 5436              		.loc 1 3001 35
 5437 047e FB68     		ldr	r3, [r7, #12]
 5438 0480 5B68     		ldr	r3, [r3, #4]
 5439 0482 5B08     		lsrs	r3, r3, #1
 5440 0484 4FF00004 		mov	r4, #0
 5441 0488 13F50005 		adds	r5, r3, #8388608
 5442 048c 44F10006 		adc	r6, r4, #0
 5443 0490 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccFXX6mG.s 			page 148


 5444 0492 5B68     		ldr	r3, [r3, #4]
 5445 0494 4FF00004 		mov	r4, #0
 5446 0498 1A46     		mov	r2, r3
 5447 049a 2346     		mov	r3, r4
 5448 049c 2846     		mov	r0, r5
 5449 049e 3146     		mov	r1, r6
 5450 04a0 FFF7FEFF 		bl	__aeabi_uldivmod
 5451              	.LVL9:
 5452 04a4 0346     		mov	r3, r0
 5453 04a6 0C46     		mov	r4, r1
 5454              		.loc 1 3001 22
 5455 04a8 FB61     		str	r3, [r7, #28]
3002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
 5456              		.loc 1 3003 13
 5457 04aa 02E0     		b	.L300
 5458              	.L294:
3004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_UNDEFINED:
3005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           default:
3006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ret = HAL_ERROR;
 5459              		.loc 1 3006 17
 5460 04ac 0123     		movs	r3, #1
 5461 04ae FB76     		strb	r3, [r7, #27]
3007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
 5462              		.loc 1 3007 13
 5463 04b0 00BF     		nop
 5464              	.L300:
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* It is forbidden to write values lower than 0x300 in the LPUART_BRR register */
3011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 5465              		.loc 1 3011 12
 5466 04b2 FB69     		ldr	r3, [r7, #28]
 5467 04b4 B3F5407F 		cmp	r3, #768
 5468 04b8 08D3     		bcc	.L301
 5469              		.loc 1 3011 42 discriminator 1
 5470 04ba FB69     		ldr	r3, [r7, #28]
 5471 04bc B3F5801F 		cmp	r3, #1048576
 5472 04c0 04D2     		bcs	.L301
3012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
 5473              		.loc 1 3013 16
 5474 04c2 FB68     		ldr	r3, [r7, #12]
 5475 04c4 1B68     		ldr	r3, [r3]
 5476              		.loc 1 3013 32
 5477 04c6 FA69     		ldr	r2, [r7, #28]
 5478 04c8 DA60     		str	r2, [r3, #12]
 5479 04ca F6E0     		b	.L302
 5480              	.L301:
3014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
 5481              		.loc 1 3017 15
 5482 04cc 0123     		movs	r3, #1
 5483 04ce FB76     		strb	r3, [r7, #27]
 5484 04d0 F3E0     		b	.L302
ARM GAS  /tmp/ccFXX6mG.s 			page 149


 5485              	.L283:
3018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       } /*   if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) || (lpuart_ker_ck_pres > (4096
3020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     } /* if (lpuart_ker_ck_pres != 0) */
3021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
3023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 5486              		.loc 1 3023 23
 5487 04d2 FB68     		ldr	r3, [r7, #12]
 5488 04d4 DB69     		ldr	r3, [r3, #28]
 5489              		.loc 1 3023 11
 5490 04d6 B3F5004F 		cmp	r3, #32768
 5491 04da 40F08080 		bne	.L303
3024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
 5492              		.loc 1 3025 5
 5493 04de 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 5494 04e2 082B     		cmp	r3, #8
 5495 04e4 5BD8     		bhi	.L304
 5496 04e6 01A2     		adr	r2, .L306
 5497 04e8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5498              		.p2align 2
 5499              	.L306:
 5500 04ec 11050000 		.word	.L310+1
 5501 04f0 2F050000 		.word	.L309+1
 5502 04f4 4D050000 		.word	.L308+1
 5503 04f8 9F050000 		.word	.L304+1
 5504 04fc 69050000 		.word	.L307+1
 5505 0500 9F050000 		.word	.L304+1
 5506 0504 9F050000 		.word	.L304+1
 5507 0508 9F050000 		.word	.L304+1
 5508 050c 87050000 		.word	.L305+1
 5509              		.p2align 1
 5510              	.L310:
3026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, huar
3030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 5511              		.loc 1 3031 31
 5512 0510 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5513 0514 0346     		mov	r3, r0
 5514 0516 5A00     		lsls	r2, r3, #1
 5515 0518 FB68     		ldr	r3, [r7, #12]
 5516 051a 5B68     		ldr	r3, [r3, #4]
 5517 051c 5B08     		lsrs	r3, r3, #1
 5518 051e 1A44     		add	r2, r2, r3
 5519 0520 FB68     		ldr	r3, [r7, #12]
 5520 0522 5B68     		ldr	r3, [r3, #4]
 5521 0524 B2FBF3F3 		udiv	r3, r2, r3
 5522              		.loc 1 3031 20
 5523 0528 9BB2     		uxth	r3, r3
 5524              		.loc 1 3031 18
 5525 052a FB61     		str	r3, [r7, #28]
3032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccFXX6mG.s 			page 150


 5526              		.loc 1 3033 9
 5527 052c 3AE0     		b	.L311
 5528              	.L309:
3034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate, huar
3037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 5529              		.loc 1 3038 31
 5530 052e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5531 0532 0346     		mov	r3, r0
 5532 0534 5A00     		lsls	r2, r3, #1
 5533 0536 FB68     		ldr	r3, [r7, #12]
 5534 0538 5B68     		ldr	r3, [r3, #4]
 5535 053a 5B08     		lsrs	r3, r3, #1
 5536 053c 1A44     		add	r2, r2, r3
 5537 053e FB68     		ldr	r3, [r7, #12]
 5538 0540 5B68     		ldr	r3, [r3, #4]
 5539 0542 B2FBF3F3 		udiv	r3, r2, r3
 5540              		.loc 1 3038 20
 5541 0546 9BB2     		uxth	r3, r3
 5542              		.loc 1 3038 18
 5543 0548 FB61     		str	r3, [r7, #28]
3039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5544              		.loc 1 3040 9
 5545 054a 2BE0     		b	.L311
 5546              	.L308:
3041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate, huart->Init.Clock
3044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 5547              		.loc 1 3045 31
 5548 054c FB68     		ldr	r3, [r7, #12]
 5549 054e 5B68     		ldr	r3, [r3, #4]
 5550 0550 5B08     		lsrs	r3, r3, #1
 5551 0552 03F1F473 		add	r3, r3, #31981568
 5552 0556 03F59043 		add	r3, r3, #18432
 5553 055a FA68     		ldr	r2, [r7, #12]
 5554 055c 5268     		ldr	r2, [r2, #4]
 5555 055e B3FBF2F3 		udiv	r3, r3, r2
 5556              		.loc 1 3045 20
 5557 0562 9BB2     		uxth	r3, r3
 5558              		.loc 1 3045 18
 5559 0564 FB61     		str	r3, [r7, #28]
3046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5560              		.loc 1 3047 9
 5561 0566 1DE0     		b	.L311
 5562              	.L307:
3048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, h
3051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 5563              		.loc 1 3052 31
ARM GAS  /tmp/ccFXX6mG.s 			page 151


 5564 0568 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5565 056c 0346     		mov	r3, r0
 5566 056e 5A00     		lsls	r2, r3, #1
 5567 0570 FB68     		ldr	r3, [r7, #12]
 5568 0572 5B68     		ldr	r3, [r3, #4]
 5569 0574 5B08     		lsrs	r3, r3, #1
 5570 0576 1A44     		add	r2, r2, r3
 5571 0578 FB68     		ldr	r3, [r7, #12]
 5572 057a 5B68     		ldr	r3, [r3, #4]
 5573 057c B2FBF3F3 		udiv	r3, r2, r3
 5574              		.loc 1 3052 20
 5575 0580 9BB2     		uxth	r3, r3
 5576              		.loc 1 3052 18
 5577 0582 FB61     		str	r3, [r7, #28]
3053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5578              		.loc 1 3054 9
 5579 0584 0EE0     		b	.L311
 5580              	.L305:
3055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart->
3058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 5581              		.loc 1 3059 31
 5582 0586 FB68     		ldr	r3, [r7, #12]
 5583 0588 5B68     		ldr	r3, [r3, #4]
 5584 058a 5B08     		lsrs	r3, r3, #1
 5585 058c 03F58032 		add	r2, r3, #65536
 5586 0590 FB68     		ldr	r3, [r7, #12]
 5587 0592 5B68     		ldr	r3, [r3, #4]
 5588 0594 B2FBF3F3 		udiv	r3, r2, r3
 5589              		.loc 1 3059 20
 5590 0598 9BB2     		uxth	r3, r3
 5591              		.loc 1 3059 18
 5592 059a FB61     		str	r3, [r7, #28]
3060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5593              		.loc 1 3061 9
 5594 059c 02E0     		b	.L311
 5595              	.L304:
3062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
3063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
3064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 5596              		.loc 1 3064 13
 5597 059e 0123     		movs	r3, #1
 5598 05a0 FB76     		strb	r3, [r7, #27]
3065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5599              		.loc 1 3065 9
 5600 05a2 00BF     		nop
 5601              	.L311:
3066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 5602              		.loc 1 3069 8
 5603 05a4 FB69     		ldr	r3, [r7, #28]
ARM GAS  /tmp/ccFXX6mG.s 			page 152


 5604 05a6 0F2B     		cmp	r3, #15
 5605 05a8 16D9     		bls	.L312
 5606              		.loc 1 3069 36 discriminator 1
 5607 05aa FB69     		ldr	r3, [r7, #28]
 5608 05ac B3F5803F 		cmp	r3, #65536
 5609 05b0 12D2     		bcs	.L312
3070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 5610              		.loc 1 3071 17
 5611 05b2 FB69     		ldr	r3, [r7, #28]
 5612 05b4 9BB2     		uxth	r3, r3
 5613              		.loc 1 3071 15
 5614 05b6 23F00F03 		bic	r3, r3, #15
 5615 05ba 7B82     		strh	r3, [r7, #18]	@ movhi
3072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 5616              		.loc 1 3072 60
 5617 05bc FB69     		ldr	r3, [r7, #28]
 5618 05be 5B08     		lsrs	r3, r3, #1
 5619              		.loc 1 3072 18
 5620 05c0 9BB2     		uxth	r3, r3
 5621 05c2 03F00703 		and	r3, r3, #7
 5622 05c6 9AB2     		uxth	r2, r3
 5623              		.loc 1 3072 15
 5624 05c8 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5625 05ca 1343     		orrs	r3, r3, r2
 5626 05cc 7B82     		strh	r3, [r7, #18]	@ movhi
3073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 5627              		.loc 1 3073 12
 5628 05ce FB68     		ldr	r3, [r7, #12]
 5629 05d0 1B68     		ldr	r3, [r3]
 5630              		.loc 1 3073 28
 5631 05d2 7A8A     		ldrh	r2, [r7, #18]
 5632 05d4 DA60     		str	r2, [r3, #12]
 5633 05d6 70E0     		b	.L302
 5634              	.L312:
3074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ret = HAL_ERROR;
 5635              		.loc 1 3077 11
 5636 05d8 0123     		movs	r3, #1
 5637 05da FB76     		strb	r3, [r7, #27]
 5638 05dc 6DE0     		b	.L302
 5639              	.L303:
3078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
 5640              		.loc 1 3082 5
 5641 05de 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 5642 05e2 082B     		cmp	r3, #8
 5643 05e4 58D8     		bhi	.L314
 5644 05e6 01A2     		adr	r2, .L316
 5645 05e8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5646              		.p2align 2
 5647              	.L316:
ARM GAS  /tmp/ccFXX6mG.s 			page 153


 5648 05ec 11060000 		.word	.L320+1
 5649 05f0 2D060000 		.word	.L319+1
 5650 05f4 49060000 		.word	.L318+1
 5651 05f8 99060000 		.word	.L314+1
 5652 05fc 65060000 		.word	.L317+1
 5653 0600 99060000 		.word	.L314+1
 5654 0604 99060000 		.word	.L314+1
 5655 0608 99060000 		.word	.L314+1
 5656 060c 81060000 		.word	.L315+1
 5657              		.p2align 1
 5658              	.L320:
3083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, hua
3087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 5659              		.loc 1 3088 31
 5660 0610 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5661 0614 0246     		mov	r2, r0
 5662 0616 FB68     		ldr	r3, [r7, #12]
 5663 0618 5B68     		ldr	r3, [r3, #4]
 5664 061a 5B08     		lsrs	r3, r3, #1
 5665 061c 1A44     		add	r2, r2, r3
 5666 061e FB68     		ldr	r3, [r7, #12]
 5667 0620 5B68     		ldr	r3, [r3, #4]
 5668 0622 B2FBF3F3 		udiv	r3, r2, r3
 5669              		.loc 1 3088 20
 5670 0626 9BB2     		uxth	r3, r3
 5671              		.loc 1 3088 18
 5672 0628 FB61     		str	r3, [r7, #28]
3089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5673              		.loc 1 3090 9
 5674 062a 38E0     		b	.L321
 5675              	.L319:
3091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate, hua
3094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 5676              		.loc 1 3095 31
 5677 062c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5678 0630 0246     		mov	r2, r0
 5679 0632 FB68     		ldr	r3, [r7, #12]
 5680 0634 5B68     		ldr	r3, [r3, #4]
 5681 0636 5B08     		lsrs	r3, r3, #1
 5682 0638 1A44     		add	r2, r2, r3
 5683 063a FB68     		ldr	r3, [r7, #12]
 5684 063c 5B68     		ldr	r3, [r3, #4]
 5685 063e B2FBF3F3 		udiv	r3, r2, r3
 5686              		.loc 1 3095 20
 5687 0642 9BB2     		uxth	r3, r3
 5688              		.loc 1 3095 18
 5689 0644 FB61     		str	r3, [r7, #28]
3096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccFXX6mG.s 			page 154


 5690              		.loc 1 3097 9
 5691 0646 2AE0     		b	.L321
 5692              	.L318:
3098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
3101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 5693              		.loc 1 3102 31
 5694 0648 FB68     		ldr	r3, [r7, #12]
 5695 064a 5B68     		ldr	r3, [r3, #4]
 5696 064c 5B08     		lsrs	r3, r3, #1
 5697 064e 03F57403 		add	r3, r3, #15990784
 5698 0652 03F51053 		add	r3, r3, #9216
 5699 0656 FA68     		ldr	r2, [r7, #12]
 5700 0658 5268     		ldr	r2, [r2, #4]
 5701 065a B3FBF2F3 		udiv	r3, r3, r2
 5702              		.loc 1 3102 20
 5703 065e 9BB2     		uxth	r3, r3
 5704              		.loc 1 3102 18
 5705 0660 FB61     		str	r3, [r7, #28]
3103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5706              		.loc 1 3104 9
 5707 0662 1CE0     		b	.L321
 5708              	.L317:
3105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, 
3108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate))
 5709              		.loc 1 3109 31
 5710 0664 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5711 0668 0246     		mov	r2, r0
 5712 066a FB68     		ldr	r3, [r7, #12]
 5713 066c 5B68     		ldr	r3, [r3, #4]
 5714 066e 5B08     		lsrs	r3, r3, #1
 5715 0670 1A44     		add	r2, r2, r3
 5716 0672 FB68     		ldr	r3, [r7, #12]
 5717 0674 5B68     		ldr	r3, [r3, #4]
 5718 0676 B2FBF3F3 		udiv	r3, r2, r3
 5719              		.loc 1 3109 20
 5720 067a 9BB2     		uxth	r3, r3
 5721              		.loc 1 3109 18
 5722 067c FB61     		str	r3, [r7, #28]
3110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5723              		.loc 1 3111 9
 5724 067e 0EE0     		b	.L321
 5725              	.L315:
3112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart-
3115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 5726              		.loc 1 3116 31
 5727 0680 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccFXX6mG.s 			page 155


 5728 0682 5B68     		ldr	r3, [r3, #4]
 5729 0684 5B08     		lsrs	r3, r3, #1
 5730 0686 03F50042 		add	r2, r3, #32768
 5731 068a FB68     		ldr	r3, [r7, #12]
 5732 068c 5B68     		ldr	r3, [r3, #4]
 5733 068e B2FBF3F3 		udiv	r3, r2, r3
 5734              		.loc 1 3116 20
 5735 0692 9BB2     		uxth	r3, r3
 5736              		.loc 1 3116 18
 5737 0694 FB61     		str	r3, [r7, #28]
3117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5738              		.loc 1 3118 9
 5739 0696 02E0     		b	.L321
 5740              	.L314:
3119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
3120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
3121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 5741              		.loc 1 3121 13
 5742 0698 0123     		movs	r3, #1
 5743 069a FB76     		strb	r3, [r7, #27]
3122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5744              		.loc 1 3122 9
 5745 069c 00BF     		nop
 5746              	.L321:
3123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 5747              		.loc 1 3126 8
 5748 069e FB69     		ldr	r3, [r7, #28]
 5749 06a0 0F2B     		cmp	r3, #15
 5750 06a2 08D9     		bls	.L322
 5751              		.loc 1 3126 36 discriminator 1
 5752 06a4 FB69     		ldr	r3, [r7, #28]
 5753 06a6 B3F5803F 		cmp	r3, #65536
 5754 06aa 04D2     		bcs	.L322
3127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = usartdiv;
 5755              		.loc 1 3128 12
 5756 06ac FB68     		ldr	r3, [r7, #12]
 5757 06ae 1B68     		ldr	r3, [r3]
 5758              		.loc 1 3128 28
 5759 06b0 FA69     		ldr	r2, [r7, #28]
 5760 06b2 DA60     		str	r2, [r3, #12]
 5761 06b4 01E0     		b	.L302
 5762              	.L322:
3129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ret = HAL_ERROR;
 5763              		.loc 1 3132 11
 5764 06b6 0123     		movs	r3, #1
 5765 06b8 FB76     		strb	r3, [r7, #27]
 5766              	.L302:
3133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccFXX6mG.s 			page 156


3135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
3139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
3140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear ISR function pointers */
3143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
 5767              		.loc 1 3143 16
 5768 06ba FB68     		ldr	r3, [r7, #12]
 5769 06bc 0022     		movs	r2, #0
 5770 06be 1A66     		str	r2, [r3, #96]
3144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 5771              		.loc 1 3144 16
 5772 06c0 FB68     		ldr	r3, [r7, #12]
 5773 06c2 0022     		movs	r2, #0
 5774 06c4 5A66     		str	r2, [r3, #100]
3145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return ret;
 5775              		.loc 1 3146 10
 5776 06c6 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
3147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5777              		.loc 1 3147 1
 5778 06c8 1846     		mov	r0, r3
 5779 06ca 2C37     		adds	r7, r7, #44
 5780              	.LCFI218:
 5781              		.cfi_def_cfa_offset 36
 5782 06cc BD46     		mov	sp, r7
 5783              	.LCFI219:
 5784              		.cfi_def_cfa_register 13
 5785              		@ sp needed
 5786 06ce BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5787              	.L327:
 5788 06d2 00BF     		.align	2
 5789              	.L326:
 5790 06d4 000024F4 		.word	-198967296
 5791              		.cfi_endproc
 5792              	.LFE169:
 5794              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 5795              		.align	1
 5796              		.global	UART_AdvFeatureConfig
 5797              		.syntax unified
 5798              		.thumb
 5799              		.thumb_func
 5800              		.fpu fpv4-sp-d16
 5802              	UART_AdvFeatureConfig:
 5803              	.LFB170:
3148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5804              		.loc 1 3155 1
ARM GAS  /tmp/ccFXX6mG.s 			page 157


 5805              		.cfi_startproc
 5806              		@ args = 0, pretend = 0, frame = 8
 5807              		@ frame_needed = 1, uses_anonymous_args = 0
 5808              		@ link register save eliminated.
 5809 0000 80B4     		push	{r7}
 5810              	.LCFI220:
 5811              		.cfi_def_cfa_offset 4
 5812              		.cfi_offset 7, -4
 5813 0002 83B0     		sub	sp, sp, #12
 5814              	.LCFI221:
 5815              		.cfi_def_cfa_offset 16
 5816 0004 00AF     		add	r7, sp, #0
 5817              	.LCFI222:
 5818              		.cfi_def_cfa_register 7
 5819 0006 7860     		str	r0, [r7, #4]
3156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 5820              		.loc 1 3160 7
 5821 0008 7B68     		ldr	r3, [r7, #4]
 5822 000a 5B6A     		ldr	r3, [r3, #36]
 5823 000c 03F00103 		and	r3, r3, #1
 5824              		.loc 1 3160 6
 5825 0010 002B     		cmp	r3, #0
 5826 0012 0AD0     		beq	.L329
3161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 5827              		.loc 1 3163 5
 5828 0014 7B68     		ldr	r3, [r7, #4]
 5829 0016 1B68     		ldr	r3, [r3]
 5830 0018 5B68     		ldr	r3, [r3, #4]
 5831 001a 23F40031 		bic	r1, r3, #131072
 5832 001e 7B68     		ldr	r3, [r7, #4]
 5833 0020 9A6A     		ldr	r2, [r3, #40]
 5834 0022 7B68     		ldr	r3, [r7, #4]
 5835 0024 1B68     		ldr	r3, [r3]
 5836 0026 0A43     		orrs	r2, r2, r1
 5837 0028 5A60     		str	r2, [r3, #4]
 5838              	.L329:
3164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 5839              		.loc 1 3167 7
 5840 002a 7B68     		ldr	r3, [r7, #4]
 5841 002c 5B6A     		ldr	r3, [r3, #36]
 5842 002e 03F00203 		and	r3, r3, #2
 5843              		.loc 1 3167 6
 5844 0032 002B     		cmp	r3, #0
 5845 0034 0AD0     		beq	.L330
3168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 5846              		.loc 1 3170 5
ARM GAS  /tmp/ccFXX6mG.s 			page 158


 5847 0036 7B68     		ldr	r3, [r7, #4]
 5848 0038 1B68     		ldr	r3, [r3]
 5849 003a 5B68     		ldr	r3, [r3, #4]
 5850 003c 23F48031 		bic	r1, r3, #65536
 5851 0040 7B68     		ldr	r3, [r7, #4]
 5852 0042 DA6A     		ldr	r2, [r3, #44]
 5853 0044 7B68     		ldr	r3, [r7, #4]
 5854 0046 1B68     		ldr	r3, [r3]
 5855 0048 0A43     		orrs	r2, r2, r1
 5856 004a 5A60     		str	r2, [r3, #4]
 5857              	.L330:
3171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure data inversion */
3174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 5858              		.loc 1 3174 7
 5859 004c 7B68     		ldr	r3, [r7, #4]
 5860 004e 5B6A     		ldr	r3, [r3, #36]
 5861 0050 03F00403 		and	r3, r3, #4
 5862              		.loc 1 3174 6
 5863 0054 002B     		cmp	r3, #0
 5864 0056 0AD0     		beq	.L331
3175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 5865              		.loc 1 3177 5
 5866 0058 7B68     		ldr	r3, [r7, #4]
 5867 005a 1B68     		ldr	r3, [r3]
 5868 005c 5B68     		ldr	r3, [r3, #4]
 5869 005e 23F48021 		bic	r1, r3, #262144
 5870 0062 7B68     		ldr	r3, [r7, #4]
 5871 0064 1A6B     		ldr	r2, [r3, #48]
 5872 0066 7B68     		ldr	r3, [r7, #4]
 5873 0068 1B68     		ldr	r3, [r3]
 5874 006a 0A43     		orrs	r2, r2, r1
 5875 006c 5A60     		str	r2, [r3, #4]
 5876              	.L331:
3178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 5877              		.loc 1 3181 7
 5878 006e 7B68     		ldr	r3, [r7, #4]
 5879 0070 5B6A     		ldr	r3, [r3, #36]
 5880 0072 03F00803 		and	r3, r3, #8
 5881              		.loc 1 3181 6
 5882 0076 002B     		cmp	r3, #0
 5883 0078 0AD0     		beq	.L332
3182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 5884              		.loc 1 3184 5
 5885 007a 7B68     		ldr	r3, [r7, #4]
 5886 007c 1B68     		ldr	r3, [r3]
 5887 007e 5B68     		ldr	r3, [r3, #4]
 5888 0080 23F40041 		bic	r1, r3, #32768
 5889 0084 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFXX6mG.s 			page 159


 5890 0086 5A6B     		ldr	r2, [r3, #52]
 5891 0088 7B68     		ldr	r3, [r7, #4]
 5892 008a 1B68     		ldr	r3, [r3]
 5893 008c 0A43     		orrs	r2, r2, r1
 5894 008e 5A60     		str	r2, [r3, #4]
 5895              	.L332:
3185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 5896              		.loc 1 3188 7
 5897 0090 7B68     		ldr	r3, [r7, #4]
 5898 0092 5B6A     		ldr	r3, [r3, #36]
 5899 0094 03F01003 		and	r3, r3, #16
 5900              		.loc 1 3188 6
 5901 0098 002B     		cmp	r3, #0
 5902 009a 0AD0     		beq	.L333
3189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 5903              		.loc 1 3191 5
 5904 009c 7B68     		ldr	r3, [r7, #4]
 5905 009e 1B68     		ldr	r3, [r3]
 5906 00a0 9B68     		ldr	r3, [r3, #8]
 5907 00a2 23F48051 		bic	r1, r3, #4096
 5908 00a6 7B68     		ldr	r3, [r7, #4]
 5909 00a8 9A6B     		ldr	r2, [r3, #56]
 5910 00aa 7B68     		ldr	r3, [r7, #4]
 5911 00ac 1B68     		ldr	r3, [r3]
 5912 00ae 0A43     		orrs	r2, r2, r1
 5913 00b0 9A60     		str	r2, [r3, #8]
 5914              	.L333:
3192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 5915              		.loc 1 3195 7
 5916 00b2 7B68     		ldr	r3, [r7, #4]
 5917 00b4 5B6A     		ldr	r3, [r3, #36]
 5918 00b6 03F02003 		and	r3, r3, #32
 5919              		.loc 1 3195 6
 5920 00ba 002B     		cmp	r3, #0
 5921 00bc 0AD0     		beq	.L334
3196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 5922              		.loc 1 3198 5
 5923 00be 7B68     		ldr	r3, [r7, #4]
 5924 00c0 1B68     		ldr	r3, [r3]
 5925 00c2 9B68     		ldr	r3, [r3, #8]
 5926 00c4 23F40051 		bic	r1, r3, #8192
 5927 00c8 7B68     		ldr	r3, [r7, #4]
 5928 00ca DA6B     		ldr	r2, [r3, #60]
 5929 00cc 7B68     		ldr	r3, [r7, #4]
 5930 00ce 1B68     		ldr	r3, [r3]
 5931 00d0 0A43     		orrs	r2, r2, r1
 5932 00d2 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccFXX6mG.s 			page 160


 5933              	.L334:
3199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 5934              		.loc 1 3202 7
 5935 00d4 7B68     		ldr	r3, [r7, #4]
 5936 00d6 5B6A     		ldr	r3, [r3, #36]
 5937 00d8 03F04003 		and	r3, r3, #64
 5938              		.loc 1 3202 6
 5939 00dc 002B     		cmp	r3, #0
 5940 00de 1AD0     		beq	.L335
3203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 5941              		.loc 1 3206 5
 5942 00e0 7B68     		ldr	r3, [r7, #4]
 5943 00e2 1B68     		ldr	r3, [r3]
 5944 00e4 5B68     		ldr	r3, [r3, #4]
 5945 00e6 23F48011 		bic	r1, r3, #1048576
 5946 00ea 7B68     		ldr	r3, [r7, #4]
 5947 00ec 1A6C     		ldr	r2, [r3, #64]
 5948 00ee 7B68     		ldr	r3, [r7, #4]
 5949 00f0 1B68     		ldr	r3, [r3]
 5950 00f2 0A43     		orrs	r2, r2, r1
 5951 00f4 5A60     		str	r2, [r3, #4]
3207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 5952              		.loc 1 3208 28
 5953 00f6 7B68     		ldr	r3, [r7, #4]
 5954 00f8 1B6C     		ldr	r3, [r3, #64]
 5955              		.loc 1 3208 8
 5956 00fa B3F5801F 		cmp	r3, #1048576
 5957 00fe 0AD1     		bne	.L335
3209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5958              		.loc 1 3211 7
 5959 0100 7B68     		ldr	r3, [r7, #4]
 5960 0102 1B68     		ldr	r3, [r3]
 5961 0104 5B68     		ldr	r3, [r3, #4]
 5962 0106 23F4C001 		bic	r1, r3, #6291456
 5963 010a 7B68     		ldr	r3, [r7, #4]
 5964 010c 5A6C     		ldr	r2, [r3, #68]
 5965 010e 7B68     		ldr	r3, [r7, #4]
 5966 0110 1B68     		ldr	r3, [r3]
 5967 0112 0A43     		orrs	r2, r2, r1
 5968 0114 5A60     		str	r2, [r3, #4]
 5969              	.L335:
3212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 5970              		.loc 1 3216 7
 5971 0116 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFXX6mG.s 			page 161


 5972 0118 5B6A     		ldr	r3, [r3, #36]
 5973 011a 03F08003 		and	r3, r3, #128
 5974              		.loc 1 3216 6
 5975 011e 002B     		cmp	r3, #0
 5976 0120 0AD0     		beq	.L337
3217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 5977              		.loc 1 3219 5
 5978 0122 7B68     		ldr	r3, [r7, #4]
 5979 0124 1B68     		ldr	r3, [r3]
 5980 0126 5B68     		ldr	r3, [r3, #4]
 5981 0128 23F40021 		bic	r1, r3, #524288
 5982 012c 7B68     		ldr	r3, [r7, #4]
 5983 012e 9A6C     		ldr	r2, [r3, #72]
 5984 0130 7B68     		ldr	r3, [r7, #4]
 5985 0132 1B68     		ldr	r3, [r3]
 5986 0134 0A43     		orrs	r2, r2, r1
 5987 0136 5A60     		str	r2, [r3, #4]
 5988              	.L337:
3220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5989              		.loc 1 3221 1
 5990 0138 00BF     		nop
 5991 013a 0C37     		adds	r7, r7, #12
 5992              	.LCFI223:
 5993              		.cfi_def_cfa_offset 4
 5994 013c BD46     		mov	sp, r7
 5995              	.LCFI224:
 5996              		.cfi_def_cfa_register 13
 5997              		@ sp needed
 5998 013e 5DF8047B 		ldr	r7, [sp], #4
 5999              	.LCFI225:
 6000              		.cfi_restore 7
 6001              		.cfi_def_cfa_offset 0
 6002 0142 7047     		bx	lr
 6003              		.cfi_endproc
 6004              	.LFE170:
 6006              		.section	.text.UART_CheckIdleState,"ax",%progbits
 6007              		.align	1
 6008              		.global	UART_CheckIdleState
 6009              		.syntax unified
 6010              		.thumb
 6011              		.thumb_func
 6012              		.fpu fpv4-sp-d16
 6014              	UART_CheckIdleState:
 6015              	.LFB171:
3222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Check the UART Idle State.
3225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6016              		.loc 1 3229 1
 6017              		.cfi_startproc
ARM GAS  /tmp/ccFXX6mG.s 			page 162


 6018              		@ args = 0, pretend = 0, frame = 16
 6019              		@ frame_needed = 1, uses_anonymous_args = 0
 6020 0000 80B5     		push	{r7, lr}
 6021              	.LCFI226:
 6022              		.cfi_def_cfa_offset 8
 6023              		.cfi_offset 7, -8
 6024              		.cfi_offset 14, -4
 6025 0002 86B0     		sub	sp, sp, #24
 6026              	.LCFI227:
 6027              		.cfi_def_cfa_offset 32
 6028 0004 02AF     		add	r7, sp, #8
 6029              	.LCFI228:
 6030              		.cfi_def_cfa 7, 24
 6031 0006 7860     		str	r0, [r7, #4]
3230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
3231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 6032              		.loc 1 3233 20
 6033 0008 7B68     		ldr	r3, [r7, #4]
 6034 000a 0022     		movs	r2, #0
 6035 000c DA67     		str	r2, [r3, #124]
3234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
3236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tickstart = HAL_GetTick();
 6036              		.loc 1 3236 15
 6037 000e FFF7FEFF 		bl	HAL_GetTick
 6038 0012 F860     		str	r0, [r7, #12]
3237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 6039              		.loc 1 3239 13
 6040 0014 7B68     		ldr	r3, [r7, #4]
 6041 0016 1B68     		ldr	r3, [r3]
 6042              		.loc 1 3239 23
 6043 0018 1B68     		ldr	r3, [r3]
 6044              		.loc 1 3239 29
 6045 001a 03F00803 		and	r3, r3, #8
 6046              		.loc 1 3239 6
 6047 001e 082B     		cmp	r3, #8
 6048 0020 0ED1     		bne	.L339
3240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 6049              		.loc 1 3242 9
 6050 0022 6FF07E43 		mvn	r3, #-33554432
 6051 0026 0093     		str	r3, [sp]
 6052 0028 FB68     		ldr	r3, [r7, #12]
 6053 002a 0022     		movs	r2, #0
 6054 002c 4FF40011 		mov	r1, #2097152
 6055 0030 7868     		ldr	r0, [r7, #4]
 6056 0032 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 6057 0036 0346     		mov	r3, r0
 6058              		.loc 1 3242 8
 6059 0038 002B     		cmp	r3, #0
 6060 003a 01D0     		beq	.L339
3243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccFXX6mG.s 			page 163


3244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
 6061              		.loc 1 3245 14
 6062 003c 0323     		movs	r3, #3
 6063 003e 20E0     		b	.L340
 6064              	.L339:
3246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 6065              		.loc 1 3250 13
 6066 0040 7B68     		ldr	r3, [r7, #4]
 6067 0042 1B68     		ldr	r3, [r3]
 6068              		.loc 1 3250 23
 6069 0044 1B68     		ldr	r3, [r3]
 6070              		.loc 1 3250 29
 6071 0046 03F00403 		and	r3, r3, #4
 6072              		.loc 1 3250 6
 6073 004a 042B     		cmp	r3, #4
 6074 004c 0ED1     		bne	.L341
3251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until REACK flag is set */
3253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 6075              		.loc 1 3253 9
 6076 004e 6FF07E43 		mvn	r3, #-33554432
 6077 0052 0093     		str	r3, [sp]
 6078 0054 FB68     		ldr	r3, [r7, #12]
 6079 0056 0022     		movs	r2, #0
 6080 0058 4FF48001 		mov	r1, #4194304
 6081 005c 7868     		ldr	r0, [r7, #4]
 6082 005e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 6083 0062 0346     		mov	r3, r0
 6084              		.loc 1 3253 8
 6085 0064 002B     		cmp	r3, #0
 6086 0066 01D0     		beq	.L341
3254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
 6087              		.loc 1 3256 14
 6088 0068 0323     		movs	r3, #3
 6089 006a 0AE0     		b	.L340
 6090              	.L341:
3257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART State */
3261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6091              		.loc 1 3261 17
 6092 006c 7B68     		ldr	r3, [r7, #4]
 6093 006e 2022     		movs	r2, #32
 6094 0070 5A67     		str	r2, [r3, #116]
3262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6095              		.loc 1 3262 18
 6096 0072 7B68     		ldr	r3, [r7, #4]
 6097 0074 2022     		movs	r2, #32
 6098 0076 9A67     		str	r2, [r3, #120]
ARM GAS  /tmp/ccFXX6mG.s 			page 164


3263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6099              		.loc 1 3264 3
 6100 0078 7B68     		ldr	r3, [r7, #4]
 6101 007a 0022     		movs	r2, #0
 6102 007c 83F87020 		strb	r2, [r3, #112]
3265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 6103              		.loc 1 3266 10
 6104 0080 0023     		movs	r3, #0
 6105              	.L340:
3267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6106              		.loc 1 3267 1
 6107 0082 1846     		mov	r0, r3
 6108 0084 1037     		adds	r7, r7, #16
 6109              	.LCFI229:
 6110              		.cfi_def_cfa_offset 8
 6111 0086 BD46     		mov	sp, r7
 6112              	.LCFI230:
 6113              		.cfi_def_cfa_register 13
 6114              		@ sp needed
 6115 0088 80BD     		pop	{r7, pc}
 6116              		.cfi_endproc
 6117              	.LFE171:
 6119              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 6120              		.align	1
 6121              		.global	UART_WaitOnFlagUntilTimeout
 6122              		.syntax unified
 6123              		.thumb
 6124              		.thumb_func
 6125              		.fpu fpv4-sp-d16
 6127              	UART_WaitOnFlagUntilTimeout:
 6128              	.LFB172:
3268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart     UART handle.
3272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Tickstart Tick start value
3275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout   Timeout duration
3276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6129              		.loc 1 3280 1
 6130              		.cfi_startproc
 6131              		@ args = 4, pretend = 0, frame = 16
 6132              		@ frame_needed = 1, uses_anonymous_args = 0
 6133 0000 80B5     		push	{r7, lr}
 6134              	.LCFI231:
 6135              		.cfi_def_cfa_offset 8
 6136              		.cfi_offset 7, -8
 6137              		.cfi_offset 14, -4
 6138 0002 84B0     		sub	sp, sp, #16
 6139              	.LCFI232:
ARM GAS  /tmp/ccFXX6mG.s 			page 165


 6140              		.cfi_def_cfa_offset 24
 6141 0004 00AF     		add	r7, sp, #0
 6142              	.LCFI233:
 6143              		.cfi_def_cfa_register 7
 6144 0006 F860     		str	r0, [r7, #12]
 6145 0008 B960     		str	r1, [r7, #8]
 6146 000a 3B60     		str	r3, [r7]
 6147 000c 1346     		mov	r3, r2
 6148 000e FB71     		strb	r3, [r7, #7]
3281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
3282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 6149              		.loc 1 3282 9
 6150 0010 2AE0     		b	.L343
 6151              	.L346:
3283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check for the Timeout */
3285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 6152              		.loc 1 3285 8
 6153 0012 BB69     		ldr	r3, [r7, #24]
 6154 0014 B3F1FF3F 		cmp	r3, #-1
 6155 0018 26D0     		beq	.L343
3286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 6156              		.loc 1 3287 13
 6157 001a FFF7FEFF 		bl	HAL_GetTick
 6158 001e 0246     		mov	r2, r0
 6159              		.loc 1 3287 27
 6160 0020 3B68     		ldr	r3, [r7]
 6161 0022 D31A     		subs	r3, r2, r3
 6162              		.loc 1 3287 10
 6163 0024 BA69     		ldr	r2, [r7, #24]
 6164 0026 9A42     		cmp	r2, r3
 6165 0028 02D3     		bcc	.L344
 6166              		.loc 1 3287 51 discriminator 1
 6167 002a BB69     		ldr	r3, [r7, #24]
 6168 002c 002B     		cmp	r3, #0
 6169 002e 1BD1     		bne	.L343
 6170              	.L344:
3288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEI
3292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 6171              		.loc 1 3293 9
 6172 0030 FB68     		ldr	r3, [r7, #12]
 6173 0032 1B68     		ldr	r3, [r3]
 6174 0034 1A68     		ldr	r2, [r3]
 6175 0036 FB68     		ldr	r3, [r7, #12]
 6176 0038 1B68     		ldr	r3, [r3]
 6177 003a 22F4D072 		bic	r2, r2, #416
 6178 003e 1A60     		str	r2, [r3]
3294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6179              		.loc 1 3295 9
 6180 0040 FB68     		ldr	r3, [r7, #12]
 6181 0042 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccFXX6mG.s 			page 166


 6182 0044 9A68     		ldr	r2, [r3, #8]
 6183 0046 FB68     		ldr	r3, [r7, #12]
 6184 0048 1B68     		ldr	r3, [r3]
 6185 004a 22F00102 		bic	r2, r2, #1
 6186 004e 9A60     		str	r2, [r3, #8]
3296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 6187              		.loc 1 3297 23
 6188 0050 FB68     		ldr	r3, [r7, #12]
 6189 0052 2022     		movs	r2, #32
 6190 0054 5A67     		str	r2, [r3, #116]
3298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 6191              		.loc 1 3298 24
 6192 0056 FB68     		ldr	r3, [r7, #12]
 6193 0058 2022     		movs	r2, #32
 6194 005a 9A67     		str	r2, [r3, #120]
3299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 6195              		.loc 1 3300 9
 6196 005c FB68     		ldr	r3, [r7, #12]
 6197 005e 0022     		movs	r2, #0
 6198 0060 83F87020 		strb	r2, [r3, #112]
3301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
 6199              		.loc 1 3302 16
 6200 0064 0323     		movs	r3, #3
 6201 0066 0FE0     		b	.L345
 6202              	.L343:
3282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6203              		.loc 1 3282 11
 6204 0068 FB68     		ldr	r3, [r7, #12]
 6205 006a 1B68     		ldr	r3, [r3]
 6206 006c DA69     		ldr	r2, [r3, #28]
 6207 006e BB68     		ldr	r3, [r7, #8]
 6208 0070 1340     		ands	r3, r3, r2
3282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6209              		.loc 1 3282 50
 6210 0072 BA68     		ldr	r2, [r7, #8]
 6211 0074 9A42     		cmp	r2, r3
 6212 0076 0CBF     		ite	eq
 6213 0078 0123     		moveq	r3, #1
 6214 007a 0023     		movne	r3, #0
 6215 007c DBB2     		uxtb	r3, r3
 6216 007e 1A46     		mov	r2, r3
3282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6217              		.loc 1 3282 59
 6218 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
3282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6219              		.loc 1 3282 9
 6220 0082 9A42     		cmp	r2, r3
 6221 0084 C5D0     		beq	.L346
3303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 6222              		.loc 1 3306 10
 6223 0086 0023     		movs	r3, #0
ARM GAS  /tmp/ccFXX6mG.s 			page 167


 6224              	.L345:
3307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6225              		.loc 1 3307 1
 6226 0088 1846     		mov	r0, r3
 6227 008a 1037     		adds	r7, r7, #16
 6228              	.LCFI234:
 6229              		.cfi_def_cfa_offset 8
 6230 008c BD46     		mov	sp, r7
 6231              	.LCFI235:
 6232              		.cfi_def_cfa_register 13
 6233              		@ sp needed
 6234 008e 80BD     		pop	{r7, pc}
 6235              		.cfi_endproc
 6236              	.LFE172:
 6238              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 6239              		.align	1
 6240              		.syntax unified
 6241              		.thumb
 6242              		.thumb_func
 6243              		.fpu fpv4-sp-d16
 6245              	UART_EndTxTransfer:
 6246              	.LFB173:
3308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6247              		.loc 1 3316 1
 6248              		.cfi_startproc
 6249              		@ args = 0, pretend = 0, frame = 8
 6250              		@ frame_needed = 1, uses_anonymous_args = 0
 6251              		@ link register save eliminated.
 6252 0000 80B4     		push	{r7}
 6253              	.LCFI236:
 6254              		.cfi_def_cfa_offset 4
 6255              		.cfi_offset 7, -4
 6256 0002 83B0     		sub	sp, sp, #12
 6257              	.LCFI237:
 6258              		.cfi_def_cfa_offset 16
 6259 0004 00AF     		add	r7, sp, #0
 6260              	.LCFI238:
 6261              		.cfi_def_cfa_register 7
 6262 0006 7860     		str	r0, [r7, #4]
3317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
3320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
3321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 6263              		.loc 1 3323 3
 6264 0008 7B68     		ldr	r3, [r7, #4]
 6265 000a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccFXX6mG.s 			page 168


 6266 000c 1A68     		ldr	r2, [r3]
 6267 000e 7B68     		ldr	r3, [r7, #4]
 6268 0010 1B68     		ldr	r3, [r3]
 6269 0012 22F0C002 		bic	r2, r2, #192
 6270 0016 1A60     		str	r2, [r3]
3324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6271              		.loc 1 3327 17
 6272 0018 7B68     		ldr	r3, [r7, #4]
 6273 001a 2022     		movs	r2, #32
 6274 001c 5A67     		str	r2, [r3, #116]
3328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6275              		.loc 1 3328 1
 6276 001e 00BF     		nop
 6277 0020 0C37     		adds	r7, r7, #12
 6278              	.LCFI239:
 6279              		.cfi_def_cfa_offset 4
 6280 0022 BD46     		mov	sp, r7
 6281              	.LCFI240:
 6282              		.cfi_def_cfa_register 13
 6283              		@ sp needed
 6284 0024 5DF8047B 		ldr	r7, [sp], #4
 6285              	.LCFI241:
 6286              		.cfi_restore 7
 6287              		.cfi_def_cfa_offset 0
 6288 0028 7047     		bx	lr
 6289              		.cfi_endproc
 6290              	.LFE173:
 6292              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 6293              		.align	1
 6294              		.syntax unified
 6295              		.thumb
 6296              		.thumb_func
 6297              		.fpu fpv4-sp-d16
 6299              	UART_EndRxTransfer:
 6300              	.LFB174:
3329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6301              		.loc 1 3337 1
 6302              		.cfi_startproc
 6303              		@ args = 0, pretend = 0, frame = 8
 6304              		@ frame_needed = 1, uses_anonymous_args = 0
 6305              		@ link register save eliminated.
 6306 0000 80B4     		push	{r7}
 6307              	.LCFI242:
 6308              		.cfi_def_cfa_offset 4
 6309              		.cfi_offset 7, -4
 6310 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccFXX6mG.s 			page 169


 6311              	.LCFI243:
 6312              		.cfi_def_cfa_offset 16
 6313 0004 00AF     		add	r7, sp, #0
 6314              	.LCFI244:
 6315              		.cfi_def_cfa_register 7
 6316 0006 7860     		str	r0, [r7, #4]
3338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
3342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 6317              		.loc 1 3343 3
 6318 0008 7B68     		ldr	r3, [r7, #4]
 6319 000a 1B68     		ldr	r3, [r3]
 6320 000c 1A68     		ldr	r2, [r3]
 6321 000e 7B68     		ldr	r3, [r7, #4]
 6322 0010 1B68     		ldr	r3, [r3]
 6323 0012 22F49072 		bic	r2, r2, #288
 6324 0016 1A60     		str	r2, [r3]
3344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6325              		.loc 1 3344 3
 6326 0018 7B68     		ldr	r3, [r7, #4]
 6327 001a 1B68     		ldr	r3, [r3]
 6328 001c 9A68     		ldr	r2, [r3, #8]
 6329 001e 7B68     		ldr	r3, [r7, #4]
 6330 0020 1B68     		ldr	r3, [r3]
 6331 0022 22F00102 		bic	r2, r2, #1
 6332 0026 9A60     		str	r2, [r3, #8]
3345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6333              		.loc 1 3348 18
 6334 0028 7B68     		ldr	r3, [r7, #4]
 6335 002a 2022     		movs	r2, #32
 6336 002c 9A67     		str	r2, [r3, #120]
3349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
 6337              		.loc 1 3351 16
 6338 002e 7B68     		ldr	r3, [r7, #4]
 6339 0030 0022     		movs	r2, #0
 6340 0032 1A66     		str	r2, [r3, #96]
3352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6341              		.loc 1 3352 1
 6342 0034 00BF     		nop
 6343 0036 0C37     		adds	r7, r7, #12
 6344              	.LCFI245:
 6345              		.cfi_def_cfa_offset 4
 6346 0038 BD46     		mov	sp, r7
 6347              	.LCFI246:
 6348              		.cfi_def_cfa_register 13
 6349              		@ sp needed
 6350 003a 5DF8047B 		ldr	r7, [sp], #4
 6351              	.LCFI247:
 6352              		.cfi_restore 7
ARM GAS  /tmp/ccFXX6mG.s 			page 170


 6353              		.cfi_def_cfa_offset 0
 6354 003e 7047     		bx	lr
 6355              		.cfi_endproc
 6356              	.LFE174:
 6358              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 6359              		.align	1
 6360              		.syntax unified
 6361              		.thumb
 6362              		.thumb_func
 6363              		.fpu fpv4-sp-d16
 6365              	UART_DMATransmitCplt:
 6366              	.LFB175:
3353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6367              		.loc 1 3361 1
 6368              		.cfi_startproc
 6369              		@ args = 0, pretend = 0, frame = 16
 6370              		@ frame_needed = 1, uses_anonymous_args = 0
 6371 0000 80B5     		push	{r7, lr}
 6372              	.LCFI248:
 6373              		.cfi_def_cfa_offset 8
 6374              		.cfi_offset 7, -8
 6375              		.cfi_offset 14, -4
 6376 0002 84B0     		sub	sp, sp, #16
 6377              	.LCFI249:
 6378              		.cfi_def_cfa_offset 24
 6379 0004 00AF     		add	r7, sp, #0
 6380              	.LCFI250:
 6381              		.cfi_def_cfa_register 7
 6382 0006 7860     		str	r0, [r7, #4]
3362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6383              		.loc 1 3362 23
 6384 0008 7B68     		ldr	r3, [r7, #4]
 6385 000a 9B6A     		ldr	r3, [r3, #40]
 6386 000c FB60     		str	r3, [r7, #12]
3363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
 6387              		.loc 1 3365 7
 6388 000e 7B68     		ldr	r3, [r7, #4]
 6389 0010 1B68     		ldr	r3, [r3]
 6390 0012 1B68     		ldr	r3, [r3]
 6391 0014 03F02003 		and	r3, r3, #32
 6392              		.loc 1 3365 6
 6393 0018 002B     		cmp	r3, #0
 6394 001a 14D1     		bne	.L350
3366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 6395              		.loc 1 3367 24
 6396 001c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccFXX6mG.s 			page 171


 6397 001e 0022     		movs	r2, #0
 6398 0020 A3F85220 		strh	r2, [r3, #82]	@ movhi
3368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 6399              		.loc 1 3371 5
 6400 0024 FB68     		ldr	r3, [r7, #12]
 6401 0026 1B68     		ldr	r3, [r3]
 6402 0028 9A68     		ldr	r2, [r3, #8]
 6403 002a FB68     		ldr	r3, [r7, #12]
 6404 002c 1B68     		ldr	r3, [r3]
 6405 002e 22F08002 		bic	r2, r2, #128
 6406 0032 9A60     		str	r2, [r3, #8]
3372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 6407              		.loc 1 3374 5
 6408 0034 FB68     		ldr	r3, [r7, #12]
 6409 0036 1B68     		ldr	r3, [r3]
 6410 0038 1A68     		ldr	r2, [r3]
 6411 003a FB68     		ldr	r3, [r7, #12]
 6412 003c 1B68     		ldr	r3, [r3]
 6413 003e 42F04002 		orr	r2, r2, #64
 6414 0042 1A60     		str	r2, [r3]
3375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Circular mode */
3377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6415              		.loc 1 3387 1
 6416 0044 02E0     		b	.L352
 6417              	.L350:
3384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 6418              		.loc 1 3384 5
 6419 0046 F868     		ldr	r0, [r7, #12]
 6420 0048 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 6421              	.L352:
 6422              		.loc 1 3387 1
 6423 004c 00BF     		nop
 6424 004e 1037     		adds	r7, r7, #16
 6425              	.LCFI251:
 6426              		.cfi_def_cfa_offset 8
 6427 0050 BD46     		mov	sp, r7
 6428              	.LCFI252:
 6429              		.cfi_def_cfa_register 13
 6430              		@ sp needed
 6431 0052 80BD     		pop	{r7, pc}
 6432              		.cfi_endproc
ARM GAS  /tmp/ccFXX6mG.s 			page 172


 6433              	.LFE175:
 6435              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 6436              		.align	1
 6437              		.syntax unified
 6438              		.thumb
 6439              		.thumb_func
 6440              		.fpu fpv4-sp-d16
 6442              	UART_DMATxHalfCplt:
 6443              	.LFB176:
3388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6444              		.loc 1 3395 1
 6445              		.cfi_startproc
 6446              		@ args = 0, pretend = 0, frame = 16
 6447              		@ frame_needed = 1, uses_anonymous_args = 0
 6448 0000 80B5     		push	{r7, lr}
 6449              	.LCFI253:
 6450              		.cfi_def_cfa_offset 8
 6451              		.cfi_offset 7, -8
 6452              		.cfi_offset 14, -4
 6453 0002 84B0     		sub	sp, sp, #16
 6454              	.LCFI254:
 6455              		.cfi_def_cfa_offset 24
 6456 0004 00AF     		add	r7, sp, #0
 6457              	.LCFI255:
 6458              		.cfi_def_cfa_register 7
 6459 0006 7860     		str	r0, [r7, #4]
3396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6460              		.loc 1 3396 23
 6461 0008 7B68     		ldr	r3, [r7, #4]
 6462 000a 9B6A     		ldr	r3, [r3, #40]
 6463 000c FB60     		str	r3, [r7, #12]
3397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 6464              		.loc 1 3403 3
 6465 000e F868     		ldr	r0, [r7, #12]
 6466 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
3404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6467              		.loc 1 3405 1
 6468 0014 00BF     		nop
 6469 0016 1037     		adds	r7, r7, #16
 6470              	.LCFI256:
 6471              		.cfi_def_cfa_offset 8
 6472 0018 BD46     		mov	sp, r7
 6473              	.LCFI257:
ARM GAS  /tmp/ccFXX6mG.s 			page 173


 6474              		.cfi_def_cfa_register 13
 6475              		@ sp needed
 6476 001a 80BD     		pop	{r7, pc}
 6477              		.cfi_endproc
 6478              	.LFE176:
 6480              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 6481              		.align	1
 6482              		.syntax unified
 6483              		.thumb
 6484              		.thumb_func
 6485              		.fpu fpv4-sp-d16
 6487              	UART_DMAReceiveCplt:
 6488              	.LFB177:
3406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6489              		.loc 1 3413 1
 6490              		.cfi_startproc
 6491              		@ args = 0, pretend = 0, frame = 16
 6492              		@ frame_needed = 1, uses_anonymous_args = 0
 6493 0000 80B5     		push	{r7, lr}
 6494              	.LCFI258:
 6495              		.cfi_def_cfa_offset 8
 6496              		.cfi_offset 7, -8
 6497              		.cfi_offset 14, -4
 6498 0002 84B0     		sub	sp, sp, #16
 6499              	.LCFI259:
 6500              		.cfi_def_cfa_offset 24
 6501 0004 00AF     		add	r7, sp, #0
 6502              	.LCFI260:
 6503              		.cfi_def_cfa_register 7
 6504 0006 7860     		str	r0, [r7, #4]
3414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6505              		.loc 1 3414 23
 6506 0008 7B68     		ldr	r3, [r7, #4]
 6507 000a 9B6A     		ldr	r3, [r3, #40]
 6508 000c FB60     		str	r3, [r7, #12]
3415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
 6509              		.loc 1 3417 7
 6510 000e 7B68     		ldr	r3, [r7, #4]
 6511 0010 1B68     		ldr	r3, [r3]
 6512 0012 1B68     		ldr	r3, [r3]
 6513 0014 03F02003 		and	r3, r3, #32
 6514              		.loc 1 3417 6
 6515 0018 002B     		cmp	r3, #0
 6516 001a 1ED1     		bne	.L355
3418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 6517              		.loc 1 3419 24
 6518 001c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccFXX6mG.s 			page 174


 6519 001e 0022     		movs	r2, #0
 6520 0020 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 6521              		.loc 1 3422 5
 6522 0024 FB68     		ldr	r3, [r7, #12]
 6523 0026 1B68     		ldr	r3, [r3]
 6524 0028 1A68     		ldr	r2, [r3]
 6525 002a FB68     		ldr	r3, [r7, #12]
 6526 002c 1B68     		ldr	r3, [r3]
 6527 002e 22F48072 		bic	r2, r2, #256
 6528 0032 1A60     		str	r2, [r3]
3423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6529              		.loc 1 3423 5
 6530 0034 FB68     		ldr	r3, [r7, #12]
 6531 0036 1B68     		ldr	r3, [r3]
 6532 0038 9A68     		ldr	r2, [r3, #8]
 6533 003a FB68     		ldr	r3, [r7, #12]
 6534 003c 1B68     		ldr	r3, [r3]
 6535 003e 22F00102 		bic	r2, r2, #1
 6536 0042 9A60     		str	r2, [r3, #8]
3424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 6537              		.loc 1 3427 5
 6538 0044 FB68     		ldr	r3, [r7, #12]
 6539 0046 1B68     		ldr	r3, [r3]
 6540 0048 9A68     		ldr	r2, [r3, #8]
 6541 004a FB68     		ldr	r3, [r7, #12]
 6542 004c 1B68     		ldr	r3, [r3]
 6543 004e 22F04002 		bic	r2, r2, #64
 6544 0052 9A60     		str	r2, [r3, #8]
3428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 6545              		.loc 1 3430 20
 6546 0054 FB68     		ldr	r3, [r7, #12]
 6547 0056 2022     		movs	r2, #32
 6548 0058 9A67     		str	r2, [r3, #120]
 6549              	.L355:
3431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 6550              		.loc 1 3438 3
 6551 005a F868     		ldr	r0, [r7, #12]
 6552 005c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6553              		.loc 1 3440 1
 6554 0060 00BF     		nop
ARM GAS  /tmp/ccFXX6mG.s 			page 175


 6555 0062 1037     		adds	r7, r7, #16
 6556              	.LCFI261:
 6557              		.cfi_def_cfa_offset 8
 6558 0064 BD46     		mov	sp, r7
 6559              	.LCFI262:
 6560              		.cfi_def_cfa_register 13
 6561              		@ sp needed
 6562 0066 80BD     		pop	{r7, pc}
 6563              		.cfi_endproc
 6564              	.LFE177:
 6566              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 6567              		.align	1
 6568              		.syntax unified
 6569              		.thumb
 6570              		.thumb_func
 6571              		.fpu fpv4-sp-d16
 6573              	UART_DMARxHalfCplt:
 6574              	.LFB178:
3441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6575              		.loc 1 3448 1
 6576              		.cfi_startproc
 6577              		@ args = 0, pretend = 0, frame = 16
 6578              		@ frame_needed = 1, uses_anonymous_args = 0
 6579 0000 80B5     		push	{r7, lr}
 6580              	.LCFI263:
 6581              		.cfi_def_cfa_offset 8
 6582              		.cfi_offset 7, -8
 6583              		.cfi_offset 14, -4
 6584 0002 84B0     		sub	sp, sp, #16
 6585              	.LCFI264:
 6586              		.cfi_def_cfa_offset 24
 6587 0004 00AF     		add	r7, sp, #0
 6588              	.LCFI265:
 6589              		.cfi_def_cfa_register 7
 6590 0006 7860     		str	r0, [r7, #4]
3449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6591              		.loc 1 3449 23
 6592 0008 7B68     		ldr	r3, [r7, #4]
 6593 000a 9B6A     		ldr	r3, [r3, #40]
 6594 000c FB60     		str	r3, [r7, #12]
3450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 6595              		.loc 1 3456 3
 6596 000e F868     		ldr	r0, [r7, #12]
 6597 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
ARM GAS  /tmp/ccFXX6mG.s 			page 176


3457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6598              		.loc 1 3458 1
 6599 0014 00BF     		nop
 6600 0016 1037     		adds	r7, r7, #16
 6601              	.LCFI266:
 6602              		.cfi_def_cfa_offset 8
 6603 0018 BD46     		mov	sp, r7
 6604              	.LCFI267:
 6605              		.cfi_def_cfa_register 13
 6606              		@ sp needed
 6607 001a 80BD     		pop	{r7, pc}
 6608              		.cfi_endproc
 6609              	.LFE178:
 6611              		.section	.text.UART_DMAError,"ax",%progbits
 6612              		.align	1
 6613              		.syntax unified
 6614              		.thumb
 6615              		.thumb_func
 6616              		.fpu fpv4-sp-d16
 6618              	UART_DMAError:
 6619              	.LFB179:
3459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6620              		.loc 1 3466 1
 6621              		.cfi_startproc
 6622              		@ args = 0, pretend = 0, frame = 24
 6623              		@ frame_needed = 1, uses_anonymous_args = 0
 6624 0000 80B5     		push	{r7, lr}
 6625              	.LCFI268:
 6626              		.cfi_def_cfa_offset 8
 6627              		.cfi_offset 7, -8
 6628              		.cfi_offset 14, -4
 6629 0002 86B0     		sub	sp, sp, #24
 6630              	.LCFI269:
 6631              		.cfi_def_cfa_offset 32
 6632 0004 00AF     		add	r7, sp, #0
 6633              	.LCFI270:
 6634              		.cfi_def_cfa_register 7
 6635 0006 7860     		str	r0, [r7, #4]
3467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6636              		.loc 1 3467 23
 6637 0008 7B68     		ldr	r3, [r7, #4]
 6638 000a 9B6A     		ldr	r3, [r3, #40]
 6639 000c 7B61     		str	r3, [r7, #20]
3468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 6640              		.loc 1 3469 31
 6641 000e 7B69     		ldr	r3, [r7, #20]
 6642 0010 5B6F     		ldr	r3, [r3, #116]
 6643 0012 3B61     		str	r3, [r7, #16]
ARM GAS  /tmp/ccFXX6mG.s 			page 177


3470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 6644              		.loc 1 3470 31
 6645 0014 7B69     		ldr	r3, [r7, #20]
 6646 0016 9B6F     		ldr	r3, [r3, #120]
 6647 0018 FB60     		str	r3, [r7, #12]
3471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 6648              		.loc 1 3473 8
 6649 001a 7B69     		ldr	r3, [r7, #20]
 6650 001c 1B68     		ldr	r3, [r3]
 6651 001e 9B68     		ldr	r3, [r3, #8]
 6652 0020 03F08003 		and	r3, r3, #128
 6653              		.loc 1 3473 6
 6654 0024 802B     		cmp	r3, #128
 6655 0026 09D1     		bne	.L358
 6656              		.loc 1 3473 62 discriminator 1
 6657 0028 3B69     		ldr	r3, [r7, #16]
 6658 002a 212B     		cmp	r3, #33
 6659 002c 06D1     		bne	.L358
3474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 6660              		.loc 1 3476 24
 6661 002e 7B69     		ldr	r3, [r7, #20]
 6662 0030 0022     		movs	r2, #0
 6663 0032 A3F85220 		strh	r2, [r3, #82]	@ movhi
3477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 6664              		.loc 1 3477 5
 6665 0036 7869     		ldr	r0, [r7, #20]
 6666 0038 FFF7FEFF 		bl	UART_EndTxTransfer
 6667              	.L358:
3478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 6668              		.loc 1 3481 8
 6669 003c 7B69     		ldr	r3, [r7, #20]
 6670 003e 1B68     		ldr	r3, [r3]
 6671 0040 9B68     		ldr	r3, [r3, #8]
 6672 0042 03F04003 		and	r3, r3, #64
 6673              		.loc 1 3481 6
 6674 0046 402B     		cmp	r3, #64
 6675 0048 09D1     		bne	.L359
 6676              		.loc 1 3481 62 discriminator 1
 6677 004a FB68     		ldr	r3, [r7, #12]
 6678 004c 222B     		cmp	r3, #34
 6679 004e 06D1     		bne	.L359
3482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 6680              		.loc 1 3484 24
 6681 0050 7B69     		ldr	r3, [r7, #20]
 6682 0052 0022     		movs	r2, #0
 6683 0054 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 6684              		.loc 1 3485 5
ARM GAS  /tmp/ccFXX6mG.s 			page 178


 6685 0058 7869     		ldr	r0, [r7, #20]
 6686 005a FFF7FEFF 		bl	UART_EndRxTransfer
 6687              	.L359:
3486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 6688              		.loc 1 3488 20
 6689 005e 7B69     		ldr	r3, [r7, #20]
 6690 0060 DB6F     		ldr	r3, [r3, #124]
 6691 0062 43F01002 		orr	r2, r3, #16
 6692 0066 7B69     		ldr	r3, [r7, #20]
 6693 0068 DA67     		str	r2, [r3, #124]
3489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
3492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 6694              		.loc 1 3495 3
 6695 006a 7869     		ldr	r0, [r7, #20]
 6696 006c FFF7FEFF 		bl	HAL_UART_ErrorCallback
3496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6697              		.loc 1 3497 1
 6698 0070 00BF     		nop
 6699 0072 1837     		adds	r7, r7, #24
 6700              	.LCFI271:
 6701              		.cfi_def_cfa_offset 8
 6702 0074 BD46     		mov	sp, r7
 6703              	.LCFI272:
 6704              		.cfi_def_cfa_register 13
 6705              		@ sp needed
 6706 0076 80BD     		pop	{r7, pc}
 6707              		.cfi_endproc
 6708              	.LFE179:
 6710              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 6711              		.align	1
 6712              		.syntax unified
 6713              		.thumb
 6714              		.thumb_func
 6715              		.fpu fpv4-sp-d16
 6717              	UART_DMAAbortOnError:
 6718              	.LFB180:
3498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6719              		.loc 1 3506 1
 6720              		.cfi_startproc
 6721              		@ args = 0, pretend = 0, frame = 16
 6722              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccFXX6mG.s 			page 179


 6723 0000 80B5     		push	{r7, lr}
 6724              	.LCFI273:
 6725              		.cfi_def_cfa_offset 8
 6726              		.cfi_offset 7, -8
 6727              		.cfi_offset 14, -4
 6728 0002 84B0     		sub	sp, sp, #16
 6729              	.LCFI274:
 6730              		.cfi_def_cfa_offset 24
 6731 0004 00AF     		add	r7, sp, #0
 6732              	.LCFI275:
 6733              		.cfi_def_cfa_register 7
 6734 0006 7860     		str	r0, [r7, #4]
3507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6735              		.loc 1 3507 23
 6736 0008 7B68     		ldr	r3, [r7, #4]
 6737 000a 9B6A     		ldr	r3, [r3, #40]
 6738 000c FB60     		str	r3, [r7, #12]
3508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 6739              		.loc 1 3508 22
 6740 000e FB68     		ldr	r3, [r7, #12]
 6741 0010 0022     		movs	r2, #0
 6742 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 6743              		.loc 1 3509 22
 6744 0016 FB68     		ldr	r3, [r7, #12]
 6745 0018 0022     		movs	r2, #0
 6746 001a A3F85220 		strh	r2, [r3, #82]	@ movhi
3510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
3513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 6747              		.loc 1 3516 3
 6748 001e F868     		ldr	r0, [r7, #12]
 6749 0020 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6750              		.loc 1 3518 1
 6751 0024 00BF     		nop
 6752 0026 1037     		adds	r7, r7, #16
 6753              	.LCFI276:
 6754              		.cfi_def_cfa_offset 8
 6755 0028 BD46     		mov	sp, r7
 6756              	.LCFI277:
 6757              		.cfi_def_cfa_register 13
 6758              		@ sp needed
 6759 002a 80BD     		pop	{r7, pc}
 6760              		.cfi_endproc
 6761              	.LFE180:
 6763              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 6764              		.align	1
 6765              		.syntax unified
 6766              		.thumb
 6767              		.thumb_func
 6768              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccFXX6mG.s 			page 180


 6770              	UART_DMATxAbortCallback:
 6771              	.LFB181:
3519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6772              		.loc 1 3529 1
 6773              		.cfi_startproc
 6774              		@ args = 0, pretend = 0, frame = 16
 6775              		@ frame_needed = 1, uses_anonymous_args = 0
 6776 0000 80B5     		push	{r7, lr}
 6777              	.LCFI278:
 6778              		.cfi_def_cfa_offset 8
 6779              		.cfi_offset 7, -8
 6780              		.cfi_offset 14, -4
 6781 0002 84B0     		sub	sp, sp, #16
 6782              	.LCFI279:
 6783              		.cfi_def_cfa_offset 24
 6784 0004 00AF     		add	r7, sp, #0
 6785              	.LCFI280:
 6786              		.cfi_def_cfa_register 7
 6787 0006 7860     		str	r0, [r7, #4]
3530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6788              		.loc 1 3530 23
 6789 0008 7B68     		ldr	r3, [r7, #4]
 6790 000a 9B6A     		ldr	r3, [r3, #40]
 6791 000c FB60     		str	r3, [r7, #12]
3531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 6792              		.loc 1 3532 8
 6793 000e FB68     		ldr	r3, [r7, #12]
 6794 0010 9B6E     		ldr	r3, [r3, #104]
 6795              		.loc 1 3532 36
 6796 0012 0022     		movs	r2, #0
 6797 0014 9A63     		str	r2, [r3, #56]
3533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 6798              		.loc 1 3535 12
 6799 0016 FB68     		ldr	r3, [r7, #12]
 6800 0018 DB6E     		ldr	r3, [r3, #108]
 6801              		.loc 1 3535 6
 6802 001a 002B     		cmp	r3, #0
 6803 001c 04D0     		beq	.L362
3536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 6804              		.loc 1 3537 14
 6805 001e FB68     		ldr	r3, [r7, #12]
 6806 0020 DB6E     		ldr	r3, [r3, #108]
 6807              		.loc 1 3537 22
ARM GAS  /tmp/ccFXX6mG.s 			page 181


 6808 0022 9B6B     		ldr	r3, [r3, #56]
 6809              		.loc 1 3537 8
 6810 0024 002B     		cmp	r3, #0
 6811 0026 18D1     		bne	.L364
 6812              	.L362:
3538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
3540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 6813              		.loc 1 3544 22
 6814 0028 FB68     		ldr	r3, [r7, #12]
 6815 002a 0022     		movs	r2, #0
 6816 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
3545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 6817              		.loc 1 3545 22
 6818 0030 FB68     		ldr	r3, [r7, #12]
 6819 0032 0022     		movs	r2, #0
 6820 0034 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
3548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 6821              		.loc 1 3548 20
 6822 0038 FB68     		ldr	r3, [r7, #12]
 6823 003a 0022     		movs	r2, #0
 6824 003c DA67     		str	r2, [r3, #124]
3549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 6825              		.loc 1 3551 3
 6826 003e FB68     		ldr	r3, [r7, #12]
 6827 0040 1B68     		ldr	r3, [r3]
 6828 0042 0F22     		movs	r2, #15
 6829 0044 1A62     		str	r2, [r3, #32]
3552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 6830              		.loc 1 3562 18
 6831 0046 FB68     		ldr	r3, [r7, #12]
 6832 0048 2022     		movs	r2, #32
 6833 004a 5A67     		str	r2, [r3, #116]
3563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6834              		.loc 1 3563 18
 6835 004c FB68     		ldr	r3, [r7, #12]
 6836 004e 2022     		movs	r2, #32
 6837 0050 9A67     		str	r2, [r3, #120]
3564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccFXX6mG.s 			page 182


3565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 6838              		.loc 1 3571 3
 6839 0052 F868     		ldr	r0, [r7, #12]
 6840 0054 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 6841 0058 00E0     		b	.L361
 6842              	.L364:
3539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6843              		.loc 1 3539 7
 6844 005a 00BF     		nop
 6845              	.L361:
3572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6846              		.loc 1 3573 1
 6847 005c 1037     		adds	r7, r7, #16
 6848              	.LCFI281:
 6849              		.cfi_def_cfa_offset 8
 6850 005e BD46     		mov	sp, r7
 6851              	.LCFI282:
 6852              		.cfi_def_cfa_register 13
 6853              		@ sp needed
 6854 0060 80BD     		pop	{r7, pc}
 6855              		.cfi_endproc
 6856              	.LFE181:
 6858              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 6859              		.align	1
 6860              		.syntax unified
 6861              		.thumb
 6862              		.thumb_func
 6863              		.fpu fpv4-sp-d16
 6865              	UART_DMARxAbortCallback:
 6866              	.LFB182:
3574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6867              		.loc 1 3585 1
 6868              		.cfi_startproc
 6869              		@ args = 0, pretend = 0, frame = 16
 6870              		@ frame_needed = 1, uses_anonymous_args = 0
 6871 0000 80B5     		push	{r7, lr}
 6872              	.LCFI283:
 6873              		.cfi_def_cfa_offset 8
 6874              		.cfi_offset 7, -8
ARM GAS  /tmp/ccFXX6mG.s 			page 183


 6875              		.cfi_offset 14, -4
 6876 0002 84B0     		sub	sp, sp, #16
 6877              	.LCFI284:
 6878              		.cfi_def_cfa_offset 24
 6879 0004 00AF     		add	r7, sp, #0
 6880              	.LCFI285:
 6881              		.cfi_def_cfa_register 7
 6882 0006 7860     		str	r0, [r7, #4]
3586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6883              		.loc 1 3586 23
 6884 0008 7B68     		ldr	r3, [r7, #4]
 6885 000a 9B6A     		ldr	r3, [r3, #40]
 6886 000c FB60     		str	r3, [r7, #12]
3587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 6887              		.loc 1 3588 8
 6888 000e FB68     		ldr	r3, [r7, #12]
 6889 0010 DB6E     		ldr	r3, [r3, #108]
 6890              		.loc 1 3588 36
 6891 0012 0022     		movs	r2, #0
 6892 0014 9A63     		str	r2, [r3, #56]
3589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 6893              		.loc 1 3591 12
 6894 0016 FB68     		ldr	r3, [r7, #12]
 6895 0018 9B6E     		ldr	r3, [r3, #104]
 6896              		.loc 1 3591 6
 6897 001a 002B     		cmp	r3, #0
 6898 001c 04D0     		beq	.L366
3592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 6899              		.loc 1 3593 14
 6900 001e FB68     		ldr	r3, [r7, #12]
 6901 0020 9B6E     		ldr	r3, [r3, #104]
 6902              		.loc 1 3593 22
 6903 0022 9B6B     		ldr	r3, [r3, #56]
 6904              		.loc 1 3593 8
 6905 0024 002B     		cmp	r3, #0
 6906 0026 22D1     		bne	.L368
 6907              	.L366:
3594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
3596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 6908              		.loc 1 3600 22
 6909 0028 FB68     		ldr	r3, [r7, #12]
 6910 002a 0022     		movs	r2, #0
 6911 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
3601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 6912              		.loc 1 3601 22
 6913 0030 FB68     		ldr	r3, [r7, #12]
 6914 0032 0022     		movs	r2, #0
 6915 0034 A3F85A20 		strh	r2, [r3, #90]	@ movhi
ARM GAS  /tmp/ccFXX6mG.s 			page 184


3602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
3604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 6916              		.loc 1 3604 20
 6917 0038 FB68     		ldr	r3, [r7, #12]
 6918 003a 0022     		movs	r2, #0
 6919 003c DA67     		str	r2, [r3, #124]
3605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 6920              		.loc 1 3607 3
 6921 003e FB68     		ldr	r3, [r7, #12]
 6922 0040 1B68     		ldr	r3, [r3]
 6923 0042 0F22     		movs	r2, #15
 6924 0044 1A62     		str	r2, [r3, #32]
3608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
3610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 6925              		.loc 1 3610 3
 6926 0046 FB68     		ldr	r3, [r7, #12]
 6927 0048 1B68     		ldr	r3, [r3]
 6928 004a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 6929 004c 9AB2     		uxth	r2, r3
 6930 004e FB68     		ldr	r3, [r7, #12]
 6931 0050 1B68     		ldr	r3, [r3]
 6932 0052 42F00802 		orr	r2, r2, #8
 6933 0056 92B2     		uxth	r2, r2
 6934 0058 1A83     		strh	r2, [r3, #24]	@ movhi
3611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 6935              		.loc 1 3613 18
 6936 005a FB68     		ldr	r3, [r7, #12]
 6937 005c 2022     		movs	r2, #32
 6938 005e 5A67     		str	r2, [r3, #116]
3614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6939              		.loc 1 3614 18
 6940 0060 FB68     		ldr	r3, [r7, #12]
 6941 0062 2022     		movs	r2, #32
 6942 0064 9A67     		str	r2, [r3, #120]
3615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 6943              		.loc 1 3622 3
 6944 0066 F868     		ldr	r0, [r7, #12]
 6945 0068 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 6946 006c 00E0     		b	.L365
 6947              	.L368:
3595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6948              		.loc 1 3595 7
 6949 006e 00BF     		nop
 6950              	.L365:
ARM GAS  /tmp/ccFXX6mG.s 			page 185


3623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6951              		.loc 1 3624 1
 6952 0070 1037     		adds	r7, r7, #16
 6953              	.LCFI286:
 6954              		.cfi_def_cfa_offset 8
 6955 0072 BD46     		mov	sp, r7
 6956              	.LCFI287:
 6957              		.cfi_def_cfa_register 13
 6958              		@ sp needed
 6959 0074 80BD     		pop	{r7, pc}
 6960              		.cfi_endproc
 6961              	.LFE182:
 6963              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 6964              		.align	1
 6965              		.syntax unified
 6966              		.thumb
 6967              		.thumb_func
 6968              		.fpu fpv4-sp-d16
 6970              	UART_DMATxOnlyAbortCallback:
 6971              	.LFB183:
3625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6972              		.loc 1 3636 1
 6973              		.cfi_startproc
 6974              		@ args = 0, pretend = 0, frame = 16
 6975              		@ frame_needed = 1, uses_anonymous_args = 0
 6976 0000 80B5     		push	{r7, lr}
 6977              	.LCFI288:
 6978              		.cfi_def_cfa_offset 8
 6979              		.cfi_offset 7, -8
 6980              		.cfi_offset 14, -4
 6981 0002 84B0     		sub	sp, sp, #16
 6982              	.LCFI289:
 6983              		.cfi_def_cfa_offset 24
 6984 0004 00AF     		add	r7, sp, #0
 6985              	.LCFI290:
 6986              		.cfi_def_cfa_register 7
 6987 0006 7860     		str	r0, [r7, #4]
3637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6988              		.loc 1 3637 23
 6989 0008 7B68     		ldr	r3, [r7, #4]
 6990 000a 9B6A     		ldr	r3, [r3, #40]
 6991 000c FB60     		str	r3, [r7, #12]
3638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 6992              		.loc 1 3639 22
ARM GAS  /tmp/ccFXX6mG.s 			page 186


 6993 000e FB68     		ldr	r3, [r7, #12]
 6994 0010 0022     		movs	r2, #0
 6995 0012 A3F85220 		strh	r2, [r3, #82]	@ movhi
3640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6996              		.loc 1 3650 17
 6997 0016 FB68     		ldr	r3, [r7, #12]
 6998 0018 2022     		movs	r2, #32
 6999 001a 5A67     		str	r2, [r3, #116]
3651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 7000              		.loc 1 3658 3
 7001 001c F868     		ldr	r0, [r7, #12]
 7002 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
3659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7003              		.loc 1 3660 1
 7004 0022 00BF     		nop
 7005 0024 1037     		adds	r7, r7, #16
 7006              	.LCFI291:
 7007              		.cfi_def_cfa_offset 8
 7008 0026 BD46     		mov	sp, r7
 7009              	.LCFI292:
 7010              		.cfi_def_cfa_register 13
 7011              		@ sp needed
 7012 0028 80BD     		pop	{r7, pc}
 7013              		.cfi_endproc
 7014              	.LFE183:
 7016              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 7017              		.align	1
 7018              		.syntax unified
 7019              		.thumb
 7020              		.thumb_func
 7021              		.fpu fpv4-sp-d16
 7023              	UART_DMARxOnlyAbortCallback:
 7024              	.LFB184:
3661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
ARM GAS  /tmp/ccFXX6mG.s 			page 187


3667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7025              		.loc 1 3671 1
 7026              		.cfi_startproc
 7027              		@ args = 0, pretend = 0, frame = 16
 7028              		@ frame_needed = 1, uses_anonymous_args = 0
 7029 0000 80B5     		push	{r7, lr}
 7030              	.LCFI293:
 7031              		.cfi_def_cfa_offset 8
 7032              		.cfi_offset 7, -8
 7033              		.cfi_offset 14, -4
 7034 0002 84B0     		sub	sp, sp, #16
 7035              	.LCFI294:
 7036              		.cfi_def_cfa_offset 24
 7037 0004 00AF     		add	r7, sp, #0
 7038              	.LCFI295:
 7039              		.cfi_def_cfa_register 7
 7040 0006 7860     		str	r0, [r7, #4]
3672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7041              		.loc 1 3672 23
 7042 0008 7B68     		ldr	r3, [r7, #4]
 7043 000a 9B6A     		ldr	r3, [r3, #40]
 7044 000c FB60     		str	r3, [r7, #12]
3673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 7045              		.loc 1 3674 22
 7046 000e FB68     		ldr	r3, [r7, #12]
 7047 0010 0022     		movs	r2, #0
 7048 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 7049              		.loc 1 3677 3
 7050 0016 FB68     		ldr	r3, [r7, #12]
 7051 0018 1B68     		ldr	r3, [r3]
 7052 001a 0F22     		movs	r2, #15
 7053 001c 1A62     		str	r2, [r3, #32]
3678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
3680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 7054              		.loc 1 3680 3
 7055 001e FB68     		ldr	r3, [r7, #12]
 7056 0020 1B68     		ldr	r3, [r3]
 7057 0022 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 7058 0024 9AB2     		uxth	r2, r3
 7059 0026 FB68     		ldr	r3, [r7, #12]
 7060 0028 1B68     		ldr	r3, [r3]
 7061 002a 42F00802 		orr	r2, r2, #8
 7062 002e 92B2     		uxth	r2, r2
 7063 0030 1A83     		strh	r2, [r3, #24]	@ movhi
3681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 7064              		.loc 1 3683 18
ARM GAS  /tmp/ccFXX6mG.s 			page 188


 7065 0032 FB68     		ldr	r3, [r7, #12]
 7066 0034 2022     		movs	r2, #32
 7067 0036 9A67     		str	r2, [r3, #120]
3684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 7068              		.loc 1 3691 3
 7069 0038 F868     		ldr	r0, [r7, #12]
 7070 003a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
3692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7071              		.loc 1 3693 1
 7072 003e 00BF     		nop
 7073 0040 1037     		adds	r7, r7, #16
 7074              	.LCFI296:
 7075              		.cfi_def_cfa_offset 8
 7076 0042 BD46     		mov	sp, r7
 7077              	.LCFI297:
 7078              		.cfi_def_cfa_register 13
 7079              		@ sp needed
 7080 0044 80BD     		pop	{r7, pc}
 7081              		.cfi_endproc
 7082              	.LFE184:
 7084              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
 7085              		.align	1
 7086              		.syntax unified
 7087              		.thumb
 7088              		.thumb_func
 7089              		.fpu fpv4-sp-d16
 7091              	UART_TxISR_8BIT:
 7092              	.LFB185:
3694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7093              		.loc 1 3703 1
 7094              		.cfi_startproc
 7095              		@ args = 0, pretend = 0, frame = 8
 7096              		@ frame_needed = 1, uses_anonymous_args = 0
 7097              		@ link register save eliminated.
 7098 0000 80B4     		push	{r7}
 7099              	.LCFI298:
 7100              		.cfi_def_cfa_offset 4
 7101              		.cfi_offset 7, -4
 7102 0002 83B0     		sub	sp, sp, #12
 7103              	.LCFI299:
ARM GAS  /tmp/ccFXX6mG.s 			page 189


 7104              		.cfi_def_cfa_offset 16
 7105 0004 00AF     		add	r7, sp, #0
 7106              	.LCFI300:
 7107              		.cfi_def_cfa_register 7
 7108 0006 7860     		str	r0, [r7, #4]
3704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 7109              		.loc 1 3705 12
 7110 0008 7B68     		ldr	r3, [r7, #4]
 7111 000a 5B6F     		ldr	r3, [r3, #116]
 7112              		.loc 1 3705 6
 7113 000c 212B     		cmp	r3, #33
 7114 000e 2BD1     		bne	.L374
3706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 7115              		.loc 1 3707 14
 7116 0010 7B68     		ldr	r3, [r7, #4]
 7117 0012 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 7118 0016 9BB2     		uxth	r3, r3
 7119              		.loc 1 3707 8
 7120 0018 002B     		cmp	r3, #0
 7121 001a 10D1     		bne	.L373
3708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 7122              		.loc 1 3713 7
 7123 001c 7B68     		ldr	r3, [r7, #4]
 7124 001e 1B68     		ldr	r3, [r3]
 7125 0020 1A68     		ldr	r2, [r3]
 7126 0022 7B68     		ldr	r3, [r7, #4]
 7127 0024 1B68     		ldr	r3, [r3]
 7128 0026 22F08002 		bic	r2, r2, #128
 7129 002a 1A60     		str	r2, [r3]
3714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 7130              		.loc 1 3717 7
 7131 002c 7B68     		ldr	r3, [r7, #4]
 7132 002e 1B68     		ldr	r3, [r3]
 7133 0030 1A68     		ldr	r2, [r3]
 7134 0032 7B68     		ldr	r3, [r7, #4]
 7135 0034 1B68     		ldr	r3, [r3]
 7136 0036 42F04002 		orr	r2, r2, #64
 7137 003a 1A60     		str	r2, [r3]
3718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
3723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
3724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
ARM GAS  /tmp/ccFXX6mG.s 			page 190


 7138              		.loc 1 3726 1
 7139 003c 14E0     		b	.L374
 7140              	.L373:
3721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7141              		.loc 1 3721 46
 7142 003e 7B68     		ldr	r3, [r7, #4]
 7143 0040 DB6C     		ldr	r3, [r3, #76]
3721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7144              		.loc 1 3721 40
 7145 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
3721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7146              		.loc 1 3721 12
 7147 0044 7B68     		ldr	r3, [r7, #4]
 7148 0046 1B68     		ldr	r3, [r3]
3721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7149              		.loc 1 3721 30
 7150 0048 92B2     		uxth	r2, r2
3721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7151              		.loc 1 3721 28
 7152 004a 1A85     		strh	r2, [r3, #40]	@ movhi
3722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 7153              		.loc 1 3722 12
 7154 004c 7B68     		ldr	r3, [r7, #4]
 7155 004e DB6C     		ldr	r3, [r3, #76]
3722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 7156              		.loc 1 3722 24
 7157 0050 5A1C     		adds	r2, r3, #1
 7158 0052 7B68     		ldr	r3, [r7, #4]
 7159 0054 DA64     		str	r2, [r3, #76]
3723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 7160              		.loc 1 3723 12
 7161 0056 7B68     		ldr	r3, [r7, #4]
 7162 0058 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 7163 005c 9BB2     		uxth	r3, r3
3723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 7164              		.loc 1 3723 25
 7165 005e 013B     		subs	r3, r3, #1
 7166 0060 9AB2     		uxth	r2, r3
 7167 0062 7B68     		ldr	r3, [r7, #4]
 7168 0064 A3F85220 		strh	r2, [r3, #82]	@ movhi
 7169              	.L374:
 7170              		.loc 1 3726 1
 7171 0068 00BF     		nop
 7172 006a 0C37     		adds	r7, r7, #12
 7173              	.LCFI301:
 7174              		.cfi_def_cfa_offset 4
 7175 006c BD46     		mov	sp, r7
 7176              	.LCFI302:
 7177              		.cfi_def_cfa_register 13
 7178              		@ sp needed
 7179 006e 5DF8047B 		ldr	r7, [sp], #4
 7180              	.LCFI303:
 7181              		.cfi_restore 7
 7182              		.cfi_def_cfa_offset 0
 7183 0072 7047     		bx	lr
 7184              		.cfi_endproc
 7185              	.LFE185:
ARM GAS  /tmp/ccFXX6mG.s 			page 191


 7187              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 7188              		.align	1
 7189              		.syntax unified
 7190              		.thumb
 7191              		.thumb_func
 7192              		.fpu fpv4-sp-d16
 7194              	UART_TxISR_16BIT:
 7195              	.LFB186:
3727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7196              		.loc 1 3736 1
 7197              		.cfi_startproc
 7198              		@ args = 0, pretend = 0, frame = 16
 7199              		@ frame_needed = 1, uses_anonymous_args = 0
 7200              		@ link register save eliminated.
 7201 0000 80B4     		push	{r7}
 7202              	.LCFI304:
 7203              		.cfi_def_cfa_offset 4
 7204              		.cfi_offset 7, -4
 7205 0002 85B0     		sub	sp, sp, #20
 7206              	.LCFI305:
 7207              		.cfi_def_cfa_offset 24
 7208 0004 00AF     		add	r7, sp, #0
 7209              	.LCFI306:
 7210              		.cfi_def_cfa_register 7
 7211 0006 7860     		str	r0, [r7, #4]
3737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
3738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 7212              		.loc 1 3740 12
 7213 0008 7B68     		ldr	r3, [r7, #4]
 7214 000a 5B6F     		ldr	r3, [r3, #116]
 7215              		.loc 1 3740 6
 7216 000c 212B     		cmp	r3, #33
 7217 000e 2FD1     		bne	.L378
3741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 7218              		.loc 1 3742 14
 7219 0010 7B68     		ldr	r3, [r7, #4]
 7220 0012 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 7221 0016 9BB2     		uxth	r3, r3
 7222              		.loc 1 3742 8
 7223 0018 002B     		cmp	r3, #0
 7224 001a 10D1     		bne	.L377
3743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
ARM GAS  /tmp/ccFXX6mG.s 			page 192


3747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 7225              		.loc 1 3748 7
 7226 001c 7B68     		ldr	r3, [r7, #4]
 7227 001e 1B68     		ldr	r3, [r3]
 7228 0020 1A68     		ldr	r2, [r3]
 7229 0022 7B68     		ldr	r3, [r7, #4]
 7230 0024 1B68     		ldr	r3, [r3]
 7231 0026 22F08002 		bic	r2, r2, #128
 7232 002a 1A60     		str	r2, [r3]
3749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 7233              		.loc 1 3752 7
 7234 002c 7B68     		ldr	r3, [r7, #4]
 7235 002e 1B68     		ldr	r3, [r3]
 7236 0030 1A68     		ldr	r2, [r3]
 7237 0032 7B68     		ldr	r3, [r7, #4]
 7238 0034 1B68     		ldr	r3, [r3]
 7239 0036 42F04002 		orr	r2, r2, #64
 7240 003a 1A60     		str	r2, [r3]
3753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
3757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
3759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
3760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7241              		.loc 1 3762 1
 7242 003c 18E0     		b	.L378
 7243              	.L377:
3756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 7244              		.loc 1 3756 11
 7245 003e 7B68     		ldr	r3, [r7, #4]
 7246 0040 DB6C     		ldr	r3, [r3, #76]
 7247 0042 FB60     		str	r3, [r7, #12]
3757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 7248              		.loc 1 3757 43
 7249 0044 FB68     		ldr	r3, [r7, #12]
 7250 0046 1A88     		ldrh	r2, [r3]
3757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 7251              		.loc 1 3757 12
 7252 0048 7B68     		ldr	r3, [r7, #4]
 7253 004a 1B68     		ldr	r3, [r3]
3757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 7254              		.loc 1 3757 50
 7255 004c C2F30802 		ubfx	r2, r2, #0, #9
 7256 0050 92B2     		uxth	r2, r2
3757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 7257              		.loc 1 3757 28
 7258 0052 1A85     		strh	r2, [r3, #40]	@ movhi
3758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 7259              		.loc 1 3758 25
ARM GAS  /tmp/ccFXX6mG.s 			page 193


 7260 0054 7B68     		ldr	r3, [r7, #4]
 7261 0056 DB6C     		ldr	r3, [r3, #76]
 7262 0058 9A1C     		adds	r2, r3, #2
 7263 005a 7B68     		ldr	r3, [r7, #4]
 7264 005c DA64     		str	r2, [r3, #76]
3759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 7265              		.loc 1 3759 12
 7266 005e 7B68     		ldr	r3, [r7, #4]
 7267 0060 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 7268 0064 9BB2     		uxth	r3, r3
3759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 7269              		.loc 1 3759 25
 7270 0066 013B     		subs	r3, r3, #1
 7271 0068 9AB2     		uxth	r2, r3
 7272 006a 7B68     		ldr	r3, [r7, #4]
 7273 006c A3F85220 		strh	r2, [r3, #82]	@ movhi
 7274              	.L378:
 7275              		.loc 1 3762 1
 7276 0070 00BF     		nop
 7277 0072 1437     		adds	r7, r7, #20
 7278              	.LCFI307:
 7279              		.cfi_def_cfa_offset 4
 7280 0074 BD46     		mov	sp, r7
 7281              	.LCFI308:
 7282              		.cfi_def_cfa_register 13
 7283              		@ sp needed
 7284 0076 5DF8047B 		ldr	r7, [sp], #4
 7285              	.LCFI309:
 7286              		.cfi_restore 7
 7287              		.cfi_def_cfa_offset 0
 7288 007a 7047     		bx	lr
 7289              		.cfi_endproc
 7290              	.LFE186:
 7292              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 7293              		.align	1
 7294              		.syntax unified
 7295              		.thumb
 7296              		.thumb_func
 7297              		.fpu fpv4-sp-d16
 7299              	UART_EndTransmit_IT:
 7300              	.LFB187:
3763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
3767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  nb_tx_data;
3775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
3778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccFXX6mG.s 			page 194


3779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
3780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
3790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
3792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr++;
3795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
3796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Nothing to do */
3800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length and FIFO mode is enabled.
3807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
3813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
3815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  nb_tx_data;
3816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
3819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
3821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
3831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
3833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t *) huart->pTxBuffPtr;
3835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
ARM GAS  /tmp/ccFXX6mG.s 			page 195


3836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
3837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
3838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Nothing to do */
3842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7301              		.loc 1 3855 1
 7302              		.cfi_startproc
 7303              		@ args = 0, pretend = 0, frame = 8
 7304              		@ frame_needed = 1, uses_anonymous_args = 0
 7305 0000 80B5     		push	{r7, lr}
 7306              	.LCFI310:
 7307              		.cfi_def_cfa_offset 8
 7308              		.cfi_offset 7, -8
 7309              		.cfi_offset 14, -4
 7310 0002 82B0     		sub	sp, sp, #8
 7311              	.LCFI311:
 7312              		.cfi_def_cfa_offset 16
 7313 0004 00AF     		add	r7, sp, #0
 7314              	.LCFI312:
 7315              		.cfi_def_cfa_register 7
 7316 0006 7860     		str	r0, [r7, #4]
3856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 7317              		.loc 1 3857 3
 7318 0008 7B68     		ldr	r3, [r7, #4]
 7319 000a 1B68     		ldr	r3, [r3]
 7320 000c 1A68     		ldr	r2, [r3]
 7321 000e 7B68     		ldr	r3, [r7, #4]
 7322 0010 1B68     		ldr	r3, [r3]
 7323 0012 22F04002 		bic	r2, r2, #64
 7324 0016 1A60     		str	r2, [r3]
3858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7325              		.loc 1 3860 17
 7326 0018 7B68     		ldr	r3, [r7, #4]
 7327 001a 2022     		movs	r2, #32
 7328 001c 5A67     		str	r2, [r3, #116]
3861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 7329              		.loc 1 3863 16
ARM GAS  /tmp/ccFXX6mG.s 			page 196


 7330 001e 7B68     		ldr	r3, [r7, #4]
 7331 0020 0022     		movs	r2, #0
 7332 0022 5A66     		str	r2, [r3, #100]
3864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 7333              		.loc 1 3870 3
 7334 0024 7868     		ldr	r0, [r7, #4]
 7335 0026 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
3871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7336              		.loc 1 3872 1
 7337 002a 00BF     		nop
 7338 002c 0837     		adds	r7, r7, #8
 7339              	.LCFI313:
 7340              		.cfi_def_cfa_offset 8
 7341 002e BD46     		mov	sp, r7
 7342              	.LCFI314:
 7343              		.cfi_def_cfa_register 13
 7344              		@ sp needed
 7345 0030 80BD     		pop	{r7, pc}
 7346              		.cfi_endproc
 7347              	.LFE187:
 7349              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 7350              		.align	1
 7351              		.syntax unified
 7352              		.thumb
 7353              		.thumb_func
 7354              		.fpu fpv4-sp-d16
 7356              	UART_RxISR_8BIT:
 7357              	.LFB188:
3873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
3876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7358              		.loc 1 3880 1
 7359              		.cfi_startproc
 7360              		@ args = 0, pretend = 0, frame = 16
 7361              		@ frame_needed = 1, uses_anonymous_args = 0
 7362 0000 80B5     		push	{r7, lr}
 7363              	.LCFI315:
 7364              		.cfi_def_cfa_offset 8
 7365              		.cfi_offset 7, -8
 7366              		.cfi_offset 14, -4
 7367 0002 84B0     		sub	sp, sp, #16
 7368              	.LCFI316:
 7369              		.cfi_def_cfa_offset 24
 7370 0004 00AF     		add	r7, sp, #0
 7371              	.LCFI317:
ARM GAS  /tmp/ccFXX6mG.s 			page 197


 7372              		.cfi_def_cfa_register 7
 7373 0006 7860     		str	r0, [r7, #4]
3881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 7374              		.loc 1 3881 12
 7375 0008 7B68     		ldr	r3, [r7, #4]
 7376 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 7377 000e FB81     		strh	r3, [r7, #14]	@ movhi
3882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
3883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 7378              		.loc 1 3885 12
 7379 0010 7B68     		ldr	r3, [r7, #4]
 7380 0012 9B6F     		ldr	r3, [r3, #120]
 7381              		.loc 1 3885 6
 7382 0014 222B     		cmp	r3, #34
 7383 0016 3AD1     		bne	.L381
3886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 7384              		.loc 1 3887 25
 7385 0018 7B68     		ldr	r3, [r7, #4]
 7386 001a 1B68     		ldr	r3, [r3]
 7387              		.loc 1 3887 12
 7388 001c 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 7389 001e BB81     		strh	r3, [r7, #12]	@ movhi
3888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 7390              		.loc 1 3888 26
 7391 0020 BB89     		ldrh	r3, [r7, #12]	@ movhi
 7392 0022 D9B2     		uxtb	r1, r3
 7393              		.loc 1 3888 45
 7394 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7395 0026 DAB2     		uxtb	r2, r3
 7396              		.loc 1 3888 11
 7397 0028 7B68     		ldr	r3, [r7, #4]
 7398 002a 5B6D     		ldr	r3, [r3, #84]
 7399              		.loc 1 3888 26
 7400 002c 0A40     		ands	r2, r2, r1
 7401 002e D2B2     		uxtb	r2, r2
 7402              		.loc 1 3888 24
 7403 0030 1A70     		strb	r2, [r3]
3889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr++;
 7404              		.loc 1 3889 10
 7405 0032 7B68     		ldr	r3, [r7, #4]
 7406 0034 5B6D     		ldr	r3, [r3, #84]
 7407              		.loc 1 3889 22
 7408 0036 5A1C     		adds	r2, r3, #1
 7409 0038 7B68     		ldr	r3, [r7, #4]
 7410 003a 5A65     		str	r2, [r3, #84]
3890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
 7411              		.loc 1 3890 10
 7412 003c 7B68     		ldr	r3, [r7, #4]
 7413 003e B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 7414 0042 9BB2     		uxth	r3, r3
 7415              		.loc 1 3890 23
 7416 0044 013B     		subs	r3, r3, #1
 7417 0046 9AB2     		uxth	r2, r3
 7418 0048 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFXX6mG.s 			page 198


 7419 004a A3F85A20 		strh	r2, [r3, #90]	@ movhi
3891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 7420              		.loc 1 3892 14
 7421 004e 7B68     		ldr	r3, [r7, #4]
 7422 0050 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 7423 0054 9BB2     		uxth	r3, r3
 7424              		.loc 1 3892 8
 7425 0056 002B     		cmp	r3, #0
 7426 0058 23D1     		bne	.L384
3893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 7427              		.loc 1 3898 7
 7428 005a 7B68     		ldr	r3, [r7, #4]
 7429 005c 1B68     		ldr	r3, [r3]
 7430 005e 1A68     		ldr	r2, [r3]
 7431 0060 7B68     		ldr	r3, [r7, #4]
 7432 0062 1B68     		ldr	r3, [r3]
 7433 0064 22F49072 		bic	r2, r2, #288
 7434 0068 1A60     		str	r2, [r3]
3899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7435              		.loc 1 3902 7
 7436 006a 7B68     		ldr	r3, [r7, #4]
 7437 006c 1B68     		ldr	r3, [r3]
 7438 006e 9A68     		ldr	r2, [r3, #8]
 7439 0070 7B68     		ldr	r3, [r7, #4]
 7440 0072 1B68     		ldr	r3, [r3]
 7441 0074 22F00102 		bic	r2, r2, #1
 7442 0078 9A60     		str	r2, [r3, #8]
3903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 7443              		.loc 1 3905 22
 7444 007a 7B68     		ldr	r3, [r7, #4]
 7445 007c 2022     		movs	r2, #32
 7446 007e 9A67     		str	r2, [r3, #120]
3906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
 7447              		.loc 1 3908 20
 7448 0080 7B68     		ldr	r3, [r7, #4]
 7449 0082 0022     		movs	r2, #0
 7450 0084 1A66     		str	r2, [r3, #96]
3909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
ARM GAS  /tmp/ccFXX6mG.s 			page 199


 7451              		.loc 1 3915 7
 7452 0086 7868     		ldr	r0, [r7, #4]
 7453 0088 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7454              		.loc 1 3924 1
 7455 008c 09E0     		b	.L384
 7456              	.L381:
3922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7457              		.loc 1 3922 5
 7458 008e 7B68     		ldr	r3, [r7, #4]
 7459 0090 1B68     		ldr	r3, [r3]
 7460 0092 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 7461 0094 9AB2     		uxth	r2, r3
 7462 0096 7B68     		ldr	r3, [r7, #4]
 7463 0098 1B68     		ldr	r3, [r3]
 7464 009a 42F00802 		orr	r2, r2, #8
 7465 009e 92B2     		uxth	r2, r2
 7466 00a0 1A83     		strh	r2, [r3, #24]	@ movhi
 7467              	.L384:
 7468              		.loc 1 3924 1
 7469 00a2 00BF     		nop
 7470 00a4 1037     		adds	r7, r7, #16
 7471              	.LCFI318:
 7472              		.cfi_def_cfa_offset 8
 7473 00a6 BD46     		mov	sp, r7
 7474              	.LCFI319:
 7475              		.cfi_def_cfa_register 13
 7476              		@ sp needed
 7477 00a8 80BD     		pop	{r7, pc}
 7478              		.cfi_endproc
 7479              	.LFE188:
 7481              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 7482              		.align	1
 7483              		.syntax unified
 7484              		.thumb
 7485              		.thumb_func
 7486              		.fpu fpv4-sp-d16
 7488              	UART_RxISR_16BIT:
 7489              	.LFB189:
3925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
3928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
ARM GAS  /tmp/ccFXX6mG.s 			page 200


 7490              		.loc 1 3934 1
 7491              		.cfi_startproc
 7492              		@ args = 0, pretend = 0, frame = 16
 7493              		@ frame_needed = 1, uses_anonymous_args = 0
 7494 0000 80B5     		push	{r7, lr}
 7495              	.LCFI320:
 7496              		.cfi_def_cfa_offset 8
 7497              		.cfi_offset 7, -8
 7498              		.cfi_offset 14, -4
 7499 0002 84B0     		sub	sp, sp, #16
 7500              	.LCFI321:
 7501              		.cfi_def_cfa_offset 24
 7502 0004 00AF     		add	r7, sp, #0
 7503              	.LCFI322:
 7504              		.cfi_def_cfa_register 7
 7505 0006 7860     		str	r0, [r7, #4]
3935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
3936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 7506              		.loc 1 3936 12
 7507 0008 7B68     		ldr	r3, [r7, #4]
 7508 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 7509 000e FB81     		strh	r3, [r7, #14]	@ movhi
3937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
3938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 7510              		.loc 1 3940 12
 7511 0010 7B68     		ldr	r3, [r7, #4]
 7512 0012 9B6F     		ldr	r3, [r3, #120]
 7513              		.loc 1 3940 6
 7514 0014 222B     		cmp	r3, #34
 7515 0016 3AD1     		bne	.L386
3941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 7516              		.loc 1 3942 25
 7517 0018 7B68     		ldr	r3, [r7, #4]
 7518 001a 1B68     		ldr	r3, [r3]
 7519              		.loc 1 3942 12
 7520 001c 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 7521 001e BB81     		strh	r3, [r7, #12]	@ movhi
3943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 7522              		.loc 1 3943 9
 7523 0020 7B68     		ldr	r3, [r7, #4]
 7524 0022 5B6D     		ldr	r3, [r3, #84]
 7525 0024 BB60     		str	r3, [r7, #8]
3944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 7526              		.loc 1 3944 12
 7527 0026 BA89     		ldrh	r2, [r7, #12]	@ movhi
 7528 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7529 002a 1340     		ands	r3, r3, r2
 7530 002c 9AB2     		uxth	r2, r3
 7531              		.loc 1 3944 10
 7532 002e BB68     		ldr	r3, [r7, #8]
 7533 0030 1A80     		strh	r2, [r3]	@ movhi
3945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 7534              		.loc 1 3945 23
 7535 0032 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFXX6mG.s 			page 201


 7536 0034 5B6D     		ldr	r3, [r3, #84]
 7537 0036 9A1C     		adds	r2, r3, #2
 7538 0038 7B68     		ldr	r3, [r7, #4]
 7539 003a 5A65     		str	r2, [r3, #84]
3946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
 7540              		.loc 1 3946 10
 7541 003c 7B68     		ldr	r3, [r7, #4]
 7542 003e B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 7543 0042 9BB2     		uxth	r3, r3
 7544              		.loc 1 3946 23
 7545 0044 013B     		subs	r3, r3, #1
 7546 0046 9AB2     		uxth	r2, r3
 7547 0048 7B68     		ldr	r3, [r7, #4]
 7548 004a A3F85A20 		strh	r2, [r3, #90]	@ movhi
3947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 7549              		.loc 1 3948 14
 7550 004e 7B68     		ldr	r3, [r7, #4]
 7551 0050 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 7552 0054 9BB2     		uxth	r3, r3
 7553              		.loc 1 3948 8
 7554 0056 002B     		cmp	r3, #0
 7555 0058 23D1     		bne	.L389
3949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 7556              		.loc 1 3954 7
 7557 005a 7B68     		ldr	r3, [r7, #4]
 7558 005c 1B68     		ldr	r3, [r3]
 7559 005e 1A68     		ldr	r2, [r3]
 7560 0060 7B68     		ldr	r3, [r7, #4]
 7561 0062 1B68     		ldr	r3, [r3]
 7562 0064 22F49072 		bic	r2, r2, #288
 7563 0068 1A60     		str	r2, [r3]
3955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7564              		.loc 1 3958 7
 7565 006a 7B68     		ldr	r3, [r7, #4]
 7566 006c 1B68     		ldr	r3, [r3]
 7567 006e 9A68     		ldr	r2, [r3, #8]
 7568 0070 7B68     		ldr	r3, [r7, #4]
 7569 0072 1B68     		ldr	r3, [r3]
 7570 0074 22F00102 		bic	r2, r2, #1
 7571 0078 9A60     		str	r2, [r3, #8]
3959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 7572              		.loc 1 3961 22
 7573 007a 7B68     		ldr	r3, [r7, #4]
 7574 007c 2022     		movs	r2, #32
 7575 007e 9A67     		str	r2, [r3, #120]
3962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccFXX6mG.s 			page 202


3963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
 7576              		.loc 1 3964 20
 7577 0080 7B68     		ldr	r3, [r7, #4]
 7578 0082 0022     		movs	r2, #0
 7579 0084 1A66     		str	r2, [r3, #96]
3965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 7580              		.loc 1 3971 7
 7581 0086 7868     		ldr	r0, [r7, #4]
 7582 0088 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7583              		.loc 1 3980 1
 7584 008c 09E0     		b	.L389
 7585              	.L386:
3978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7586              		.loc 1 3978 5
 7587 008e 7B68     		ldr	r3, [r7, #4]
 7588 0090 1B68     		ldr	r3, [r3]
 7589 0092 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 7590 0094 9AB2     		uxth	r2, r3
 7591 0096 7B68     		ldr	r3, [r7, #4]
 7592 0098 1B68     		ldr	r3, [r3]
 7593 009a 42F00802 		orr	r2, r2, #8
 7594 009e 92B2     		uxth	r2, r2
 7595 00a0 1A83     		strh	r2, [r3, #24]	@ movhi
 7596              	.L389:
 7597              		.loc 1 3980 1
 7598 00a2 00BF     		nop
 7599 00a4 1037     		adds	r7, r7, #16
 7600              	.LCFI323:
 7601              		.cfi_def_cfa_offset 8
 7602 00a6 BD46     		mov	sp, r7
 7603              	.LCFI324:
 7604              		.cfi_def_cfa_register 13
 7605              		@ sp needed
 7606 00a8 80BD     		pop	{r7, pc}
 7607              		.cfi_endproc
 7608              	.LFE189:
 7610              		.text
 7611              	.Letext0:
 7612              		.file 2 "/home/hung/opt/xPacks/@gnu-mcu-eclipse/arm-none-eabi-gcc/8.2.1-1.7.1/.content/arm-none-ea
 7613              		.file 3 "/home/hung/opt/xPacks/@gnu-mcu-eclipse/arm-none-eabi-gcc/8.2.1-1.7.1/.content/arm-none-ea
 7614              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccFXX6mG.s 			page 203


 7615              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 7616              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l496xx.h"
 7617              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 7618              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 7619              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 7620              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 7621              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 7622              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/ccFXX6mG.s 			page 204


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_uart.c
     /tmp/ccFXX6mG.s:18     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccFXX6mG.s:26     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccFXX6mG.s:694    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccFXX6mG.s:4810   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccFXX6mG.s:5802   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccFXX6mG.s:6014   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccFXX6mG.s:143    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccFXX6mG.s:150    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccFXX6mG.s:274    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccFXX6mG.s:281    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccFXX6mG.s:436    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccFXX6mG.s:443    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccFXX6mG.s:588    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccFXX6mG.s:595    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccFXX6mG.s:737    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccFXX6mG.s:687    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccFXX6mG.s:730    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccFXX6mG.s:773    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccFXX6mG.s:780    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccFXX6mG.s:6127   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccFXX6mG.s:997    .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccFXX6mG.s:1004   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccFXX6mG.s:1289   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccFXX6mG.s:1296   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccFXX6mG.s:1432   .text.HAL_UART_Transmit_IT:00000000000000b0 $d
     /tmp/ccFXX6mG.s:7194   .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/ccFXX6mG.s:7091   .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/ccFXX6mG.s:1438   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccFXX6mG.s:1445   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccFXX6mG.s:1660   .text.HAL_UART_Receive_IT:000000000000013c $d
     /tmp/ccFXX6mG.s:7488   .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/ccFXX6mG.s:7356   .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/ccFXX6mG.s:1666   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccFXX6mG.s:1673   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccFXX6mG.s:1850   .text.HAL_UART_Transmit_DMA:00000000000000ec $d
     /tmp/ccFXX6mG.s:6365   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccFXX6mG.s:6442   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccFXX6mG.s:6618   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccFXX6mG.s:1857   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccFXX6mG.s:1864   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccFXX6mG.s:2048   .text.HAL_UART_Receive_DMA:00000000000000fc $d
     /tmp/ccFXX6mG.s:6487   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccFXX6mG.s:6573   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccFXX6mG.s:2055   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccFXX6mG.s:2062   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccFXX6mG.s:2184   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccFXX6mG.s:2191   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccFXX6mG.s:2298   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccFXX6mG.s:2305   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccFXX6mG.s:6245   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccFXX6mG.s:6299   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccFXX6mG.s:2460   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccFXX6mG.s:2467   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccFXX6mG.s:2661   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccFXX6mG.s:2668   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
ARM GAS  /tmp/ccFXX6mG.s 			page 205


     /tmp/ccFXX6mG.s:2773   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccFXX6mG.s:2780   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccFXX6mG.s:2908   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccFXX6mG.s:2915   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccFXX6mG.s:4125   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccFXX6mG.s:3165   .text.HAL_UART_Abort_IT:0000000000000168 $d
     /tmp/ccFXX6mG.s:6770   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccFXX6mG.s:6865   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccFXX6mG.s:3171   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccFXX6mG.s:3178   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccFXX6mG.s:4168   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccFXX6mG.s:3303   .text.HAL_UART_AbortTransmit_IT:00000000000000a8 $d
     /tmp/ccFXX6mG.s:6970   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccFXX6mG.s:3308   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccFXX6mG.s:3315   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccFXX6mG.s:4211   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccFXX6mG.s:3468   .text.HAL_UART_AbortReceive_IT:00000000000000dc $d
     /tmp/ccFXX6mG.s:7023   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccFXX6mG.s:3473   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccFXX6mG.s:3480   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccFXX6mG.s:4082   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccFXX6mG.s:7299   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccFXX6mG.s:3898   .text.HAL_UART_IRQHandler:000000000000025c $d
     /tmp/ccFXX6mG.s:6717   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccFXX6mG.s:3903   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccFXX6mG.s:3910   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccFXX6mG.s:3946   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccFXX6mG.s:3953   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccFXX6mG.s:3989   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccFXX6mG.s:3996   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccFXX6mG.s:4032   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccFXX6mG.s:4039   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccFXX6mG.s:4075   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccFXX6mG.s:4118   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccFXX6mG.s:4161   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccFXX6mG.s:4204   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccFXX6mG.s:4247   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccFXX6mG.s:4254   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccFXX6mG.s:4320   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccFXX6mG.s:4327   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccFXX6mG.s:4393   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccFXX6mG.s:4400   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccFXX6mG.s:4446   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccFXX6mG.s:4453   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccFXX6mG.s:4533   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccFXX6mG.s:4540   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccFXX6mG.s:4620   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccFXX6mG.s:4627   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccFXX6mG.s:4701   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccFXX6mG.s:4708   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccFXX6mG.s:4756   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccFXX6mG.s:4763   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccFXX6mG.s:4803   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccFXX6mG.s:4930   .text.UART_SetConfig:00000000000000a4 $d
     /tmp/ccFXX6mG.s:4934   .text.UART_SetConfig:00000000000000b4 $t
     /tmp/ccFXX6mG.s:4978   .text.UART_SetConfig:00000000000000fc $d
     /tmp/ccFXX6mG.s:4991   .text.UART_SetConfig:0000000000000130 $t
ARM GAS  /tmp/ccFXX6mG.s 			page 206


     /tmp/ccFXX6mG.s:5242   .text.UART_SetConfig:00000000000002e4 $d
     /tmp/ccFXX6mG.s:5251   .text.UART_SetConfig:0000000000000308 $t
     /tmp/ccFXX6mG.s:5267   .text.UART_SetConfig:0000000000000318 $d
     /tmp/ccFXX6mG.s:5278   .text.UART_SetConfig:000000000000033c $t
     /tmp/ccFXX6mG.s:5333   .text.UART_SetConfig:000000000000038c $d
     /tmp/ccFXX6mG.s:5342   .text.UART_SetConfig:00000000000003b0 $t
     /tmp/ccFXX6mG.s:5500   .text.UART_SetConfig:00000000000004ec $d
     /tmp/ccFXX6mG.s:5509   .text.UART_SetConfig:0000000000000510 $t
     /tmp/ccFXX6mG.s:5648   .text.UART_SetConfig:00000000000005ec $d
     /tmp/ccFXX6mG.s:5657   .text.UART_SetConfig:0000000000000610 $t
     /tmp/ccFXX6mG.s:5790   .text.UART_SetConfig:00000000000006d4 $d
     /tmp/ccFXX6mG.s:5795   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccFXX6mG.s:6007   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccFXX6mG.s:6120   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccFXX6mG.s:6239   .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccFXX6mG.s:6293   .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccFXX6mG.s:6359   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccFXX6mG.s:6436   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccFXX6mG.s:6481   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccFXX6mG.s:6567   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccFXX6mG.s:6612   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccFXX6mG.s:6711   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccFXX6mG.s:6764   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccFXX6mG.s:6859   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccFXX6mG.s:6964   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccFXX6mG.s:7017   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccFXX6mG.s:7085   .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/ccFXX6mG.s:7188   .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/ccFXX6mG.s:7293   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccFXX6mG.s:7350   .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/ccFXX6mG.s:7482   .text.UART_RxISR_16BIT:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uldivmod
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
